Search.setIndex({"docnames": ["distributed", "fx", "index", "overview", "reference/generated/tensordict.LazyStackedTensorDict", "reference/generated/tensordict.MemoryMappedTensor", "reference/generated/tensordict.NonTensorData", "reference/generated/tensordict.NonTensorStack", "reference/generated/tensordict.PersistentTensorDict", "reference/generated/tensordict.TensorClass", "reference/generated/tensordict.TensorDict", "reference/generated/tensordict.TensorDictBase", "reference/generated/tensordict.TensorDictParams", "reference/generated/tensordict.capture_non_tensor_stack", "reference/generated/tensordict.cat", "reference/generated/tensordict.default_is_leaf", "reference/generated/tensordict.dense_stack_tds", "reference/generated/tensordict.from_any", "reference/generated/tensordict.from_consolidated", "reference/generated/tensordict.from_dataclass", "reference/generated/tensordict.from_dict", "reference/generated/tensordict.from_h5", "reference/generated/tensordict.from_module", "reference/generated/tensordict.from_modules", "reference/generated/tensordict.from_namedtuple", "reference/generated/tensordict.from_pytree", "reference/generated/tensordict.from_struct_array", "reference/generated/tensordict.from_tuple", "reference/generated/tensordict.fromkeys", "reference/generated/tensordict.get_defaults_to_none", "reference/generated/tensordict.is_batchedtensor", "reference/generated/tensordict.is_leaf_nontensor", "reference/generated/tensordict.is_tensor_collection", "reference/generated/tensordict.lazy_legacy", "reference/generated/tensordict.lazy_stack", "reference/generated/tensordict.load", "reference/generated/tensordict.load_memmap", "reference/generated/tensordict.make_tensordict", "reference/generated/tensordict.maybe_dense_stack", "reference/generated/tensordict.memmap", "reference/generated/tensordict.merge_tensordicts", "reference/generated/tensordict.nn.CudaGraphModule", "reference/generated/tensordict.nn.EnsembleModule", "reference/generated/tensordict.nn.ProbabilisticTensorDictModule", "reference/generated/tensordict.nn.ProbabilisticTensorDictSequential", "reference/generated/tensordict.nn.TensorDictModule", "reference/generated/tensordict.nn.TensorDictModuleBase", "reference/generated/tensordict.nn.TensorDictModuleWrapper", "reference/generated/tensordict.nn.TensorDictSequential", "reference/generated/tensordict.nn.WrapModule", "reference/generated/tensordict.nn.as_tensordict_module", "reference/generated/tensordict.nn.biased_softplus", "reference/generated/tensordict.nn.composite_lp_aggregate", "reference/generated/tensordict.nn.dispatch", "reference/generated/tensordict.nn.distributions.AddStateIndependentNormalScale", "reference/generated/tensordict.nn.distributions.CompositeDistribution", "reference/generated/tensordict.nn.distributions.Delta", "reference/generated/tensordict.nn.distributions.NormalParamExtractor", "reference/generated/tensordict.nn.distributions.OneHotCategorical", "reference/generated/tensordict.nn.distributions.TruncatedNormal", "reference/generated/tensordict.nn.inv_softplus", "reference/generated/tensordict.nn.make_tensordict", "reference/generated/tensordict.nn.rand_one_hot", "reference/generated/tensordict.nn.set_composite_lp_aggregate", "reference/generated/tensordict.nn.set_skip_existing", "reference/generated/tensordict.nn.skip_existing", "reference/generated/tensordict.pad", "reference/generated/tensordict.pad_sequence", "reference/generated/tensordict.parse_tensor_dict_string", "reference/generated/tensordict.save", "reference/generated/tensordict.set_capture_non_tensor_stack", "reference/generated/tensordict.set_lazy_legacy", "reference/generated/tensordict.stack", "reference/generated/tensordict.tensorclass", "reference/generated/tensordict.utils.expand_as_right", "reference/generated/tensordict.utils.expand_right", "reference/generated/tensordict.utils.isin", "reference/generated/tensordict.utils.remove_duplicates", "reference/index", "reference/nn", "reference/tensorclass", "reference/tensordict", "saving", "sg_execution_times", "tutorials/data_fashion", "tutorials/export", "tutorials/index", "tutorials/sg_execution_times", "tutorials/streamed_tensordict", "tutorials/tensorclass_fashion", "tutorials/tensorclass_imagenet", "tutorials/tensordict_keys", "tutorials/tensordict_memory", "tutorials/tensordict_module", "tutorials/tensordict_preallocation", "tutorials/tensordict_shapes", "tutorials/tensordict_slicing"], "filenames": ["distributed.rst", "fx.rst", "index.rst", "overview.rst", "reference/generated/tensordict.LazyStackedTensorDict.rst", "reference/generated/tensordict.MemoryMappedTensor.rst", "reference/generated/tensordict.NonTensorData.rst", "reference/generated/tensordict.NonTensorStack.rst", "reference/generated/tensordict.PersistentTensorDict.rst", "reference/generated/tensordict.TensorClass.rst", "reference/generated/tensordict.TensorDict.rst", "reference/generated/tensordict.TensorDictBase.rst", "reference/generated/tensordict.TensorDictParams.rst", "reference/generated/tensordict.capture_non_tensor_stack.rst", "reference/generated/tensordict.cat.rst", "reference/generated/tensordict.default_is_leaf.rst", "reference/generated/tensordict.dense_stack_tds.rst", "reference/generated/tensordict.from_any.rst", "reference/generated/tensordict.from_consolidated.rst", "reference/generated/tensordict.from_dataclass.rst", "reference/generated/tensordict.from_dict.rst", "reference/generated/tensordict.from_h5.rst", "reference/generated/tensordict.from_module.rst", "reference/generated/tensordict.from_modules.rst", "reference/generated/tensordict.from_namedtuple.rst", "reference/generated/tensordict.from_pytree.rst", "reference/generated/tensordict.from_struct_array.rst", "reference/generated/tensordict.from_tuple.rst", "reference/generated/tensordict.fromkeys.rst", "reference/generated/tensordict.get_defaults_to_none.rst", "reference/generated/tensordict.is_batchedtensor.rst", "reference/generated/tensordict.is_leaf_nontensor.rst", "reference/generated/tensordict.is_tensor_collection.rst", "reference/generated/tensordict.lazy_legacy.rst", "reference/generated/tensordict.lazy_stack.rst", "reference/generated/tensordict.load.rst", "reference/generated/tensordict.load_memmap.rst", "reference/generated/tensordict.make_tensordict.rst", "reference/generated/tensordict.maybe_dense_stack.rst", "reference/generated/tensordict.memmap.rst", "reference/generated/tensordict.merge_tensordicts.rst", "reference/generated/tensordict.nn.CudaGraphModule.rst", "reference/generated/tensordict.nn.EnsembleModule.rst", "reference/generated/tensordict.nn.ProbabilisticTensorDictModule.rst", "reference/generated/tensordict.nn.ProbabilisticTensorDictSequential.rst", "reference/generated/tensordict.nn.TensorDictModule.rst", "reference/generated/tensordict.nn.TensorDictModuleBase.rst", "reference/generated/tensordict.nn.TensorDictModuleWrapper.rst", "reference/generated/tensordict.nn.TensorDictSequential.rst", "reference/generated/tensordict.nn.WrapModule.rst", "reference/generated/tensordict.nn.as_tensordict_module.rst", "reference/generated/tensordict.nn.biased_softplus.rst", "reference/generated/tensordict.nn.composite_lp_aggregate.rst", "reference/generated/tensordict.nn.dispatch.rst", "reference/generated/tensordict.nn.distributions.AddStateIndependentNormalScale.rst", "reference/generated/tensordict.nn.distributions.CompositeDistribution.rst", "reference/generated/tensordict.nn.distributions.Delta.rst", "reference/generated/tensordict.nn.distributions.NormalParamExtractor.rst", "reference/generated/tensordict.nn.distributions.OneHotCategorical.rst", "reference/generated/tensordict.nn.distributions.TruncatedNormal.rst", "reference/generated/tensordict.nn.inv_softplus.rst", "reference/generated/tensordict.nn.make_tensordict.rst", "reference/generated/tensordict.nn.rand_one_hot.rst", "reference/generated/tensordict.nn.set_composite_lp_aggregate.rst", "reference/generated/tensordict.nn.set_skip_existing.rst", "reference/generated/tensordict.nn.skip_existing.rst", "reference/generated/tensordict.pad.rst", "reference/generated/tensordict.pad_sequence.rst", "reference/generated/tensordict.parse_tensor_dict_string.rst", "reference/generated/tensordict.save.rst", "reference/generated/tensordict.set_capture_non_tensor_stack.rst", "reference/generated/tensordict.set_lazy_legacy.rst", "reference/generated/tensordict.stack.rst", "reference/generated/tensordict.tensorclass.rst", "reference/generated/tensordict.utils.expand_as_right.rst", "reference/generated/tensordict.utils.expand_right.rst", "reference/generated/tensordict.utils.isin.rst", "reference/generated/tensordict.utils.remove_duplicates.rst", "reference/index.rst", "reference/nn.rst", "reference/tensorclass.rst", "reference/tensordict.rst", "saving.rst", "sg_execution_times.rst", "tutorials/data_fashion.rst", "tutorials/export.rst", "tutorials/index.rst", "tutorials/sg_execution_times.rst", "tutorials/streamed_tensordict.rst", "tutorials/tensorclass_fashion.rst", "tutorials/tensorclass_imagenet.rst", "tutorials/tensordict_keys.rst", "tutorials/tensordict_memory.rst", "tutorials/tensordict_module.rst", "tutorials/tensordict_preallocation.rst", "tutorials/tensordict_shapes.rst", "tutorials/tensordict_slicing.rst"], "titles": ["TensorDict in distributed settings", "Tracing TensorDictModule", "Welcome to the TensorDict Documentation!", "Overview", "LazyStackedTensorDict", "MemoryMappedTensor", "NonTensorData", "NonTensorStack", "PersistentTensorDict", "TensorClass", "TensorDict", "TensorDictBase", "TensorDictParams", "capture_non_tensor_stack", "cat", "default_is_leaf", "dense_stack_tds", "from_any", "from_consolidated", "from_dataclass", "from_dict", "from_h5", "from_module", "from_modules", "from_namedtuple", "from_pytree", "from_struct_array", "from_tuple", "fromkeys", "get_defaults_to_none", "is_batchedtensor", "is_leaf_nontensor", "is_tensor_collection", "lazy_legacy", "lazy_stack", "load", "load_memmap", "make_tensordict", "maybe_dense_stack", "memmap", "merge_tensordicts", "CudaGraphModule", "tensordict.nn.EnsembleModule", "ProbabilisticTensorDictModule", "ProbabilisticTensorDictSequential", "TensorDictModule", "TensorDictModuleBase", "TensorDictModuleWrapper", "TensorDictSequential", "WrapModule", "as_tensordict_module", "tensordict.nn.biased_softplus", "composite_lp_aggregate", "tensordict.nn.dispatch", "tensordict.nn.distributions.AddStateIndependentNormalScale", "tensordict.nn.distributions.CompositeDistribution", "tensordict.nn.distributions.Delta", "tensordict.nn.distributions.NormalParamExtractor", "tensordict.nn.distributions.OneHotCategorical", "tensordict.nn.distributions.TruncatedNormal", "tensordict.nn.inv_softplus", "tensordict.nn.make_tensordict", "tensordict.nn.rand_one_hot", "set_composite_lp_aggregate", "tensordict.nn.set_skip_existing", "tensordict.nn.skip_existing", "pad", "pad_sequence", "parse_tensor_dict_string", "save", "set_capture_non_tensor_stack", "set_lazy_legacy", "stack", "tensorclass", "expand_as_right", "expand_right", "isin", "remove_duplicates", "API Reference", "tensordict.nn package", "tensorclass", "tensordict package", "Saving TensorDict and tensorclass objects", "Computation times", "Using TensorDict for datasets", "Exporting tensordict modules", "README Tutos", "Computation times", "Building tensordicts from streams", "Using tensorclasses for datasets", "Batched data loading with tensorclasses", "Manipulating the keys of a TensorDict", "Simplifying PyTorch Memory Management with TensorDict", "TensorDictModule", "Pre-allocating memory with TensorDict", "Manipulating the shape of a TensorDict", "Slicing, Indexing, and Masking"], "terms": {"can": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 20, 22, 23, 36, 37, 41, 43, 44, 45, 46, 48, 50, 53, 54, 55, 57, 61, 63, 64, 70, 71, 73, 79, 80, 81, 82, 84, 85, 88, 89, 90, 91, 92, 93, 95, 96], "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 19, 20, 22, 23, 33, 36, 37, 39, 40, 41, 43, 44, 45, 46, 48, 49, 53, 54, 55, 57, 61, 64, 67, 68, 70, 73, 79, 80, 81, 83, 86, 87, 88, 90, 91, 92, 94, 96], "pass": [0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 12, 16, 19, 23, 25, 32, 40, 41, 43, 44, 45, 47, 48, 49, 51, 53, 55, 79, 81, 82, 84, 85, 88, 89, 92, 93], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 18, 19, 22, 23, 25, 28, 32, 35, 36, 37, 40, 42, 43, 44, 45, 46, 48, 49, 53, 54, 55, 57, 61, 63, 64, 66, 73, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96], "one": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 25, 41, 43, 44, 45, 46, 47, 48, 49, 53, 54, 57, 58, 64, 77, 79, 80, 81, 82, 84, 85, 88, 89, 90, 91, 92, 93, 95], "anoth": [0, 3, 4, 5, 7, 8, 10, 11, 12, 45, 53, 74, 77, 82, 88, 91, 93, 95], "If": [0, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 16, 19, 23, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 51, 53, 55, 61, 64, 67, 70, 77, 80, 81, 82, 92, 93, 95], "two": [0, 3, 4, 5, 7, 8, 9, 10, 11, 12, 25, 43, 66, 81, 82, 84, 88, 89, 90, 93, 96], "have": [0, 3, 4, 7, 8, 10, 11, 12, 16, 19, 20, 22, 23, 37, 41, 42, 44, 45, 48, 53, 55, 61, 64, 76, 80, 81, 82, 85, 88, 92, 93, 94, 95, 96], "access": [0, 2, 4, 5, 7, 8, 10, 11, 12, 46, 48, 81, 82, 91, 95], "share": [0, 4, 6, 7, 8, 10, 11, 12, 39, 95, 96], "physic": [0, 4, 7, 8, 10, 11, 12, 81, 90], "storag": [0, 3, 4, 5, 6, 7, 8, 10, 11, 12, 73, 81, 88, 90], "effici": [0, 3, 4, 7, 8, 10, 11, 12, 84, 88, 89, 90, 91], "data": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 19, 32, 36, 37, 39, 42, 45, 49, 61, 67, 69, 70, 73, 79, 80, 81, 82, 83, 84, 86, 87, 89, 93], "run": [0, 12, 41, 43, 44, 47, 49, 53, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96], "process": [0, 3, 4, 6, 7, 8, 10, 11, 12, 39, 49, 71, 81, 88, 90], "here": [0, 3, 79, 80, 82, 85, 88, 89, 90, 93, 95], "we": [0, 1, 3, 4, 7, 8, 9, 10, 11, 12, 20, 37, 42, 43, 45, 46, 48, 61, 79, 81, 82, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96], "provid": [0, 3, 4, 5, 6, 7, 8, 10, 11, 12, 16, 19, 25, 36, 41, 43, 45, 48, 49, 53, 55, 67, 73, 74, 77, 79, 80, 81, 84, 85, 89, 90, 91, 92, 93], "some": [0, 3, 4, 7, 8, 10, 11, 12, 16, 40, 41, 43, 44, 48, 66, 71, 73, 81, 82, 85, 88, 89, 90, 93], "detail": [0, 4, 7, 8, 10, 11, 12, 34, 38, 57, 80], "how": [0, 3, 4, 7, 8, 10, 11, 12, 19, 55, 82, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 19, 20, 22, 23, 25, 35, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 53, 55, 58, 61, 63, 64, 68, 69, 70, 71, 72, 73, 76, 77, 79, 80, 81, 82, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96], "achiev": [0, 3, 4, 7, 8, 10, 11, 12, 80, 91], "rpc": [0, 5], "For": [0, 2, 3, 4, 7, 8, 10, 11, 12, 25, 41, 46, 55, 66, 79, 80, 81, 85, 88, 90, 91, 92, 93, 95, 96], "more": [0, 1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 17, 20, 21, 23, 24, 26, 27, 43, 44, 45, 54, 57, 63, 80, 82, 84, 85, 88, 89, 90, 95], "check": [0, 1, 3, 4, 7, 8, 9, 10, 11, 12, 25, 26, 32, 41, 46, 49, 64, 80, 82, 85, 90, 92], "offici": [0, 85], "pytorch": [0, 2, 3, 8, 12, 41, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 95], "document": [0, 12, 80, 82, 85], "arrai": [0, 4, 7, 8, 10, 11, 12, 26, 81, 90, 94], "great": 0, "advantag": [0, 3, 5, 8, 45, 81, 82, 90, 94, 95], "thei": [0, 3, 4, 7, 8, 10, 11, 12, 16, 64, 81, 82, 85, 88, 89, 90, 92, 93, 94, 95], "store": [0, 3, 4, 5, 6, 7, 8, 10, 11, 12, 22, 23, 39, 46, 55, 73, 81, 82, 84, 89, 91, 92, 94, 95], "amount": [0, 88], "allow": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 36, 41, 53, 55, 64, 79, 80, 81, 82, 84, 88, 89, 90, 92, 95], "slice": [0, 2, 3, 4, 7, 8, 10, 11, 12, 83, 86, 87, 95], "readili": [0, 43], "without": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 19, 36, 44, 73, 82, 85], "read": [0, 1, 2, 3, 4, 7, 8, 10, 11, 12, 43, 45, 46, 48, 49, 53, 58, 79, 81, 82, 88, 93], "whole": [0, 80, 82], "file": [0, 4, 5, 6, 7, 8, 10, 11, 12, 18, 21, 36, 39, 81, 82, 83, 85, 87, 90, 92], "offer": [0, 3, 41, 63, 81, 82, 84, 88, 89, 90, 93], "an": [0, 1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 16, 19, 21, 23, 28, 32, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 53, 61, 73, 76, 77, 79, 80, 81, 82, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95], "interfac": [0, 8, 41, 55, 93], "between": [0, 4, 6, 7, 8, 10, 11, 12, 23, 39, 43, 81, 93], "torch": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 19, 20, 22, 23, 25, 30, 36, 37, 40, 41, 42, 43, 44, 45, 46, 48, 49, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 70, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 84, 88, 89, 90, 91, 92, 93, 94, 95, 96], "class": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 84, 85, 88, 89, 90, 92, 93, 95], "name": [0, 2, 4, 5, 6, 7, 8, 10, 11, 12, 19, 25, 26, 45, 53, 55, 64, 73, 79, 93], "memmaptensor": [0, 82], "instanc": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 19, 22, 23, 25, 39, 41, 43, 44, 45, 46, 47, 48, 49, 53, 67, 73, 79, 80, 81, 82, 85, 88, 90, 93, 95], "object": [0, 2, 3, 4, 6, 7, 8, 10, 11, 12, 16, 17, 19, 32, 43, 44, 45, 47, 70, 80, 81, 84, 85, 89], "repres": [0, 4, 5, 7, 8, 10, 11, 12, 23, 43, 82, 85, 88, 90, 93, 96], "big": [0, 2, 4, 7, 8, 10, 11, 12, 81], "dataset": [0, 2, 3, 4, 6, 7, 8, 10, 11, 12, 81, 83, 86, 87, 90], "disk": [0, 4, 5, 6, 7, 8, 10, 11, 12, 35, 36, 39, 69, 81, 82, 84, 89, 90, 92], "easili": [0, 2, 3, 7, 79, 82, 85], "batch": [0, 2, 4, 6, 7, 8, 10, 11, 12, 19, 20, 23, 37, 45, 53, 55, 56, 61, 66, 70, 76, 77, 80, 81, 82, 83, 84, 86, 87, 88, 89, 92, 96], "wai": [0, 3, 4, 7, 8, 9, 10, 11, 12, 45, 81, 85, 90, 91, 93, 95, 96], "A": [0, 3, 4, 5, 6, 7, 8, 10, 11, 12, 19, 36, 39, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 54, 55, 57, 64, 66, 70, 73, 76, 79, 85, 88, 90, 93, 95], "simpli": [0, 1, 3, 6, 82, 88, 90, 91, 95], "via": [0, 2, 3, 4, 7, 8, 10, 11, 12, 46, 48, 80, 95], "1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 22, 25, 26, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 57, 63, 66, 73, 76, 77, 79, 80, 82, 84, 85, 88, 89, 90, 91, 93, 94, 95, 96], "popul": [0, 3, 4, 7, 8, 10, 11, 12, 45, 81, 82, 84, 92, 94], "2": [0, 1, 3, 4, 7, 8, 10, 11, 12, 16, 23, 25, 40, 41, 42, 45, 46, 48, 49, 53, 54, 57, 63, 66, 67, 70, 73, 76, 77, 79, 80, 82, 84, 85, 88, 89, 90, 91, 94, 95, 96], "call": [0, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 16, 23, 36, 39, 41, 43, 45, 47, 48, 49, 53, 55, 64, 71, 72, 81, 82, 85, 88, 93, 94, 95], "memmap_": [0, 4, 6, 7, 8, 10, 11, 12, 82, 90, 92], "put": [0, 4, 7, 8, 10, 11, 12, 41, 82, 88, 93], "One": [0, 3, 58, 79, 80, 82, 85, 90, 93], "queri": [0, 3, 4, 6, 7, 8, 10, 11, 12, 44, 48], "is_memmap": [0, 4, 7, 8, 10, 11, 12, 90], "itself": [0, 3, 4, 7, 8, 9, 10, 11, 12, 23, 46, 85, 92], "done": [0, 3, 4, 7, 8, 10, 11, 12, 80, 81, 84, 89, 90, 95], "sever": [0, 4, 7, 8, 10, 11, 12, 23, 81, 82, 85, 93], "firstli": 0, "empti": [0, 3, 4, 5, 6, 7, 8, 10, 11, 12, 36, 41, 44, 45, 80, 81, 84, 85, 89, 90, 94], "shape": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 19, 20, 22, 23, 26, 36, 37, 40, 41, 42, 43, 44, 45, 46, 48, 49, 54, 55, 56, 57, 61, 63, 64, 66, 67, 74, 75, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96], "size": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 36, 37, 40, 42, 43, 44, 45, 46, 48, 53, 54, 55, 56, 57, 61, 63, 64, 66, 67, 70, 73, 74, 75, 76, 77, 79, 80, 81, 82, 84, 88, 89, 90, 91, 92, 93, 94, 95, 96], "3": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 20, 23, 25, 26, 37, 40, 42, 43, 44, 45, 46, 48, 49, 54, 55, 57, 61, 63, 66, 67, 73, 74, 75, 76, 77, 79, 80, 82, 84, 85, 88, 89, 90, 91, 93, 94, 95, 96], "4": [0, 3, 4, 7, 8, 10, 11, 12, 16, 20, 22, 23, 26, 37, 42, 43, 45, 48, 49, 54, 55, 57, 61, 63, 66, 67, 73, 74, 75, 76, 77, 79, 80, 81, 82, 84, 85, 88, 89, 90, 93, 94, 95, 96], "5": [0, 3, 4, 7, 8, 10, 11, 12, 42, 45, 49, 63, 67, 74, 75, 76, 77, 79, 80, 81, 84, 88, 89, 93, 95, 96], "prefix": [0, 4, 6, 7, 8, 10, 11, 12, 35, 36, 39, 69, 82, 92], "tmp": [0, 82], "randn": [0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 12, 20, 23, 25, 37, 41, 42, 43, 45, 48, 54, 55, 57, 61, 63, 79, 80, 81, 82, 85, 88, 93], "The": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 16, 19, 28, 39, 41, 42, 43, 44, 45, 46, 48, 50, 51, 53, 54, 55, 57, 63, 66, 70, 76, 77, 79, 80, 81, 82, 84, 85, 88, 89, 90, 91, 92, 93, 95, 96], "attribut": [0, 3, 4, 6, 7, 8, 10, 11, 12, 19, 39, 43, 44, 45, 46, 48, 53, 64, 73, 80, 85, 89, 92, 95], "indic": [0, 4, 5, 6, 7, 8, 10, 11, 12, 46, 49, 51, 53, 64, 67, 73, 77, 82, 84, 85, 89, 93, 96], "where": [0, 3, 4, 5, 6, 7, 8, 10, 11, 12, 36, 39, 41, 43, 44, 46, 53, 55, 67, 79, 81, 82, 88, 92, 93, 95], "temporari": [0, 92], "ha": [0, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 16, 43, 45, 66, 71, 79, 81, 82, 85, 88, 90, 91, 93, 94, 95], "It": [0, 3, 4, 7, 8, 10, 11, 12, 23, 41, 43, 46, 48, 67, 70, 73, 77, 80, 93, 95], "crucial": [0, 4, 7, 8, 10, 11, 12, 23], "directori": [0, 4, 6, 7, 8, 10, 11, 12, 39, 80, 82, 92], "everi": [0, 4, 7, 8, 10, 11, 12, 40, 43, 47, 49, 67, 82, 85, 95], "option": [0, 4, 5, 6, 7, 8, 10, 11, 12, 13, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 66, 67, 69, 73, 76, 77, 80, 82, 85, 93], "exist": [0, 2, 4, 5, 6, 7, 8, 10, 11, 12, 39, 40, 41, 43, 44, 64, 65, 85, 95], "former": [0, 3, 4, 7, 8, 10, 11, 12, 43, 47, 49], "method": [0, 3, 4, 5, 6, 7, 8, 10, 11, 12, 19, 25, 33, 35, 36, 39, 43, 44, 45, 46, 47, 48, 53, 55, 64, 71, 77, 79, 80, 81, 82, 84, 85, 88, 89, 90, 91, 92, 93, 95], "prefer": [0, 4, 7, 8, 10, 11, 12, 53, 85, 92], "when": [0, 3, 4, 5, 7, 8, 10, 11, 12, 16, 22, 23, 38, 43, 44, 45, 46, 48, 49, 51, 53, 55, 63, 64, 73, 81, 82, 85, 88, 89, 90, 91, 92, 93, 95, 96], "ar": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 23, 25, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 53, 54, 55, 57, 64, 73, 76, 79, 80, 81, 82, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96], "do": [0, 3, 4, 7, 8, 10, 11, 12, 41, 43, 64, 82, 85, 88, 90, 91], "fit": [0, 4, 7, 8, 10, 11, 12, 81, 82], "suitabl": [0, 82], "extrem": [0, 82], "serv": [0, 4, 7, 8, 10, 11, 12], "common": [0, 4, 7, 8, 10, 11, 12, 40, 53, 81, 85, 88, 90, 95, 96], "could": [0, 4, 7, 8, 10, 11, 12, 43, 82, 85, 88, 90, 91, 93, 96], "would": [0, 3, 4, 7, 8, 10, 11, 12, 16, 43, 80, 81, 85, 92, 93, 96], "singl": [0, 1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 28, 39, 44, 45, 48, 52, 53, 55, 63, 70, 72, 81, 82, 85, 88, 90, 93, 94, 95], "differ": [0, 3, 4, 7, 8, 10, 11, 12, 20, 23, 37, 45, 48, 61, 80, 81, 82, 85, 88, 90, 92, 95], "much": [0, 3, 4, 7, 8, 10, 11, 12, 25, 81, 89, 90, 91, 95], "faster": [0, 4, 7, 8, 10, 11, 12, 81, 95], "than": [0, 3, 4, 7, 8, 9, 10, 11, 12, 41, 43, 45, 54, 57, 66, 81, 82, 84, 85, 88, 89, 90, 95], "each": [0, 1, 2, 3, 4, 7, 8, 10, 11, 12, 19, 23, 25, 40, 43, 48, 55, 73, 76, 79, 81, 82, 84, 88, 89, 90, 91, 95, 96], "had": [0, 88, 95], "load": [0, 2, 4, 5, 6, 7, 8, 10, 11, 12, 36, 81, 83, 84, 85, 86, 87, 89, 92], "independ": [0, 4, 7, 8, 10, 11, 12, 43, 54, 81, 82, 85], "imag": [0, 3, 81, 82, 84, 89, 90, 93], "50000": 0, "480": [0, 81], "mask": [0, 1, 2, 3, 4, 7, 8, 10, 11, 12, 67, 79, 83, 86, 87], "dtype": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 19, 20, 22, 23, 26, 36, 37, 40, 42, 43, 44, 45, 46, 48, 55, 61, 63, 64, 67, 73, 79, 80, 81, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96], "bool": [0, 4, 5, 6, 7, 8, 10, 11, 12, 13, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 35, 36, 37, 39, 42, 43, 44, 45, 48, 49, 52, 53, 54, 55, 59, 61, 62, 63, 64, 67, 69, 70, 71, 73, 77, 80, 88, 90], "label": [0, 82, 84], "uint8": [0, 3, 4, 6, 7, 8, 10, 11, 12, 90], "batch_siz": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 32, 36, 37, 40, 42, 43, 44, 45, 46, 48, 49, 55, 61, 63, 64, 66, 67, 70, 73, 76, 77, 79, 80, 81, 82, 84, 88, 89, 90, 91, 92, 93, 94, 95, 96], "devic": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 17, 19, 20, 21, 22, 23, 24, 26, 27, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 48, 54, 55, 61, 63, 64, 67, 73, 79, 80, 82, 84, 85, 88, 89, 90, 91, 93, 94, 95, 96], "cpu": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 19, 20, 22, 23, 36, 37, 40, 41, 42, 43, 44, 45, 46, 48, 55, 61, 63, 64, 67, 79, 80, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96], "idx": [0, 3, 4, 7, 8, 10, 11, 12, 90], "5020": 0, "34572": 0, "11200": 0, "clone": [0, 2, 4, 7, 8, 10, 11, 12, 16, 41, 45, 46, 80, 81, 95], "field": [0, 3, 4, 6, 7, 8, 10, 11, 12, 16, 19, 20, 22, 23, 26, 36, 37, 40, 42, 43, 44, 45, 46, 48, 55, 61, 63, 64, 67, 73, 79, 82, 84, 88, 91, 92, 93, 94, 95, 96], "float32": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 16, 20, 22, 23, 36, 37, 42, 43, 44, 45, 46, 48, 55, 61, 63, 64, 67, 73, 79, 80, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96], "is_shar": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 16, 19, 20, 22, 23, 36, 37, 40, 42, 43, 44, 45, 46, 48, 55, 61, 63, 64, 67, 73, 79, 80, 84, 88, 89, 90, 91, 92, 93, 94, 95, 96], "fals": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 32, 33, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 48, 49, 52, 54, 55, 61, 63, 64, 67, 69, 70, 73, 76, 77, 79, 80, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96], "notic": [0, 3, 4, 7, 8, 10, 11, 12], "syntax": [0, 3, 91, 96], "sugar": 0, "directli": [0, 2, 4, 7, 8, 10, 11, 12, 16, 43, 45, 82, 84, 85, 89, 90, 91, 93], "need": [0, 3, 4, 7, 8, 10, 11, 12, 16, 23, 41, 43, 47, 49, 53, 79, 80, 81, 82, 84, 85, 88, 89, 90, 93, 95, 96], "consider": 0, "take": [0, 3, 4, 7, 8, 10, 11, 12, 19, 23, 41, 42, 43, 47, 48, 49, 54, 57, 64, 79, 82, 84, 85, 88, 89, 90, 93, 94], "account": [0, 4, 7, 8, 10, 11, 12], "current": [0, 4, 6, 7, 8, 10, 11, 12, 13, 25, 44, 81, 84, 89, 92], "compat": [0, 2, 3, 4, 5, 7, 8, 10, 11, 12, 14, 19, 28, 37, 46, 61, 72, 73, 79, 80, 85, 96], "autograd": [0, 4, 7, 8, 10, 11, 12, 85], "simpl": [0, 3, 4, 7, 8, 10, 11, 12, 41, 43, 84, 89], "exampl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 19, 20, 22, 23, 25, 26, 32, 36, 37, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 55, 57, 61, 63, 64, 66, 67, 70, 73, 74, 75, 76, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96], "script": [0, 70, 82, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96], "send": [0, 3, 4, 7, 8, 10, 11, 12, 92], "its": [0, 3, 4, 5, 6, 7, 8, 10, 11, 12, 20, 37, 41, 42, 43, 44, 45, 46, 48, 57, 61, 68, 79, 80, 81, 82, 85, 89, 93, 95], "refer": [0, 2, 4, 7, 8, 10, 11, 12, 23, 76, 81, 83, 85, 90], "worker": [0, 3, 4, 5, 6, 7, 8, 10, 11, 12, 39, 81, 90], "respons": [0, 4, 7, 8, 10, 11, 12, 41, 93], "updat": [0, 3, 4, 6, 7, 8, 10, 11, 12, 39, 40, 43, 46, 48, 80, 82, 88, 90, 93, 94, 95], "you": [0, 1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 41, 42, 43, 46, 70, 80, 81, 82, 85, 88, 89, 91, 92, 93, 94, 95, 96], "find": [0, 93], "benchmark": [0, 4, 7, 8, 10, 11, 12, 90, 93], "In": [0, 1, 3, 4, 5, 7, 8, 10, 11, 12, 16, 23, 41, 43, 44, 45, 48, 53, 55, 81, 82, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96], "short": [0, 85], "our": [0, 84, 85, 88, 89, 90, 93], "goal": [0, 4, 7, 8, 10, 11, 12, 85, 88], "show": [0, 3, 12, 16, 85, 90], "handl": [0, 2, 3, 4, 7, 8, 10, 11, 12, 79, 84, 85, 88, 89], "write": [0, 1, 2, 3, 4, 6, 7, 8, 10, 11, 12, 39, 41, 43, 45, 46, 48, 79, 82, 85, 88, 89, 90, 93], "step": [0, 2, 3, 4, 7, 8, 10, 11, 12, 23, 41, 43, 84, 89, 90, 93, 94, 95], "involv": [0, 4, 7, 8, 10, 11, 12], "local": [0, 4, 7, 8, 10, 11, 12], "remot": [0, 4, 5, 7, 8, 10, 11, 12], "execut": [0, 1, 3, 4, 7, 8, 10, 11, 12, 23, 41, 44, 48, 64, 71, 73, 81, 82, 83, 85, 87, 93], "command": [0, 82], "first": [0, 3, 4, 7, 8, 10, 11, 12, 16, 40, 43, 44, 53, 66, 77, 80, 81, 82, 84, 88, 90, 93, 94, 95, 96], "function": [0, 3, 4, 6, 7, 8, 10, 11, 12, 16, 19, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 57, 60, 61, 68, 69, 76, 79, 80, 81, 84, 85, 88, 89, 93, 94, 95], "specif": [0, 5, 45, 85], "fill": [0, 4, 5, 7, 8, 10, 11, 12, 66, 94], "def": [0, 1, 3, 4, 7, 8, 10, 11, 12, 23, 25, 41, 43, 45, 46, 48, 50, 53, 64, 70, 73, 79, 80, 82, 84, 85, 88, 89, 90, 93, 94], "fill_tensordict": 0, "memmap": [0, 4, 6, 7, 8, 10, 11, 12, 36, 69, 80, 82, 84, 89, 92], "ones": [0, 3, 4, 5, 7, 8, 9, 10, 11, 12, 25, 44, 45, 46, 48, 49, 53, 66, 73, 80, 81, 91, 95, 96], "640": 0, "return": [0, 1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 16, 19, 22, 23, 29, 32, 33, 37, 39, 41, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 57, 61, 63, 64, 65, 66, 67, 70, 73, 74, 75, 76, 77, 79, 80, 82, 84, 85, 88, 89, 90, 91, 93, 94, 95, 96], "fill_tensordict_cp": 0, "cloudpicklewrapp": 0, "ensur": [0, 4, 5, 7, 8, 10, 11, 12, 77, 90], "serializ": [0, 4, 7, 8, 10, 11, 12], "next": [0, 90, 93], "make": [0, 2, 3, 4, 7, 8, 10, 11, 12, 25, 38, 41, 42, 43, 79, 80, 82, 85, 90, 91, 93, 96], "point": [0, 3, 4, 7, 8, 10, 11, 12, 41, 43, 44, 53, 77, 79, 85], "hard": 0, "through": [0, 3, 4, 5, 7, 8, 10, 11, 12, 23, 43, 44, 48, 51, 53, 63, 70, 73, 79, 85, 90, 93, 94], "regular": [0, 3, 4, 7, 8, 10, 11, 12, 41, 43, 44, 45, 48, 79, 81, 82, 85, 88, 90, 93, 95, 96], "tensorpip": 0, "1000": [0, 3, 43], "final": [0, 3, 4, 6, 7, 8, 10, 11, 12, 44, 79, 82, 85, 88], "still": [0, 4, 7, 8, 10, 11, 12, 45, 46, 48, 88, 91, 92, 93], "main": [0, 2, 4, 5, 7, 8, 10, 11, 12, 43, 81, 82, 85, 88, 90], "been": [0, 4, 7, 8, 10, 11, 12, 13, 71, 79, 80, 82, 85, 88, 91, 92, 93, 94], "written": [0, 3, 4, 6, 7, 8, 10, 11, 12, 36, 43, 45, 46, 48, 49, 53, 55, 67, 82, 85, 93, 94], "6": [0, 3, 4, 7, 8, 10, 11, 12, 56, 66, 67, 76, 77, 80, 81, 84, 88, 89, 95, 96], "7": [0, 4, 7, 8, 10, 11, 12, 76, 77, 84, 88, 89], "998": 0, "t0": [0, 84, 85, 89, 90], "time": [0, 3, 4, 7, 8, 10, 11, 12, 23, 41, 73, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96], "out": [0, 1, 3, 4, 6, 7, 8, 10, 11, 12, 14, 20, 34, 35, 36, 37, 38, 41, 45, 48, 61, 64, 67, 72, 73, 76, 85, 90, 93], "rpc_sync": 0, "worker_info": 0, "arg": [0, 1, 4, 5, 6, 7, 8, 10, 11, 12, 41, 42, 43, 44, 45, 46, 47, 48, 49, 64, 85], "print": [0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 19, 20, 22, 23, 36, 37, 40, 43, 44, 45, 48, 50, 53, 54, 55, 57, 61, 63, 64, 66, 67, 68, 73, 74, 75, 79, 80, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96], "elaps": 0, "all": [0, 1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 16, 25, 26, 28, 36, 39, 40, 41, 43, 44, 47, 48, 49, 53, 54, 57, 64, 66, 67, 77, 80, 81, 82, 83, 85, 86, 88, 91, 92, 93, 94, 95, 96], "although": [0, 2, 4, 7, 8, 10, 11, 12, 43, 47, 49, 73, 85], "entir": [0, 1, 4, 7, 8, 10, 11, 12, 44, 49, 82, 89, 90], "origin": [0, 3, 4, 5, 6, 7, 8, 10, 11, 12, 23, 25, 43, 46, 48, 79, 81, 82, 85, 88, 91, 92, 95, 96], "snippet": [0, 41], "fast": [0, 4, 7, 8, 10, 11, 12, 41, 82, 92], "even": [0, 3, 4, 7, 8, 10, 11, 12, 44, 45, 66, 80, 88, 90, 95], "so": [0, 2, 4, 6, 7, 8, 10, 11, 12, 39, 44, 45, 48, 66, 82, 84, 89, 90, 91, 93, 95], "locat": [0, 4, 5, 6, 7, 8, 10, 11, 12, 39, 82, 85, 92], "alreadi": [0, 4, 5, 6, 7, 8, 10, 11, 12, 39, 42, 43, 64, 82, 84, 89, 91, 95], "beforehand": 0, "see": [0, 2, 3, 4, 5, 7, 8, 10, 11, 12, 23, 34, 38, 41, 43, 45, 57, 64, 85, 88, 89, 90, 91, 92, 93, 95], "torchrl": [0, 3, 79], "s": [0, 3, 4, 6, 7, 8, 10, 11, 12, 19, 23, 25, 39, 42, 43, 45, 48, 64, 68, 73, 79, 82, 84, 85, 88, 89, 90, 95], "replai": 0, "buffer": [0, 4, 6, 7, 8, 10, 11, 12, 22, 41, 45, 48, 54, 81], "learn": [0, 4, 7, 8, 10, 11, 12, 23, 55, 88, 90, 91, 92, 93, 94, 95, 96], "contain": [0, 3, 4, 7, 8, 10, 11, 12, 23, 32, 40, 43, 44, 45, 47, 53, 55, 67, 70, 76, 77, 80, 81, 82, 84, 89, 90, 91, 94, 95], "addit": [0, 3, 4, 7, 8, 10, 11, 12, 25, 44, 45, 55, 79, 81, 90, 95], "configur": [0, 4, 7, 8, 10, 11, 12, 19, 44], "beyond": 0, "purpos": [0, 2, 3, 4, 7, 8, 10, 11, 12, 48, 49, 79, 82, 85], "support": [1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 36, 41, 44, 45, 46, 48, 80, 82, 85, 88, 90, 92, 95], "creat": [1, 2, 4, 5, 6, 7, 8, 10, 11, 12, 19, 25, 28, 34, 36, 37, 43, 44, 45, 47, 48, 61, 71, 73, 80, 82, 84, 85, 88, 89, 90, 91, 92, 93, 95, 96], "fx": [1, 85], "graph": [1, 3, 4, 7, 8, 10, 11, 12, 23, 41, 46, 48, 64, 79, 85], "import": [1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 16, 19, 22, 23, 36, 40, 42, 43, 44, 45, 46, 48, 49, 54, 57, 63, 64, 66, 73, 79, 80, 81, 82, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96], "symbolic_trac": 1, "tensordict": [1, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 52, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 83, 86, 87, 89, 90, 96], "prototyp": [1, 41, 79, 80, 82], "instead": [1, 3, 4, 5, 7, 8, 10, 11, 12, 16, 23, 43, 47, 49, 53, 80, 85, 90, 93, 95], "highli": [1, 2], "experiment": [1, 43, 80], "subject": [1, 80], "chang": [1, 4, 7, 8, 10, 11, 12, 41, 44, 45, 46, 48, 64, 71, 80, 85, 91], "caution": [1, 4, 7, 8, 10, 11, 12, 19, 73], "rais": [1, 4, 5, 6, 7, 8, 10, 11, 12, 19, 39, 43, 44, 45, 70, 76, 77, 82], "issu": [1, 80, 85], "try": [1, 4, 6, 7, 8, 10, 11, 12, 26, 44, 53, 88, 93, 95], "encount": [1, 44, 70], "problem": [1, 3, 79], "ll": [1, 84, 88, 89, 90], "illustr": [1, 82], "overview": [1, 2], "inspect": 1, "gener": [1, 2, 3, 4, 7, 8, 10, 11, 12, 23, 41, 53, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96], "code": [1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 41, 48, 64, 71, 79, 80, 82, 84, 85, 86, 88, 89, 90, 91, 92, 94, 95, 96], "nn": [1, 3, 4, 7, 8, 10, 11, 12, 22, 23, 41, 43, 44, 45, 46, 47, 48, 49, 50, 52, 63, 78, 80, 82, 84, 85, 89, 90, 91, 93], "net": [1, 3, 12, 42, 43, 46, 79, 84, 89, 93], "modul": [1, 2, 3, 4, 7, 8, 10, 11, 12, 22, 23, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 53, 54, 57, 64, 65, 79, 81, 82, 83, 84, 86, 87, 89, 90, 91], "__init__": [1, 3, 12, 46, 79, 84, 89, 90, 93], "self": [1, 3, 4, 6, 7, 8, 10, 11, 12, 44, 45, 46, 50, 53, 64, 73, 79, 80, 84, 85, 89, 90, 93], "super": [1, 3, 12, 79, 84, 89, 90, 93], "linear": [1, 3, 4, 7, 8, 10, 11, 12, 23, 42, 46, 48, 54, 57, 79, 84, 85, 89, 91, 93], "lazylinear": [1, 3], "forward": [1, 3, 12, 43, 44, 45, 46, 47, 48, 49, 53, 64, 66, 79, 84, 85, 89, 90, 93], "x": [1, 3, 4, 7, 8, 10, 11, 12, 19, 23, 26, 41, 44, 45, 46, 48, 49, 73, 79, 80, 81, 82, 84, 85, 88, 89, 90, 93], "logit": [1, 3, 55, 58, 63, 84, 89], "sigmoid": [1, 3, 4, 7, 8, 10, 11, 12], "in_kei": [1, 3, 4, 7, 8, 10, 11, 12, 41, 42, 43, 44, 45, 46, 48, 49, 50, 53, 64, 79, 85, 93], "input": [1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 16, 19, 32, 34, 37, 38, 41, 42, 43, 44, 45, 46, 48, 49, 50, 53, 55, 57, 61, 64, 72, 74, 76, 77, 79, 85, 88, 89], "out_kei": [1, 3, 4, 7, 8, 10, 11, 12, 41, 42, 43, 44, 45, 46, 48, 49, 50, 53, 64, 79, 85, 93], "output": [1, 3, 4, 7, 8, 10, 11, 12, 19, 23, 41, 43, 44, 45, 46, 48, 49, 50, 53, 55, 64, 77, 79, 80, 93], "probabl": [1, 3, 4, 7, 8, 10, 11, 12, 43, 44, 52, 55, 63, 79, 93], "graph_modul": [1, 85], "user": [1, 3, 4, 7, 8, 10, 11, 12, 41, 64, 79, 80, 82, 85, 93, 95], "placehold": [1, 7, 45], "target": [1, 4, 7, 8, 10, 11, 12, 74, 75, 76, 79, 84, 89, 90], "getitem": [1, 85], "call_funct": 1, "oper": [1, 2, 4, 6, 7, 8, 10, 11, 12, 23, 39, 41, 47, 55, 73, 78, 80, 82, 88, 90, 91, 93, 95], "kwarg": [1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 53, 58, 61, 64, 85], "call_modul": 1, "none": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 50, 54, 55, 56, 57, 58, 59, 61, 63, 64, 67, 69, 72, 73, 79, 80, 81, 82, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96], "result": [1, 3, 4, 6, 7, 8, 10, 11, 12, 19, 22, 23, 39, 44, 48, 50, 53, 55, 80, 81, 82, 88, 90, 94, 95], "same": [1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 16, 23, 41, 45, 46, 48, 64, 67, 70, 73, 76, 77, 80, 81, 82, 84, 85, 89, 90, 91, 92, 93, 94, 95, 96], "32": [1, 3, 4, 7, 8, 10, 11, 12, 42, 79, 82, 88, 90], "100": [1, 3, 12, 79, 84, 89, 90, 91], "module_out": 1, "tensordict_out": [1, 41, 43, 44, 45, 46, 48, 93], "graph_module_out": 1, "assert": [1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 23, 25, 26, 36, 41, 45, 46, 49, 53, 54, 57, 73, 77, 80, 81, 82, 88, 91, 93, 94, 95], "also": [1, 3, 4, 6, 7, 8, 10, 11, 12, 20, 23, 36, 37, 43, 44, 45, 46, 48, 53, 61, 63, 64, 73, 76, 79, 80, 81, 82, 84, 85, 88, 89, 90, 91, 92, 93, 95, 96], "case": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 16, 23, 36, 40, 41, 43, 44, 45, 48, 55, 78, 81, 85, 88, 89, 90, 91, 93, 95], "elimin": [1, 85, 90], "intermedi": [1, 3, 4, 7, 8, 10, 11, 12, 44, 46, 48, 79, 85, 93], "demonstr": [1, 84, 89, 90, 94], "sequenti": [1, 3, 4, 7, 8, 10, 11, 12, 42, 44, 46, 48, 79, 84, 89, 90, 91, 93], "input_s": [1, 3, 79], "hidden_s": [1, 3, 79], "50": [1, 3, 4, 7, 8, 10, 11, 12, 76, 77, 79, 84, 88, 91], "output_s": [1, 3, 4, 7, 8, 10, 11, 12, 79], "10": [1, 3, 4, 7, 8, 10, 11, 12, 25, 26, 42, 55, 63, 76, 77, 79, 80, 81, 82, 84, 85, 88, 89, 91, 92, 94], "fc1": [1, 3, 79], "fc2": [1, 3, 79], "relu": [1, 3, 42, 46, 54, 57, 79, 84, 85, 89, 93], "masker": [1, 3, 79], "softmax": [1, 3, 4, 7, 8, 10, 11, 12, 79], "dim": [1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 16, 20, 34, 37, 38, 61, 72, 76, 77, 79, 80, 88, 95], "_0_fc1": 1, "getattr": [1, 3, 4, 6, 7, 8, 10, 11, 12, 85], "0": [1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 16, 19, 22, 23, 26, 28, 34, 36, 38, 39, 40, 43, 44, 45, 46, 48, 50, 51, 54, 57, 63, 66, 67, 69, 70, 72, 76, 77, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], "_0_fc2": 1, "getitem_1": [1, 85], "mul": [1, 4, 7, 8, 10, 11, 12, 85], "bit": [1, 3, 84], "complic": [1, 46, 48], "visual": 1, "follow": [1, 3, 6, 12, 41, 46, 48, 64, 80, 81, 82, 85, 88, 90, 92, 96], "requir": [1, 3, 4, 7, 8, 10, 11, 12, 23, 38, 41, 44, 45, 48, 49, 81, 82, 88, 92, 93, 95], "pydot": 1, "visualis": 1, "graph_draw": 1, "fxgraphdraw": 1, "g": [1, 4, 6, 7, 8, 10, 11, 12, 39, 40, 42, 43, 84, 85, 89, 93], "open": [1, 4, 6, 7, 8, 10, 11, 12, 36, 93], "svg": 1, "wb": [1, 4, 7, 8, 10, 11, 12], "f": [1, 4, 7, 8, 10, 11, 12, 40, 44, 82, 84, 85, 89, 90, 91, 93], "get_dot_graph": 1, "create_svg": 1, "which": [1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 16, 19, 22, 23, 36, 43, 48, 53, 63, 66, 76, 77, 79, 80, 81, 82, 85, 88, 91, 92, 93, 94, 95, 96], "dictionari": [2, 3, 4, 6, 7, 8, 10, 11, 12, 20, 25, 28, 37, 40, 43, 45, 55, 61, 80, 81, 88, 91], "like": [2, 3, 4, 7, 8, 10, 11, 12, 23, 41, 43, 73, 80, 81, 84, 85, 89, 90, 91, 92, 93, 95], "inherit": [2, 4, 7, 8, 9, 10, 11, 12, 80, 81, 88], "properti": [2, 4, 5, 6, 7, 8, 10, 11, 12, 43, 44, 71], "tensor": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 19, 20, 23, 25, 30, 32, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 70, 73, 74, 75, 76, 77, 78, 79, 80, 82, 84, 85, 88, 89, 90, 91, 93, 94, 95, 96], "index": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 73, 80, 81, 83, 86, 87, 88, 92], "cast": [2, 4, 6, 7, 8, 10, 11, 12, 19, 36, 73, 78], "etc": [2, 10, 12, 81, 82, 84, 85, 89], "pypi": 2, "about": [2, 49, 85, 88, 90], "instruct": 2, "dedic": [2, 81, 82, 85, 89, 90], "section": [2, 3], "below": [2, 3, 4, 7, 8, 10, 11, 12, 23, 41, 45, 64, 80, 85, 88, 93, 95], "pip": 2, "base": [2, 3, 4, 7, 8, 9, 10, 11, 12, 43, 44, 45, 46, 48, 79, 80, 84, 85, 89, 90], "readabl": 2, "modular": [2, 48], "abstract": [2, 11], "awai": 2, "tailor": 2, "i": [2, 3, 4, 7, 8, 10, 11, 12, 43, 57, 82, 84, 85, 88, 89, 90, 93, 94], "enumer": [2, 3, 12, 84, 89, 90], "model": [2, 3, 4, 6, 7, 8, 10, 11, 12, 22, 23, 36, 55, 79, 81, 82, 90, 93], "loss": [2, 3, 84, 89], "loss_modul": [2, 3], "backward": [2, 3, 4, 7, 8, 10, 11, 12, 23, 41, 84, 89], "optim": [2, 3, 4, 7, 8, 10, 11, 12, 23, 41, 82], "zero_grad": [2, 3, 4, 7, 8, 10, 11, 12, 23, 41, 84, 89], "With": [2, 3, 4, 7, 8, 10, 11, 12, 23], "level": [2, 3, 4, 7, 8, 10, 11, 12, 19, 25, 91, 93], "recycl": 2, "train": [2, 3, 4, 6, 7, 8, 10, 11, 12, 39, 84, 85, 89, 90], "loop": [2, 3, 4, 6, 7, 8, 10, 11, 12, 39, 84, 89, 90, 94], "heterogen": [2, 4, 7, 8, 10, 11, 12], "task": [2, 3, 88], "individu": [2, 55, 81, 84, 89], "collect": [2, 3, 4, 7, 8, 10, 11, 12, 41, 55, 80, 88, 90, 92], "transform": [2, 4, 7, 8, 10, 11, 12, 25, 45, 49, 51, 71, 79, 82, 84, 89, 90, 93], "predict": [2, 79, 89], "comput": [2, 3, 4, 7, 8, 10, 11, 12, 23, 37, 43, 44, 47, 48, 49, 51, 61, 65, 79, 81, 85, 90, 95], "hand": [2, 82], "impact": [2, 4, 7, 8, 10, 11, 12, 85, 91], "other": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 39, 41, 44, 46, 48, 53, 54, 57, 73, 77, 80, 81, 82, 85, 90, 95], "abov": [2, 12, 82, 90, 92, 94], "across": [2, 3, 4, 7, 8, 10, 11, 12, 53, 81, 88], "classif": 2, "segment": 2, "among": [2, 16], "mani": [2, 3, 4, 7, 8, 10, 11, 12, 19, 73, 80, 81, 85, 88, 96], "releas": [2, 44, 45], "sync": 2, "sure": [2, 3, 4, 7, 8, 10, 11, 12, 41, 80], "alwai": [2, 4, 7, 8, 10, 11, 12, 46, 93, 95], "enjoi": 2, "latest": 2, "featur": [2, 4, 7, 8, 10, 11, 12, 23, 41, 43, 45, 46, 48, 79, 80, 81, 82, 85, 88], "librari": [2, 3, 81, 82, 85], "most": [2, 3, 4, 7, 8, 10, 11, 12, 41, 85, 88], "recent": 2, "version": [2, 3, 4, 7, 8, 9, 10, 11, 12, 23, 68, 85, 93, 95], "core": [2, 82, 85, 90], "guarante": [2, 4, 6, 7, 8, 10, 11, 12, 39, 95, 96], "13": [2, 4, 7, 8, 10, 11, 12, 88], "nightli": 2, "git": 2, "re": [2, 3, 4, 7, 8, 10, 11, 12, 41, 43, 65, 82], "willing": 2, "contribut": [2, 44], "cd": 2, "path": [2, 4, 5, 6, 7, 8, 10, 11, 12, 35, 36, 55, 80, 82, 90, 92], "root": [2, 4, 7, 8, 10, 11, 12, 55, 63, 84, 89, 90, 92, 95], "http": [2, 59, 90], "github": [2, 90], "com": [2, 90], "python": [2, 9, 45, 46, 80, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96], "setup": 2, "py": [2, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], "develop": [2, 3], "manipul": [2, 3, 81, 83, 86, 87, 88, 96], "kei": [2, 3, 4, 6, 7, 8, 10, 11, 12, 16, 25, 28, 37, 40, 41, 43, 44, 45, 46, 48, 49, 50, 53, 55, 61, 64, 67, 76, 77, 79, 81, 82, 83, 84, 86, 87, 88, 94, 95], "pre": [2, 12, 73, 80, 82, 83, 84, 86, 87, 89, 90], "alloc": [2, 4, 6, 7, 8, 10, 11, 12, 80, 82, 83, 86, 87], "memori": [2, 4, 5, 6, 7, 8, 10, 11, 12, 23, 36, 39, 48, 78, 80, 83, 84, 85, 86, 87, 88, 89, 90, 93], "simplifi": [2, 81, 83, 85, 86, 87, 88], "manag": [2, 4, 7, 8, 10, 11, 12, 64, 70, 78, 83, 84, 85, 86, 87, 89, 93, 95], "build": [2, 4, 5, 7, 8, 10, 11, 12, 25, 43, 44, 49, 79, 80, 83, 85, 86, 87, 93], "stream": [2, 4, 7, 8, 10, 11, 12, 83, 86, 87], "tensordictmodul": [2, 41, 42, 43, 44, 46, 47, 48, 49, 50, 53, 78, 83, 86, 87], "export": [2, 3, 4, 7, 8, 10, 11, 12, 83, 86, 87, 93], "tensorclass": [2, 4, 6, 7, 8, 10, 11, 12, 19, 32, 78, 83, 86, 87], "motiv": 2, "escap": 2, "non": [2, 4, 6, 7, 8, 10, 11, 12, 13, 23, 25, 39, 40, 41, 43, 44, 48, 57, 63, 70, 80, 82, 90, 93, 95], "stack": [2, 4, 6, 7, 8, 10, 11, 12, 13, 16, 23, 34, 38, 39, 40, 42, 44, 48, 49, 67, 70, 80, 81, 82, 90], "dimens": [2, 4, 6, 7, 8, 10, 11, 12, 14, 16, 19, 53, 55, 66, 67, 72, 76, 77, 88, 93, 94, 96], "nest": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 20, 25, 36, 37, 39, 40, 48, 53, 55, 61, 63, 67, 73, 80, 82, 88, 95], "lazi": [2, 4, 7, 8, 10, 11, 12, 16, 23, 33, 34, 38, 44, 48, 71, 82, 88, 95], "evalu": [2, 12, 44], "distribut": [2, 3, 4, 7, 8, 10, 11, 12, 43, 44, 48, 63, 78, 81, 85, 90], "set": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 23, 36, 39, 43, 44, 45, 46, 48, 64, 70, 71, 73, 80, 81, 82, 90, 92, 95], "map": [2, 4, 5, 6, 7, 8, 10, 11, 12, 19, 36, 39, 43, 45, 48, 54, 55, 57, 78, 80, 84, 85, 89, 90], "node": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 39, 64, 79], "trace": 2, "tensordictsequenti": [2, 3, 42, 44, 45, 46, 49, 78, 79, 85, 93], "save": [2, 3, 4, 6, 7, 8, 10, 11, 12, 36, 39, 80, 81, 84, 89, 90, 92], "memmori": 2, "memorymappedtensor": [2, 4, 7, 8, 10, 11, 12, 81, 84, 89, 90, 92], "torchsnapshot": 2, "api": [2, 3, 4, 7, 8, 10, 11, 12, 25, 41, 45, 46, 63, 82, 93, 95], "packag": [2, 3, 78, 85], "tensordictbas": [2, 4, 6, 7, 8, 10, 12, 16, 20, 21, 24, 26, 27, 32, 35, 36, 39, 41, 43, 44, 45, 46, 47, 48, 49, 53, 55, 67, 69, 74, 76, 77, 78, 82, 88], "lazystackedtensordict": [2, 3, 7, 8, 10, 11, 12, 16, 23, 78, 82, 88, 95], "persistenttensordict": [2, 4, 7, 10, 11, 12, 78], "tensordictparam": [2, 4, 7, 8, 10, 11, 22, 23, 43, 78], "get_defaults_to_non": [2, 78], "constructor": [2, 4, 7, 8, 10, 11, 12, 43, 44, 48, 53, 73, 78, 85], "handler": [2, 5, 78], "context": [2, 3, 4, 7, 8, 10, 11, 12, 64, 70, 78, 85, 90, 93, 95], "pointwis": [2, 4, 7, 8, 10, 11, 12, 78], "util": [2, 4, 7, 8, 10, 11, 12, 25, 74, 75, 76, 77, 78, 82, 84, 85, 89, 90, 92, 93, 95], "tensordictmodulebas": [2, 41, 44, 48, 64, 78, 93], "probabilistictensordictmodul": [2, 44, 48, 55, 78, 79, 85], "probabilistictensordictsequenti": [2, 43, 48, 55, 78, 79, 93], "tensordictmodulewrapp": [2, 78], "cudagraphmodul": [2, 78], "wrapmodul": [2, 78], "set_composite_lp_aggreg": [2, 52, 55, 78], "composite_lp_aggreg": [2, 43, 55, 63, 78], "as_tensordict_modul": [2, 78], "ensembl": [2, 3, 42, 78], "compil": [2, 4, 7, 8, 10, 11, 12, 14, 41, 72, 78, 85, 93], "serial": [2, 4, 5, 7, 8, 10, 11, 12, 78, 81, 82, 85], "edg": [2, 78, 85], "auto": [2, 4, 7, 8, 10, 11, 12, 19, 78], "search": [2, 44], "page": [2, 3], "easi": [3, 8, 45, 90, 93], "organis": 3, "reusabl": [3, 93], "ve": [3, 88], "spun": 3, "separ": [3, 4, 7, 8, 10, 11, 12, 25, 53, 82, 88, 91, 93], "primarili": 3, "multipl": [3, 4, 5, 7, 8, 9, 10, 11, 12, 44, 55, 79, 80, 81, 82, 85, 90, 94, 95, 96], "mostli": 3, "relat": [3, 46, 89, 90], "design": [3, 4, 7, 8, 10, 11, 12, 25, 41, 88, 93], "serialis": [3, 4, 6, 7, 8, 10, 11, 12, 39], "transmit": 3, "ship": 3, "own": [3, 12, 82, 85], "func": [3, 4, 7, 8, 10, 11, 12, 41, 43, 48, 49, 95], "aim": [3, 4, 7, 8, 10, 11, 12], "paramet": [3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 16, 19, 22, 23, 28, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 64, 66, 67, 70, 74, 75, 76, 77, 79, 81, 85, 91, 93], "easier": [3, 82], "On": [3, 82], "give": [3, 4, 7, 8, 10, 11, 12, 41, 90], "what": [3, 4, 7, 8, 10, 11, 12, 46, 49, 53, 79, 82, 85, 93, 94], "usabl": 3, "paradigm": 3, "sl": 3, "ssl": 3, "ul": 3, "rl": 3, "tool": [3, 82, 88], "littl": [3, 4, 7, 8, 10, 11, 12, 90], "effort": [3, 84], "multiprocess": [3, 4, 7, 8, 10, 11, 12, 81], "seamlessli": [3, 4, 7, 8, 10, 11, 12], "dispatch": [3, 4, 7, 8, 10, 11, 12, 41, 45, 46, 48, 85, 93], "datapoint": [3, 82], "split": [3, 4, 7, 8, 10, 11, 12, 57, 80, 85], "arang": [3, 4, 7, 8, 10, 11, 12, 88, 90, 95], "rang": [3, 4, 7, 8, 10, 11, 12, 23, 82, 84, 88, 89, 93, 94], "pipe": 3, "tree_map": [3, 4, 7, 8, 10, 11, 12, 25], "too": [3, 4, 5, 7, 8, 10, 11, 12, 37, 41, 46, 48, 61, 82, 88, 93], "greater": [3, 4, 7, 8, 10, 11, 12], "degre": [3, 4, 7, 8, 10, 11, 12], "complex": [3, 4, 7, 8, 10, 11, 12, 79, 82, 88, 90, 93], "td": [3, 4, 6, 7, 8, 10, 11, 12, 16, 25, 26, 36, 37, 40, 41, 43, 44, 45, 46, 48, 49, 61, 66, 76, 77, 79, 80, 81, 82, 88, 93], "11": [3, 4, 7, 8, 10, 11, 12, 76, 79, 83, 87, 88], "b": [3, 4, 6, 7, 8, 10, 11, 12, 16, 19, 20, 36, 37, 42, 45, 46, 48, 53, 59, 61, 66, 67, 79, 81, 82, 89, 91, 92, 94, 95, 96], "regular_dict": 3, "td0": [3, 4, 7, 8, 10, 11, 12, 16, 40, 82], "td1": [3, 4, 7, 8, 10, 11, 12, 16, 40, 81, 82], "td2": [3, 4, 7, 8, 10, 11, 12, 40, 81, 96], "unbind": [3, 4, 5, 6, 7, 8, 10, 11, 12], "similar": [3, 4, 6, 7, 8, 10, 11, 12, 39, 43, 45, 73, 79, 80, 81, 82, 84, 85, 89, 95], "structur": [3, 4, 6, 7, 8, 10, 11, 12, 16, 22, 23, 25, 26, 36, 39, 67, 79, 81, 82, 89, 90, 91, 92, 93, 95, 96], "pytre": [3, 4, 7, 8, 10, 11, 12, 25, 85], "lambda": [3, 4, 7, 8, 10, 11, 12, 40, 41, 44, 45, 46, 48, 49, 84, 85, 88, 89, 93], "regular_dict1": 3, "regular_dict2": 3, "regular_dict3": 3, "compel": 3, "c": [3, 4, 6, 7, 8, 10, 11, 12, 20, 36, 37, 40, 45, 46, 48, 50, 53, 61, 81, 82, 91, 92, 95], "decompos": [3, 53], "three": [3, 82, 85, 93], "similarli": [3, 12, 48, 82, 91], "after": [3, 4, 6, 7, 8, 10, 11, 12, 36, 48, 81, 82, 85, 90, 93, 94, 95], "appli": [3, 4, 7, 8, 10, 11, 12, 19, 43, 50, 81, 88, 90, 95, 96], "quickli": 3, "becom": 3, "significantli": [3, 4, 7, 8, 10, 11, 12], "cumbersom": 3, "work": [3, 4, 7, 8, 10, 11, 12, 16, 20, 37, 46, 48, 53, 61, 79, 80, 81, 82, 88, 90, 91, 95, 96], "naiv": 3, "want": [3, 4, 7, 8, 10, 11, 12, 46, 48, 53, 64, 85, 89, 91, 92, 93, 94, 95, 96], "rather": [3, 4, 7, 8, 10, 11, 12, 41, 82, 84, 85, 89, 90], "unbound": [3, 4, 6, 7, 8, 10, 11, 12], "dict": [3, 4, 6, 7, 8, 10, 11, 12, 20, 22, 23, 25, 37, 40, 43, 45, 48, 55, 61, 80, 82, 88, 91], "To": [3, 4, 7, 8, 10, 11, 12, 42, 43, 44, 64, 66, 80, 82, 85, 88, 91, 92, 93, 95], "instanti": [3, 4, 6, 7, 8, 10, 11, 12, 48, 91, 92], "specifi": [3, 4, 5, 7, 8, 10, 11, 12, 13, 28, 37, 43, 44, 45, 46, 54, 55, 57, 61, 76, 77, 82, 89, 90, 91, 92, 93, 94, 95, 96], "valu": [3, 4, 6, 7, 8, 10, 11, 12, 28, 29, 39, 40, 41, 43, 44, 45, 46, 48, 51, 54, 57, 60, 62, 63, 64, 66, 67, 70, 80, 81, 85, 88, 92, 93, 94], "pair": [3, 4, 6, 7, 8, 10, 11, 12, 43], "well": [3, 12, 43, 77, 84, 88, 89, 90, 93], "lead": [3, 4, 7, 10, 11, 12, 20, 37, 53, 61, 80, 95, 96], "ani": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 17, 19, 28, 32, 36, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 55, 73, 80, 81, 82, 90, 91, 93, 95], "must": [3, 4, 5, 7, 8, 10, 11, 12, 41, 43, 45, 53, 55, 66, 77, 81, 85, 90, 91, 92, 93, 95, 96], "zero": [3, 4, 5, 6, 7, 8, 10, 11, 12, 16, 25, 36, 45, 46, 48, 51, 53, 64, 67, 73, 74, 75, 81, 82, 90, 91, 94, 96], "retriev": [3, 4, 6, 7, 8, 10, 11, 12, 16, 23, 43, 44, 84, 89, 91], "along": [3, 4, 6, 7, 8, 10, 11, 12, 14, 43, 66, 72, 76, 77, 79, 88, 95, 96], "possibl": [3, 4, 7, 8, 10, 11, 12, 25, 37, 61, 73, 79, 80, 81, 82, 85, 91, 93], "obtain": [3, 7, 44, 73, 82, 85, 90, 91], "congruent": 3, "just": [3, 4, 7, 8, 10, 11, 12, 23, 41, 48, 49, 81, 82, 84, 88, 89, 90, 93, 95], "few": [3, 4, 7, 8, 10, 11, 12, 23, 41, 81, 82, 90], "charact": [3, 4, 7, 8, 10, 11, 12], "nth": 3, "ellipsi": [3, 4, 7, 8, 10, 11, 12, 96], "sub_tensordict": 3, "inplac": [3, 4, 6, 7, 8, 10, 11, 12, 19, 39, 44, 45, 49, 91], "true": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 19, 22, 23, 29, 32, 33, 36, 37, 39, 42, 43, 44, 45, 46, 48, 49, 53, 54, 55, 61, 62, 63, 64, 67, 70, 73, 76, 77, 79, 82, 84, 88, 89, 90, 91, 92, 93, 95], "set_": [3, 4, 7, 8, 10, 11, 12, 91], "content": [3, 4, 5, 6, 7, 8, 10, 11, 12, 73, 80, 81, 82, 88, 89, 90, 92, 95], "fault": 3, "toler": [3, 4, 7, 8, 10, 11, 12, 56], "latter": [3, 12, 43, 45, 47, 49], "match": [3, 4, 5, 7, 8, 10, 11, 12, 20, 25, 37, 41, 42, 43, 44, 45, 48, 53, 55, 56, 61, 67, 74, 75, 80, 81, 93], "found": [3, 4, 6, 7, 8, 10, 11, 12, 43, 44, 46, 48, 88, 90, 91], "new": [3, 4, 5, 6, 7, 8, 10, 11, 12, 19, 23, 28, 39, 44, 45, 46, 48, 49, 66, 82, 85, 88, 91, 92, 93, 95, 96], "now": [3, 16, 79, 82, 85, 88, 90, 91, 93, 95], "place": [3, 4, 6, 7, 8, 10, 11, 12, 19, 39, 46, 48, 49, 55, 82, 85, 92, 93, 94], "onto": [3, 4, 5, 6, 7, 8, 10, 11, 12, 16, 39, 54, 57, 82, 92], "particular": [3, 12, 91, 95], "cuda": [3, 4, 7, 8, 10, 11, 12, 41, 84, 89, 90, 92], "reshap": [3, 4, 7, 8, 10, 11, 12, 49, 73, 80], "includ": [3, 4, 7, 8, 10, 11, 12, 25, 71, 80, 81, 85, 91, 93, 95], "squeez": [3, 4, 7, 8, 10, 11, 12, 71, 80, 84, 89, 90], "unsqueez": [3, 4, 7, 8, 10, 11, 12, 71, 73, 90], "view": [3, 4, 7, 8, 10, 11, 12, 71, 82, 90], "permut": [3, 4, 7, 8, 10, 11, 12, 71, 93], "cat": [3, 4, 7, 8, 10, 11, 12, 80, 81, 95], "present": [3, 4, 6, 7, 8, 10, 11, 12, 40, 44, 45, 48, 59, 64, 76, 95], "usual": [3, 4, 7, 8, 10, 11, 12, 44], "solut": [3, 41, 93], "wa": [3, 4, 7, 8, 10, 11, 12, 46, 95], "mai": [3, 4, 6, 7, 8, 9, 10, 11, 12, 19, 39, 41, 43, 44, 46, 48, 55, 73, 80, 82, 85, 88, 93, 95], "desir": [3, 4, 7, 8, 10, 11, 12, 23, 43, 70, 75, 80, 85, 92], "enforc": [3, 4, 7, 8, 10, 11, 12, 73, 80], "consist": [3, 12, 77, 81, 95], "dure": [3, 4, 7, 8, 10, 11, 12, 41, 44, 46, 71, 84, 85, 90, 91, 94], "wrap": [3, 12, 41, 42, 43, 44, 45, 46, 47, 49, 53, 79, 85, 93], "unbatchedtensor": 3, "ignor": [3, 4, 7, 8, 10, 11, 12, 23, 43, 44, 47, 49, 52, 55, 64, 79, 81], "flexibl": [3, 63, 79, 82, 90, 93], "arbitrari": [3, 4, 7, 8, 10, 11, 12, 82, 93], "reshaped_td": 3, "power": [3, 4, 7, 8, 10, 11, 12, 81, 88, 93], "guid": 3, "nontensordata": [3, 4, 7, 8, 9, 10, 11, 12, 19, 25, 70, 82], "string": [3, 4, 7, 8, 9, 10, 11, 12, 41, 45, 46, 48, 53, 67, 85, 91], "As": [3, 80, 82, 85, 88, 89, 90, 93, 94, 95, 96], "get": [3, 4, 6, 7, 8, 10, 11, 12, 13, 22, 23, 29, 36, 43, 45, 46, 48, 66, 79, 80, 85, 88, 90, 93, 94, 95], "wherea": [3, 4, 7, 8, 10, 11, 12, 19], "assum": [3, 4, 5, 7, 8, 10, 11, 12, 41, 48, 53, 76, 90], "element": [3, 4, 6, 7, 8, 10, 11, 12, 16, 41, 43, 45, 53, 76, 77, 81, 88, 95], "assign": [3, 4, 6, 7, 8, 10, 11, 12, 73, 80, 93, 94], "list": [3, 4, 5, 6, 7, 8, 10, 11, 12, 16, 25, 28, 40, 41, 43, 44, 46, 48, 49, 50, 53, 64, 67, 79, 80, 88, 95], "nontensorstack": [3, 6, 70], "third": 3, "contrast": [3, 4, 7, 8, 10, 11, 12, 82], "tell": 3, "happen": [3, 93], "ident": [3, 4, 6, 7, 8, 10, 11, 12, 23, 25, 39, 41, 45, 70, 80, 84, 89], "produc": [3, 4, 5, 7, 8, 10, 11, 12, 43, 44, 58, 88], "otherwis": [3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 32, 39, 41, 43, 44, 45, 46, 49, 53, 76, 77, 82], "lazy_stack": [3, 4, 7, 8, 10, 11, 12, 23, 88, 95], "exclusive_field": [3, 4, 7, 8, 10, 11, 12, 16, 23, 88, 95], "stack_dim": [3, 4, 7, 8, 10, 11, 12, 16, 23, 70, 88, 95], "given": [3, 4, 5, 7, 8, 10, 11, 12, 14, 16, 43, 44, 45, 48, 68, 72, 88, 91, 93, 96], "construct": [3, 4, 5, 7, 8, 10, 11, 12, 43, 44, 55, 81, 88, 93], "refin": [3, 4, 7, 8, 10, 11, 12], "later": [3, 4, 7, 8, 10, 11, 12, 43, 80, 82, 84, 85, 90, 93], "semant": [3, 4, 7, 8, 10, 11, 12, 80], "refine_nam": [3, 4, 7, 8, 10, 11, 12], "z": [3, 4, 7, 8, 11, 12, 44, 45, 46, 48, 73], "y": [3, 4, 7, 8, 10, 11, 12, 23, 41, 44, 45, 46, 48, 49, 73, 80, 81, 82, 84, 89, 93], "renam": [3, 4, 6, 7, 8, 10, 11, 12, 39], "m": [3, 4, 7, 8, 10, 11, 12, 43], "n": [3, 4, 7, 8, 10, 11, 12, 23, 43, 84, 89, 91, 94, 95], "h": [3, 4, 7, 8, 10, 11, 12, 40, 90], "themselv": [3, 91], "convert": [3, 4, 6, 7, 8, 10, 11, 12, 17, 19, 20, 21, 24, 25, 26, 27, 48, 50, 82, 90, 92, 95], "rand": [3, 41, 55, 63, 79, 82, 91, 92, 94, 95], "28": [3, 4, 7, 8, 10, 11, 12, 84, 88, 89], "randint": [3, 4, 7, 8, 10, 11, 12, 25, 79, 80, 82, 90, 95], "tupl": [3, 4, 6, 7, 8, 10, 11, 12, 25, 27, 44, 45, 46, 48, 53, 54, 67, 91, 95, 96], "altern": [3, 4, 6, 7, 8, 10, 11, 12, 16, 36, 37, 61, 92], "defer": 3, "until": [3, 4, 7, 8, 10, 11, 12, 70, 88, 90, 95], "item": [3, 4, 7, 8, 10, 11, 12, 73, 80, 82, 84, 89, 91, 95], "immedi": [3, 12], "perform": [3, 4, 7, 8, 10, 11, 12, 23, 43, 47, 49, 55, 64, 80, 84, 90, 91, 93, 95], "lazili": [3, 4, 7, 8, 10, 11, 12, 23, 95], "lot": 3, "unnecessari": 3, "calcul": [3, 4, 7, 8, 10, 11, 12], "should": [3, 4, 5, 6, 7, 8, 10, 11, 12, 19, 23, 36, 41, 42, 43, 45, 46, 47, 48, 49, 53, 54, 55, 65, 68, 70, 77, 81, 85, 88, 90, 91, 92], "_": [3, 4, 7, 8, 10, 11, 12, 23, 43, 45, 48, 53, 63, 64, 85, 88, 93], "stacked_a": 3, "zeros_lik": [3, 4, 5, 7, 8, 10, 11, 12], "caveat": 3, "expens": [3, 4, 7, 8, 10, 11, 12, 90, 95], "repeat": [3, 4, 7, 8, 10, 11, 12, 42, 84, 90, 93], "caus": [3, 4, 7, 8, 10, 11, 12, 19, 73, 93], "overhead": [3, 4, 7, 8, 10, 11, 12, 41, 82, 85, 89, 90, 93], "avoid": [3, 4, 7, 8, 10, 11, 12, 44, 45, 80, 90, 93], "contigu": [3, 4, 7, 8, 10, 11, 12, 67, 81, 84, 88, 89, 90, 92, 95], "further": 3, "mitig": 3, "come": [3, 4, 7, 8, 10, 11, 12, 79, 88, 90, 93], "meta": [3, 4, 6, 7, 8, 10, 11, 12, 23, 36, 80, 81, 82, 92], "metatensor": 3, "keep": [3, 4, 7, 8, 10, 11, 12, 23, 25, 85, 93], "track": [3, 4, 7, 8, 10, 11, 12, 25, 44, 48], "type": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 19, 25, 28, 32, 37, 43, 44, 46, 50, 55, 61, 73, 76, 77, 80, 82, 84, 85, 88, 89, 90], "entri": [3, 4, 6, 7, 8, 10, 11, 12, 16, 39, 40, 46, 48, 49, 55, 64, 65, 67, 76, 80, 82, 85, 91, 92, 93, 95, 96], "suppos": [3, 94], "foo": [3, 9], "someth": [3, 12], "automat": [3, 4, 7, 8, 10, 11, 12, 16, 19, 37, 43, 53, 61], "subsequ": [3, 10, 12, 48, 94], "iter": [3, 4, 7, 8, 10, 11, 12, 28, 37, 44, 45, 48, 61, 84, 88, 90, 94], "integr": [3, 12, 93], "callabl": [3, 4, 7, 8, 10, 11, 12, 40, 41, 42, 43, 44, 45, 48, 49, 50, 85, 88], "accept": [3, 4, 5, 6, 7, 8, 10, 11, 12, 25, 85, 91, 93, 95], "underli": [3, 44, 88], "reason": [3, 12, 80], "high": [3, 4, 6, 7, 8, 10, 11, 12, 39], "facilit": 3, "adopt": [3, 4, 7, 8, 10, 11, 12], "previou": [3, 42, 44, 67, 82, 93], "box": [3, 73], "tutori": [3, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], "pain": [3, 79], "inabl": [3, 79], "solv": [3, 79], "sequenc": [3, 4, 7, 8, 10, 11, 12, 16, 23, 37, 40, 44, 46, 48, 53, 56, 61, 66, 67, 75, 79, 93], "know": [3, 4, 7, 8, 10, 11, 12, 79, 82, 85, 93], "mean": [3, 4, 6, 7, 8, 10, 11, 12, 23, 39, 41, 43, 44, 79, 82, 85, 90, 93, 95], "predecessor": [3, 79], "necessari": [3, 4, 7, 8, 10, 11, 12, 48, 53, 79, 82, 88], "intermediate_x": 3, "second": [3, 4, 7, 8, 10, 11, 12, 42, 81, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96], "combin": [3, 53, 82, 85, 90], "under": [3, 55, 82, 90, 91, 93, 94], "bunch": [3, 81, 95], "ask": [3, 4, 7, 8, 10, 11, 12, 85], "sub": [3, 4, 7, 8, 10, 11, 12, 44, 48, 53, 71, 79, 82, 85], "select_subsequ": [3, 48, 79], "onli": [3, 4, 5, 7, 8, 10, 11, 12, 16, 41, 43, 44, 45, 46, 48, 53, 64, 66, 77, 80, 81, 82, 85, 90, 91, 95], "indispens": 3, "satisfi": 3, "those": [3, 4, 7, 8, 9, 10, 11, 12, 16, 43, 44, 48, 55, 81, 92, 95, 96], "vmap": [3, 4, 7, 8, 10, 11, 12, 23, 43, 48], "capabl": [3, 80, 82], "t": [4, 5, 6, 7, 8, 9, 10, 11, 12, 36, 39, 40, 45, 64, 66, 67, 71, 73, 80, 82, 84, 89, 90], "int": [4, 6, 7, 8, 9, 10, 11, 12, 16, 17, 19, 20, 21, 24, 25, 26, 27, 37, 39, 41, 42, 43, 45, 54, 56, 61, 66, 67, 69, 73, 75, 76, 77, 88, 90], "hook_out": 4, "hook_in": 4, "str": [4, 5, 6, 7, 8, 10, 11, 12, 35, 36, 37, 39, 40, 43, 45, 48, 53, 54, 57, 61, 64, 67, 68, 69, 73, 80, 82], "stack_dim_nam": [4, 7], "strict_shap": [4, 7], "togeth": [4, 40, 42, 53, 55, 67, 90, 93], "default": [4, 5, 6, 7, 8, 10, 11, 12, 13, 19, 22, 23, 28, 29, 36, 37, 39, 41, 43, 44, 45, 48, 49, 51, 52, 53, 54, 55, 56, 57, 61, 64, 66, 67, 70, 73, 76, 77, 81, 85, 91, 92, 93, 94], "behaviour": [4, 5, 7, 8, 10, 11, 12, 44, 46, 48, 63, 64, 71, 80, 82, 95], "them": [4, 7, 8, 10, 11, 12, 16, 41, 43, 44, 47, 48, 49, 67, 80, 81, 85, 88, 90, 93, 95], "affect": [4, 7, 8, 10, 11, 12, 44, 48], "ndimens": [4, 7, 8, 10, 11, 12], "befor": [4, 7, 8, 10, 11, 12, 41, 71, 81, 90, 91, 93, 95], "td_stack": [4, 16], "ab": [4, 7, 8, 10, 11, 12], "absolut": [4, 7, 8, 10, 11, 12, 56], "abs_": [4, 7, 8, 10, 11, 12], "aco": [4, 7, 8, 10, 11, 12], "acos_": [4, 7, 8, 10, 11, 12], "add": [4, 7, 8, 10, 11, 12, 54, 81, 85, 90, 91, 93], "alpha": [4, 7, 8, 10, 11, 12], "float": [4, 5, 7, 8, 10, 11, 12, 25, 51, 56, 60, 66, 67, 84, 88, 89], "scale": [4, 7, 8, 10, 11, 12, 43, 44, 48, 54, 55, 57, 59, 63, 79, 85, 90, 93], "text": [4, 7, 8, 10, 11, 12, 82], "_i": [4, 7, 8, 10, 11, 12], "keyword": [4, 5, 6, 7, 8, 9, 10, 11, 12, 19, 23, 37, 39, 40, 41, 43, 44, 45, 48, 49, 53, 54, 55, 61, 73, 81, 85, 91, 92, 93], "argument": [4, 5, 6, 7, 8, 9, 10, 11, 12, 19, 23, 37, 39, 40, 41, 43, 44, 45, 46, 48, 49, 53, 54, 55, 61, 73, 81, 82, 85, 91, 92, 93, 95], "number": [4, 6, 7, 8, 10, 11, 12, 39, 41, 42, 43, 45, 53, 54, 56, 57, 59, 66, 67, 84, 85, 89, 90, 91, 93, 95], "multipli": [4, 7, 8, 10, 11, 12, 81], "exclus": [4, 7, 8, 10, 11, 12, 16, 23, 64, 73, 81], "exactli": [4, 7, 8, 10, 11, 12, 41, 47, 81, 85, 95], "intersect": [4, 7, 8, 10, 11, 12, 81], "consid": [4, 7, 8, 10, 11, 12, 44, 45, 48, 56, 80, 81, 88, 90, 93, 95], "miss": [4, 7, 8, 10, 11, 12, 44, 45, 48, 82], "both": [4, 5, 7, 8, 10, 11, 12, 73, 76, 81, 85, 88, 90, 93, 94], "side": [4, 7, 8, 10, 11, 12, 81, 93], "add_": [4, 7, 8, 10, 11, 12], "doe": [4, 6, 7, 8, 10, 11, 12, 43, 44, 48, 49, 64, 79, 80, 81, 82, 91, 93], "addcdiv": [4, 7, 8, 10, 11, 12], "other1": [4, 7, 8, 10, 11, 12], "other2": [4, 7, 8, 10, 11, 12], "wise": [4, 7, 8, 10, 11, 12, 81], "divis": [4, 7, 8, 10, 11, 12, 81], "scalar": [4, 7, 8, 10, 11, 12, 51], "frac": [4, 7, 8, 10, 11, 12], "tensor1": [4, 7, 8, 10, 11, 12, 76, 77], "tensor2": [4, 7, 8, 10, 11, 12, 76, 77], "broadcast": [4, 7, 8, 10, 11, 12], "floattensor": [4, 7, 8, 10, 11, 12], "doubletensor": [4, 7, 8, 10, 11, 12], "real": [4, 7, 8, 10, 11, 12, 43, 68, 85, 88], "integ": [4, 5, 7, 8, 9, 10, 11, 12, 88], "numer": [4, 7, 8, 10, 11, 12], "denomin": [4, 7, 8, 10, 11, 12], "addcdiv_": [4, 7, 8, 10, 11, 12], "addcmul": [4, 7, 8, 10, 11, 12], "addcmul_": [4, 7, 8, 10, 11, 12], "null": [4, 7, 8, 10, 11, 12], "boolean": [4, 7, 8, 10, 11, 12, 76, 80], "whether": [4, 5, 7, 8, 10, 11, 12, 23, 41, 42, 52, 54, 63, 65, 70], "upon": [4, 7, 8, 10, 11, 12], "amax": [4, 7, 8, 10, 11, 12], "no_default": [4, 7, 8, 10, 11, 12], "_nodefault": [4, 7, 8, 10, 11, 12], "keepdim": [4, 7, 8, 10, 11, 12], "reduc": [4, 7, 8, 10, 11, 12, 46, 93], "maximum": [4, 7, 8, 10, 11, 12, 37, 53, 61], "max": [4, 7, 8, 10, 11, 12], "return_indic": [4, 7, 8, 10, 11, 12, 77], "amin": [4, 7, 8, 10, 11, 12], "minimum": [4, 7, 8, 10, 11, 12, 51, 54, 57], "min": [4, 7, 8, 10, 11, 12], "append": [4, 7, 8, 10, 11, 12, 88], "analog": [4, 7], "noth": [4, 7], "fn": [4, 7, 8, 10, 11, 12, 57], "filter_empti": [4, 7, 8, 10, 11, 12], "propagate_lock": [4, 7, 8, 10, 11, 12], "call_on_nest": [4, 7, 8, 10, 11, 12], "constructor_kwarg": [4, 7, 8, 10, 11, 12], "signatur": [4, 7, 8, 10, 11, 12, 44, 45, 46, 48, 64, 93], "union": [4, 5, 7, 8, 10, 11, 12, 16, 32, 37, 40, 41, 50, 54, 56, 61, 67, 80, 82], "receiv": [4, 7, 8, 10, 11, 12, 41, 88], "unnam": [4, 7, 8, 10, 11, 12, 53], "modifi": [4, 7, 8, 10, 11, 12, 19, 26, 43, 46, 48, 49, 55, 73, 81, 82, 84, 85, 89, 93], "made": [4, 7, 8, 10, 11, 12, 93], "keyerror": [4, 7, 8, 10, 11, 12], "filter": [4, 7, 8, 10, 11, 12, 85, 93], "lower": [4, 7, 8, 10, 11, 12, 85], "cost": [4, 7, 8, 10, 11, 12], "won": [4, 6, 7, 8, 10, 11, 12, 36, 64, 71, 82], "destroi": [4, 7, 8, 10, 11, 12], "leaf": [4, 7, 8, 10, 11, 12, 43, 55, 77], "therebi": [4, 7, 8, 10, 11, 12], "kept": [4, 7, 8, 10, 11, 12], "left": [4, 7, 8, 10, 11, 12, 81, 95], "untouch": [4, 7, 8, 10, 11, 12, 23, 95], "lock": [4, 6, 7, 8, 10, 11, 12, 22, 23, 39, 73, 81, 90], "scenario": [4, 7, 8, 10, 11, 12, 88], "propag": [4, 7, 8, 10, 11, 12, 48, 71], "fine": [4, 7, 8, 10, 11, 12, 45], "grain": [4, 7, 8, 10, 11, 12, 45], "leav": [4, 6, 7, 8, 10, 11, 12, 23, 25, 39, 53, 55, 64, 80, 93], "care": [4, 7, 8, 10, 11, 12, 43, 47, 49, 64], "mean_tensor_onli": [4, 7, 8, 10, 11, 12], "val": [4, 7, 8, 10, 11, 12, 70, 90], "is_tensor_collect": [4, 7, 8, 10, 11, 12], "runtimeerror": [4, 7, 8, 10, 11, 12, 44], "unexpect": [4, 7, 8, 10, 11, 12, 46, 48], "td_mean": [4, 7, 8, 10, 11, 12], "mean_ani": [4, 7, 8, 10, 11, 12], "recurs": [4, 7, 8, 10, 11, 12, 46, 91], "equal": [4, 7, 8, 10, 11, 12, 66, 80, 88], "silent": [4, 7, 8, 10, 11, 12, 41, 43, 47, 49], "wrong": [4, 7, 8, 10, 11, 12, 41], "right": [4, 7, 8, 10, 11, 12, 41, 73, 74, 75, 81, 93], "transformed_in": [4, 7, 8, 10, 11, 12], "td_1": [4, 7, 8, 10, 11, 12], "td_2": [4, 7, 8, 10, 11, 12], "int64": [4, 6, 7, 8, 10, 11, 12, 19, 40, 55, 79, 80, 84, 88, 89, 90], "regardless": [4, 7, 8, 10, 11, 12], "apply_": [4, 7, 8, 10, 11, 12], "copi": [4, 5, 6, 7, 8, 10, 11, 12, 22, 39, 42, 44, 79, 82, 92], "asin": [4, 7, 8, 10, 11, 12], "asin_": [4, 7, 8, 10, 11, 12], "atan": [4, 7, 8, 10, 11, 12], "atan_": [4, 7, 8, 10, 11, 12], "auto_batch_size_": [4, 7, 8, 10, 11, 12], "batch_dim": [4, 7, 8, 10, 11, 12, 17, 19, 20, 21, 24, 25, 26, 27, 95, 96], "up": [4, 7, 8, 10, 11, 12, 64, 81, 82, 84, 88, 91, 93], "long": [4, 7, 8, 10, 11, 12, 20, 37, 46, 48, 61, 81, 90, 96], "auto_device_": [4, 7, 8, 10, 11, 12], "uniqu": [4, 7, 8, 10, 11, 12, 70, 77], "edit": [4, 7, 8, 10, 11, 12], "length": [4, 7, 8, 10, 11, 12, 45, 76, 96], "describ": [4, 6, 7, 8, 10, 11, 12], "correspond": [4, 6, 7, 8, 10, 11, 12, 39, 43, 45, 55, 81, 82, 85, 91, 95, 96], "repes": [4, 7, 8, 10, 11, 12], "relev": [4, 7, 8, 10, 11, 12, 48], "video": [4, 7, 8, 10, 11, 12], "w": [4, 7, 8, 10, 11, 12, 48, 90], "channel": [4, 7, 8, 10, 11, 12], "spacial": [4, 7, 8, 10, 11, 12], "control": [4, 7, 8, 10, 11, 12, 41, 45, 55, 63, 70, 82, 92, 95], "initi": [4, 6, 7, 8, 10, 11, 12, 42, 80], "ie": [4, 7, 8, 10, 11, 12, 45, 46, 48, 71, 82, 95], "infer": [4, 7, 8, 10, 11, 12, 43, 85], "dynam": [4, 7, 8, 10, 11, 12, 41, 46, 71, 93], "reset": [4, 7, 8, 10, 11, 12, 46, 48, 80, 81], "bfloat16": [4, 7, 8, 10, 11, 12], "bitwise_and": [4, 7, 8, 10, 11, 12], "bitwis": [4, 7, 8, 10, 11, 12], "AND": [4, 7, 8, 10, 11, 12, 44, 48], "land": [4, 7, 8, 10, 11, 12], "byte": [4, 7, 8, 10, 11, 12], "count_dupl": [4, 7, 8, 10, 11, 12], "count": [4, 7, 8, 10, 11, 12], "duplic": [4, 5, 7, 8, 10, 11, 12, 42, 77, 79], "strictli": [4, 7, 8, 10, 11, 12, 80, 93], "discard": [4, 7, 8, 10, 11, 12, 48, 82, 93], "id": [4, 7, 8, 10, 11, 12, 41], "twice": [4, 7, 8, 10, 11, 12, 66, 82], "classmethod": [4, 5, 6, 7, 8, 10, 11, 12, 88, 89, 90], "concaten": [4, 7, 8, 10, 11, 12, 14, 48, 80, 93], "equival": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 36, 40, 53, 54, 72, 91], "cat_from_tensordict": [4, 7, 8, 10, 11, 12], "sort": [4, 7, 8, 10, 11, 12, 53], "nestedkei": [4, 6, 7, 8, 10, 11, 12, 25, 28, 40, 41, 43, 44, 45, 48, 49, 50, 55, 67, 76, 77, 88], "alphabet": [4, 7, 8, 10, 11, 12], "order": [4, 7, 8, 10, 11, 12, 44, 45, 48, 53, 67, 79, 82, 88, 93], "accordingli": [4, 7, 8, 10, 11, 12, 64], "incur": [4, 7, 8, 10, 11, 12, 89, 93], "against": [4, 7, 8, 10, 11, 12, 19, 73, 76, 90], "destin": [4, 6, 7, 8, 10, 11, 12, 67, 82], "cat_tensor": [4, 7, 8, 10, 11, 12], "keep_entri": [4, 7, 8, 10, 11, 12], "remov": [4, 6, 7, 8, 10, 11, 12, 39, 48, 77, 92, 93, 95], "delet": [4, 7, 8, 10, 11, 12, 91, 93], "occur": [4, 7, 8, 10, 11, 12, 46, 48], "ceil": [4, 7, 8, 10, 11, 12], "ceil_": [4, 7, 8, 10, 11, 12], "chunk": [4, 5, 7, 8, 10, 11, 12, 82, 85, 88, 93, 95], "24": [4, 7, 8, 10, 11, 12, 88, 89], "8": [4, 7, 8, 10, 11, 12, 43, 45, 48, 67, 76, 77, 79, 84, 88, 89, 90, 93], "9": [4, 7, 8, 10, 11, 12, 26, 44, 45, 55, 70, 76, 77, 80, 84, 88], "16": [4, 7, 8, 10, 11, 12, 88], "17": [4, 7, 8, 10, 11, 12, 83, 87, 88, 89, 93], "18": [4, 7, 8, 10, 11, 12, 88], "19": [4, 7, 8, 10, 11, 12, 88, 89], "clamp": [4, 7, 8, 10, 11, 12, 81], "let": [4, 7, 8, 10, 11, 12, 64, 85, 88, 93, 94], "min_valu": [4, 7, 8, 10, 11, 12], "max_valu": [4, 7, 8, 10, 11, 12], "respect": [4, 7, 8, 10, 11, 12, 19, 64, 90], "y_i": [4, 7, 8, 10, 11, 12], "x_i": [4, 7, 8, 10, 11, 12], "_valu": [4, 7, 8, 10, 11, 12], "bound": [4, 7, 8, 10, 11, 12], "Or": [4, 7, 8, 10, 11, 12], "upper": [4, 7, 8, 10, 11, 12], "clamp_max": [4, 7, 8, 10, 11, 12], "superior": [4, 7, 8, 10, 11, 12], "clamp_max_": [4, 7, 8, 10, 11, 12], "clamp_min": [4, 7, 8, 10, 11, 12, 85], "inferior": [4, 7, 8, 10, 11, 12], "clamp_min_": [4, 7, 8, 10, 11, 12], "clear": [4, 7, 8, 10, 11, 12], "eras": [4, 7, 8, 10, 11, 12], "clear_device_": [4, 7, 8, 10, 11, 12], "clear_refs_for_compile_": [4, 7, 8, 10, 11, 12], "weakref": [4, 7, 8, 10, 11, 12], "region": [4, 7, 8, 10, 11, 12], "safe": [4, 6, 7, 8, 10, 11, 12, 23, 82], "whenev": [4, 7, 8, 10, 11, 12, 44, 46, 48, 64, 95], "hit": [4, 7, 8, 10, 11, 12], "_dynamo": [4, 7, 8, 10, 11, 12], "exc": [4, 7, 8, 10, 11, 12], "unsupport": [4, 7, 8, 10, 11, 12], "reconstruct": [4, 7, 8, 10, 11, 12, 18, 81, 82, 85], "weakrefvari": [4, 7, 8, 10, 11, 12], "subclass": [4, 7, 8, 9, 10, 11, 12, 32, 43, 45, 46, 47, 49, 80, 93], "subtyp": [4, 7, 8, 10, 11, 12, 45, 82], "to_tensordict": [4, 7, 8, 10, 11, 12, 16, 95], "tree": [4, 6, 7, 8, 10, 11, 12, 22, 23, 39, 82, 90], "unlik": [4, 7, 8, 10, 11, 12, 46, 82, 91, 93], "op": [4, 7, 8, 10, 11, 12, 81, 85], "arithmet": [4, 7, 8, 10, 11, 12], "choic": [4, 7, 8, 10, 11, 12, 54, 57, 82, 89, 90], "frequent": [4, 7, 8, 10, 11, 12], "usag": [4, 7, 8, 10, 11, 12, 44, 46, 48, 82, 85, 93], "complex128": [4, 7, 8, 10, 11, 12], "complex32": [4, 7, 8, 10, 11, 12], "complex64": [4, 7, 8, 10, 11, 12], "consolid": [4, 7, 8, 10, 11, 12, 18], "filenam": [4, 5, 7, 8, 10, 11, 12, 18], "num_thread": [4, 6, 7, 8, 10, 11, 12, 39, 69, 82], "non_block": [4, 6, 7, 8, 10, 11, 12, 35, 36], "return_earli": [4, 6, 7, 8, 10, 11, 12, 39, 69], "use_buff": [4, 7, 8, 10, 11, 12], "share_memori": [4, 7, 8, 10, 11, 12], "pin_memori": [4, 7, 8, 10, 11, 12, 85, 90], "metadata": [4, 7, 8, 10, 11, 12, 82, 92], "thread": [4, 6, 7, 8, 10, 11, 12, 39, 82, 88, 90], "copy_": [4, 7, 8, 10, 11, 12], "futur": [4, 6, 7, 8, 10, 11, 12, 39, 41, 44, 80, 95], "last": [4, 7, 8, 10, 11, 12, 43, 44, 93], "distant": [4, 7, 8, 10, 11, 12], "e": [4, 6, 7, 8, 10, 11, 12, 36, 39, 40, 42, 43, 48, 57, 84, 85, 88, 89, 93], "nf": [4, 7, 8, 10, 11, 12], "pin": [4, 7, 8, 10, 11, 12], "alongisd": [4, 7, 8, 10, 11, 12], "effect": [4, 7, 8, 10, 11, 12, 19, 26], "pickl": [4, 7, 8, 10, 11, 12, 80, 82], "unpickl": [4, 7, 8, 10, 11, 12, 82], "isn": [4, 5, 6, 7, 8, 9, 10, 11, 12, 36, 39, 80, 93], "avail": [4, 7, 8, 10, 11, 12, 43, 44, 80, 85], "tempfil": [4, 5, 6, 7, 8, 10, 11, 12, 36, 82], "tqdm": [4, 7, 8, 10, 11, 12, 90], "timer": [4, 7, 8, 10, 11, 12, 93], "data_consolid": [4, 7, 8, 10, 11, 12], "data_ptr": [4, 7, 8, 10, 11, 12], "v": [4, 7, 8, 10, 11, 12, 40], "untyped_storag": [4, 7, 8, 10, 11, 12], "data_c": [4, 7, 8, 10, 11, 12], "numel": [4, 7, 8, 10, 11, 12, 90], "dump": [4, 6, 7, 8, 10, 11, 12, 82], "global": [4, 7, 8, 10, 11, 12, 41, 43, 44, 64, 93], "adaptive_autorang": [4, 7, 8, 10, 11, 12, 93], "shallow": [4, 7, 8, 10, 11, 12], "update_": [4, 7, 8, 10, 11, 12, 80], "block": [4, 7, 8, 10, 11, 12, 79, 93], "copy_at_": [4, 7, 8, 10, 11, 12], "update_at_": [4, 7, 8, 10, 11, 12], "co": [4, 7, 8, 10, 11, 12, 44], "cos_": [4, 7, 8, 10, 11, 12], "cosh": [4, 7, 8, 10, 11, 12], "cosh_": [4, 7, 8, 10, 11, 12], "create_nest": [4, 7, 8, 10, 11, 12], "overwritten": [4, 7, 8, 10, 11, 12, 47, 64, 82, 91, 93], "cummax": [4, 7, 8, 10, 11, 12], "cumul": [4, 7, 8, 10, 11, 12], "reduciton": [4, 7, 8, 10, 11, 12], "return_argmin": [4, 7, 8, 10, 11, 12], "idend": [4, 7, 8, 10, 11, 12], "within": [4, 5, 6, 7, 8, 10, 11, 12, 22, 23, 39, 43, 45, 47, 49, 53, 73, 77, 79, 81, 85, 88, 93], "d": [4, 7, 8, 10, 11, 12, 20, 40, 43, 44, 46, 48, 50, 53, 55, 63, 84, 89], "return_typ": [4, 7, 8, 10, 11, 12], "cummin": [4, 7, 8, 10, 11, 12], "displai": [4, 7, 8, 10, 11, 12], "reflect": [4, 7, 8, 10, 11, 12], "del_": [4, 7, 8, 10, 11, 12, 91], "densifi": [4, 7, 8, 10, 11, 12, 88], "layout": [4, 7, 8, 10, 11, 12, 88], "stride": [4, 7, 8, 10, 11, 12, 88], "attempt": [4, 7, 8, 10, 11, 12, 38, 43, 44, 80, 88], "plain": [4, 7, 8, 10, 11, 12, 80], "depth": [4, 7, 8, 10, 11, 12], "detach": [4, 7, 8, 10, 11, 12, 41], "gradient": [4, 7, 8, 10, 11, 12, 84, 85, 89, 93], "detach_": [4, 7, 8, 10, 11, 12], "incl": [4, 7, 8, 11, 12], "live": [4, 7, 8, 11, 12, 82], "appropri": [4, 7, 8, 11, 12, 73], "div": [4, 7, 8, 10, 11, 12], "divid": [4, 7, 8, 10, 11, 12, 93], "promot": [4, 7, 8, 10, 11, 12], "divisor": [4, 7, 8, 10, 11, 12], "div_": [4, 7, 8, 10, 11, 12], "doubl": [4, 7, 8, 10, 11, 12], "copy_exist": [4, 5, 6, 7, 8, 10, 11, 12, 39, 69, 82], "share_non_tensor": [4, 6, 7, 8, 10, 11, 12, 39, 69], "proxi": [4, 6, 7, 8, 10, 11, 12, 35, 69], "reproduc": [4, 7, 8, 10, 11, 12, 68], "entry_class": [4, 7, 8, 10, 11, 12], "isinst": [4, 7, 8, 10, 11, 12, 41, 73, 80, 82, 91, 93, 95], "erf": [4, 7, 8, 10, 11, 12], "erf_": [4, 7, 8, 10, 11, 12], "erfc": [4, 7, 8, 10, 11, 12], "erfc_": [4, 7, 8, 10, 11, 12], "exclud": [4, 7, 8, 10, 11, 12], "modif": [4, 7, 8, 10, 11, 12], "either": [4, 7, 8, 10, 11, 12, 16, 41, 53, 80, 85, 91, 92, 95], "prune": [4, 7, 8, 10, 11, 12], "exp": [4, 7, 8, 10, 11, 12, 54, 57], "exp_": [4, 7, 8, 10, 11, 12], "expand": [4, 6, 7, 8, 10, 11, 12, 16, 23, 42, 43, 48, 74, 75, 82, 90], "accord": [4, 6, 7, 8, 10, 11, 12, 39, 85], "td_expand": [4, 7, 8, 10, 11, 12], "expand_a": [4, 7, 8, 10, 11, 12, 73, 90], "basi": [4, 7, 8, 10, 11, 12], "expm1": [4, 7, 8, 10, 11, 12], "expm1_": [4, 7, 8, 10, 11, 12], "fill_": [4, 7, 8, 10, 11, 12], "filter_empty_": [4, 7, 8, 10, 11, 12], "filter_non_tensor_data": [4, 7, 8, 10, 11, 12], "flatten": [4, 6, 7, 8, 10, 11, 12, 84, 89], "start_dim": [4, 7, 8, 10, 11, 12, 84, 89], "end_dim": [4, 7, 8, 10, 11, 12, 84, 89], "60": [4, 7, 8, 10, 11, 12, 76, 77, 88, 89], "12": [4, 7, 8, 10, 11, 12, 49, 76, 88, 89, 95], "td_flat": [4, 7, 8, 10, 11, 12], "14": [4, 7, 8, 10, 11, 12, 88], "15": [4, 7, 8, 10, 11, 12, 88, 89], "20": [4, 7, 8, 10, 11, 12, 76, 77, 88], "21": [4, 7, 8, 10, 11, 12, 88], "22": [4, 7, 8, 10, 11, 12, 88], "23": [4, 7, 8, 10, 11, 12, 88, 89], "25": [4, 7, 8, 10, 11, 12, 88, 89, 90], "26": [4, 7, 8, 10, 11, 12, 88, 89, 90], "27": [4, 7, 8, 10, 11, 12, 26, 83, 87, 88], "29": [4, 7, 8, 10, 11, 12, 88, 89], "30": [4, 7, 8, 10, 11, 12, 76, 77, 88], "31": [4, 7, 8, 10, 11, 12, 88], "33": [4, 7, 8, 10, 11, 12, 84, 88], "34": [4, 7, 8, 10, 11, 12, 84, 85, 88, 89], "35": [4, 7, 8, 10, 11, 12, 88], "36": [4, 7, 8, 10, 11, 12, 88], "37": [4, 7, 8, 10, 11, 12, 88], "38": [4, 7, 8, 10, 11, 12, 88, 89], "39": [4, 7, 8, 10, 11, 12, 88], "40": [4, 7, 8, 10, 11, 12, 76, 77, 88], "41": [4, 7, 8, 10, 11, 12, 88], "42": [4, 7, 8, 10, 11, 12, 88, 90], "43": [4, 7, 8, 10, 11, 12, 88], "44": [4, 7, 8, 10, 11, 12, 88, 89], "45": [4, 7, 8, 10, 11, 12, 88], "46": [4, 7, 8, 10, 11, 12, 84, 88], "47": [4, 7, 8, 10, 11, 12, 88], "48": [4, 7, 8, 10, 11, 12, 88], "49": [4, 7, 8, 10, 11, 12, 88], "51": [4, 7, 8, 10, 11, 12, 88], "52": [4, 7, 8, 10, 11, 12, 88, 89, 90], "53": [4, 7, 8, 10, 11, 12, 88], "54": [4, 7, 8, 10, 11, 12, 88, 89], "55": [4, 7, 8, 10, 11, 12, 83, 84, 87, 88], "56": [4, 7, 8, 10, 11, 12, 88], "57": [4, 7, 8, 10, 11, 12, 84, 85, 88, 89], "58": [4, 7, 8, 10, 11, 12, 88], "59": [4, 7, 8, 10, 11, 12, 84, 88, 89], "flatten_kei": [4, 7, 8, 10, 11, 12, 91], "is_leaf": [4, 7, 8, 10, 11, 12], "flat": [4, 7, 8, 10, 11, 12], "lost": [4, 7, 8, 10, 11, 12], "over": [4, 7, 8, 10, 11, 12, 44, 45, 48, 80, 84, 89, 90], "prevent": [4, 5, 7, 8, 10, 11, 12, 82, 90], "mark": [4, 7, 8, 10, 11, 12], "certain": [4, 7, 8, 10, 11, 12], "leaves_onli": [4, 7, 8, 10, 11, 12, 91], "cl": [4, 7, 8, 10, 11, 12, 73, 88, 89, 90], "travers": [4, 7, 8, 10, 11, 12], "include_nest": [4, 7, 8, 10, 11, 12, 91], "word": [4, 7, 8, 10, 11, 12, 41, 53, 82], "children": [4, 7, 8, 10, 11, 12, 46], "practic": [4, 7, 8, 10, 11, 12], "is_leaf_nontensor": [4, 7, 8, 10, 11, 12], "default_is_leaf": [4, 7, 8, 10, 11, 12], "unflatten_kei": [4, 7, 8, 10, 11, 12, 91], "particularli": [4, 7, 8, 10, 11, 12, 22, 23, 91], "state": [4, 7, 8, 10, 11, 12, 22, 23, 45, 54, 82], "mimic": [4, 6, 7, 8, 10, 11, 12, 39, 82, 91, 92], "ddp_model": [4, 7, 8, 10, 11, 12], "ao": [4, 7, 8, 10, 11, 12], "quantiz": [4, 7, 8, 10, 11, 12], "quantwrapp": [4, 7, 8, 10, 11, 12], "state_dict": [4, 6, 7, 8, 10, 11, 12, 82], "bia": [4, 7, 8, 10, 11, 12, 22, 23, 51, 57, 60, 84, 85, 89, 91], "weight": [4, 7, 8, 10, 11, 12, 22, 23, 26, 46, 82, 85, 91], "model_state_dict": [4, 7, 8, 10, 11, 12], "load_state_dict": [4, 6, 7, 8, 10, 11, 12, 82], "float16": [4, 7, 8, 10, 11, 12], "float64": [4, 7, 8, 10, 11, 12], "floor": [4, 7, 8, 10, 11, 12], "floor_": [4, 7, 8, 10, 11, 12], "frac_": [4, 7, 8, 10, 11, 12], "from_ani": [4, 7, 8, 10, 11, 12], "obj": [4, 7, 8, 10, 11, 12, 17, 19, 27, 50, 80], "auto_batch_s": [4, 7, 8, 10, 11, 12, 17, 19, 20, 21, 24, 25, 26, 27, 37, 53, 61], "less": [4, 7, 8, 10, 11, 12, 66], "restrict": [4, 7, 8, 10, 11, 12, 41, 80], "dataclass": [4, 6, 7, 8, 9, 10, 11, 12, 19, 73, 89, 90], "custom": [4, 7, 8, 10, 11, 12, 79, 80, 89, 90], "heurist": [4, 7, 8, 10, 11, 12, 44], "approach": [4, 7, 8, 10, 11, 12, 79, 82, 90], "extra": [4, 7, 8, 10, 11, 12, 53, 81], "opinion": [4, 7, 8, 10, 11, 12], "term": [4, 7, 8, 10, 11, 12], "strategi": [4, 7, 8, 10, 11, 12, 80], "defin": [4, 7, 8, 10, 11, 12, 19, 43, 47, 49, 73, 85, 88, 89, 90, 93], "full": [4, 5, 7, 8, 10, 11, 12, 19, 80, 81, 82, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96], "represent": [4, 7, 8, 10, 11, 12, 33, 88], "from_dataclass": [4, 7, 8, 10, 11, 12], "namedtupl": [4, 7, 8, 10, 11, 12, 24, 25, 81], "from_namedtupl": [4, 7, 8, 10, 11, 12], "from_dict": [4, 7, 8, 10, 11, 12, 80], "from_tupl": [4, 7, 8, 10, 11, 12], "numpi": [4, 7, 8, 10, 11, 12, 26, 81, 92], "from_struct_arrai": [4, 7, 8, 10, 11, 12], "hdf5": [4, 7, 8, 10, 11, 12, 21], "from_h5": [4, 7, 8, 10, 11, 12], "dest_cl": [4, 7, 8, 10, 11, 12, 19], "as_tensorclass": [4, 7, 8, 10, 11, 12], "determin": [4, 7, 8, 10, 11, 12, 19, 37, 53, 55, 61, 82, 94], "deleg": [4, 7, 8, 10, 11, 12], "convers": [4, 7, 8, 10, 11, 12], "free": [4, 7, 8, 10, 11, 12, 41, 93], "deriv": [4, 7, 8, 10, 11, 12, 19], "unless": [4, 7, 8, 10, 11, 12, 42, 64, 71, 82, 85], "typeerror": [4, 7, 8, 10, 11, 12, 19, 43, 44], "distinct": [4, 7, 8, 10, 11, 12], "while": [4, 7, 8, 10, 11, 12, 23, 43, 44, 47, 49, 80, 82, 88, 90, 92], "input_dict": [4, 7, 8, 10, 11, 12, 20, 37, 61], "sourc": [4, 5, 7, 8, 10, 11, 12, 37, 53, 61, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96], "exclusinv": [4, 7, 10, 11, 12], "note": [4, 7, 8, 10, 11, 12, 16, 25, 43, 44, 48, 80, 84, 85, 89, 90, 93, 95], "__maximum__": [4, 7, 10, 11, 12], "smaller": [4, 7, 10, 11, 12], "sie": [4, 7, 10, 11, 12, 20, 37, 61], "input_td": [4, 7, 10, 11, 12, 20, 37, 61], "from_dict_inst": [4, 7, 8, 10, 11, 12], "myclass": [4, 7, 8, 10, 11, 12, 32, 50, 80, 82], "to_dict": [4, 7, 8, 10, 11, 12], "mode": [4, 7, 8, 10, 11, 12, 43, 63, 64, 70, 71, 85, 93], "r": [4, 7, 8, 10, 11, 12, 43], "h5": [4, 7, 8, 10, 11, 12, 81], "keword": [4, 7, 10, 11, 12], "key1": [4, 7, 8, 10, 11, 12], "key2": [4, 7, 8, 10, 11, 12], "from_modul": [4, 7, 8, 10, 11, 12, 43, 45, 46, 48, 81, 82], "as_modul": [4, 7, 8, 10, 11, 12, 22, 23], "use_state_dict": [4, 7, 8, 10, 11, 12, 22, 23], "param": [4, 7, 8, 10, 11, 12, 22, 23, 43, 44, 45, 46, 48, 55, 56, 63, 81, 85, 91], "unflatten": [4, 7, 8, 10, 11, 12, 22, 23], "hook": [4, 7, 8, 10, 11, 12, 22, 23, 43, 47, 49, 79], "transformerdecod": [4, 7, 8, 10, 11, 12, 22], "decoder_lay": [4, 7, 8, 10, 11, 12, 22], "transformerdecoderlay": [4, 7, 8, 10, 11, 12, 22], "nhead": [4, 7, 8, 10, 11, 12, 22], "d_model": [4, 7, 8, 10, 11, 12, 22], "num_lay": [4, 7, 8, 10, 11, 12, 22], "layer": [4, 7, 8, 10, 11, 12, 22, 90], "linear1": [4, 7, 8, 10, 11, 12, 22, 93], "2048": [4, 7, 8, 10, 11, 12, 22], "expand_ident": [4, 7, 8, 10, 11, 12, 23], "ensebml": [4, 7, 8, 10, 11, 12, 23], "expect": [4, 7, 8, 10, 11, 12, 23, 42, 46, 48, 53, 64, 77, 85], "applic": [4, 7, 8, 10, 11, 12, 23, 68, 85, 88], "densli": [4, 7, 8, 10, 11, 12, 23], "dens": [4, 7, 8, 10, 11, 12, 16, 23, 38, 95], "There": [4, 7, 8, 10, 11, 12, 23, 82, 93], "reinstanti": [4, 7, 8, 10, 11, 12, 23], "whilst": [4, 7, 8, 10, 11, 12, 23], "tempt": [4, 7, 8, 10, 11, 12, 23], "orign": [4, 7, 8, 10, 11, 12, 23, 46, 48, 82], "rememb": [4, 7, 8, 10, 11, 12, 23, 82], "built": [4, 7, 8, 9, 10, 11, 12, 23, 25, 85, 88, 93], "longer": [4, 7, 8, 10, 11, 12, 23], "reserv": [4, 7, 8, 10, 11, 12, 19, 23, 73], "veri": [4, 7, 8, 10, 11, 12, 23, 80, 84, 85, 89], "being": [4, 7, 8, 10, 11, 12, 23, 41, 45, 53, 55, 63, 64, 80, 82, 85, 92, 95], "manual_se": [4, 7, 8, 10, 11, 12, 23, 44, 48, 63], "empty_modul": [4, 7, 8, 10, 11, 12, 23], "n_model": [4, 7, 8, 10, 11, 12, 23], "exec_modul": [4, 7, 8, 10, 11, 12, 23], "to_modul": [4, 7, 8, 10, 11, 12, 23, 43, 45, 48, 81, 95], "sinc": [4, 7, 8, 10, 11, 12, 23, 43, 47, 49, 53, 79, 82, 84, 85, 89, 90, 95, 96], "backprop": [4, 7, 8, 10, 11, 12, 23], "sum": [4, 7, 8, 10, 11, 12, 23, 55, 63, 84, 89], "grad": [4, 7, 8, 10, 11, 12, 23], "norm": [4, 7, 8, 10, 11, 12, 23, 41], "thing": [4, 7, 8, 10, 11, 12, 23, 64, 91], "slightli": [4, 7, 8, 10, 11, 12, 23, 80, 90], "named_tupl": [4, 7, 8, 10, 11, 12, 24, 25], "a_tensor": [4, 7, 8, 10, 11, 12], "a_str": [4, 7, 8, 10, 11, 12], "nt": [4, 7, 8, 10, 11, 12], "to_namedtupl": [4, 7, 8, 10, 11, 12, 25], "genericdict": [4, 7, 8, 10, 11, 12], "from_pytre": [4, 7, 8, 10, 11, 12], "ad": [4, 7, 8, 10, 11, 12, 25, 90, 91, 93], "biject": [4, 7, 8, 10, 11, 12, 25], "regist": [4, 7, 8, 10, 11, 12, 25, 43, 47, 49, 85, 88], "castabl": [4, 7, 8, 10, 11, 12, 25], "np": [4, 7, 8, 10, 11, 12, 25, 26, 73], "ndarrai": [4, 7, 8, 10, 11, 12, 25, 73], "surject": [4, 7, 8, 10, 11, 12, 25], "back": [4, 7, 8, 10, 11, 12, 25, 38], "recov": [4, 7, 8, 10, 11, 12, 25, 44, 95], "weird": [4, 7, 8, 10, 11, 12, 25], "look": [4, 7, 8, 10, 11, 12, 25, 43, 44, 48, 85, 93], "weirdlookingclass": [4, 7, 8, 10, 11, 12, 25], "weird_kei": [4, 7, 8, 10, 11, 12, 25], "pytree_recon": [4, 7, 8, 10, 11, 12, 25], "to_pytre": [4, 7, 8, 10, 11, 12, 25], "v1": [4, 7, 8, 10, 11, 12, 25], "v2": [4, 7, 8, 10, 11, 12, 25], "_pytre": [4, 7, 8, 10, 11, 12, 25], "struct_arrai": [4, 7, 8, 10, 11, 12, 26], "therefor": [4, 7, 8, 10, 11, 12, 85], "transfer": [4, 7, 8, 10, 11, 12, 43, 90], "rex": [4, 7, 8, 10, 11, 12, 26], "81": [4, 7, 8, 10, 11, 12, 26], "fido": [4, 7, 8, 10, 11, 12, 26], "u10": [4, 7, 8, 10, 11, 12, 26], "ag": [4, 7, 8, 10, 11, 12, 26], "i4": [4, 7, 8, 10, 11, 12, 26], "f4": [4, 7, 8, 10, 11, 12, 26], "x_recon": [4, 7, 8, 10, 11, 12, 26], "to_struct_arrai": [4, 7, 8, 10, 11, 12, 26], "my_tupl": [4, 7, 8, 10, 11, 12], "fromkei": [4, 6, 7, 8, 10, 11, 12, 36], "gather": [4, 7, 8, 10, 11, 12, 41, 88, 90], "axi": [4, 7, 8, 10, 11, 12], "Its": [4, 7, 8, 10, 11, 12, 45, 85], "td_gather": [4, 7, 8, 10, 11, 12], "gather_and_stack": [4, 7, 8, 10, 11, 12], "dst": [4, 7, 8, 10, 11, 12], "group": [4, 7, 8, 10, 11, 12, 55, 88], "processgroup": [4, 7, 8, 10, 11, 12], "variou": [4, 7, 8, 10, 11, 12, 19, 81], "rank": [4, 7, 8, 10, 11, 12], "commun": [4, 7, 8, 10, 11, 12], "mp": [4, 7, 8, 10, 11, 12], "client": [4, 7, 8, 10, 11, 12], "init_process_group": [4, 7, 8, 10, 11, 12], "gloo": [4, 7, 8, 10, 11, 12], "world_siz": [4, 7, 8, 10, 11, 12], "init_method": [4, 7, 8, 10, 11, 12], "tcp": [4, 7, 8, 10, 11, 12], "localhost": [4, 7, 8, 10, 11, 12], "10003": [4, 7, 8, 10, 11, 12], "sent": [4, 7, 8, 10, 11, 12, 92], "server": [4, 7, 8, 10, 11, 12, 85], "yuppi": [4, 7, 8, 10, 11, 12], "__name__": [4, 7, 8, 10, 11, 12, 90], "__main__": [4, 7, 8, 10, 11, 12, 90], "set_start_method": [4, 7, 8, 10, 11, 12], "spawn": [4, 7, 8, 10, 11, 12], "main_work": [4, 7, 8, 10, 11, 12], "secondary_work": [4, 7, 8, 10, 11, 12], "start": [4, 7, 8, 10, 11, 12, 66, 90, 93], "join": [4, 7, 8, 10, 11, 12, 85], "chain": [4, 6, 7, 8, 10, 11, 12, 42, 48], "previous": [4, 7, 8, 10, 11, 12, 95], "v0": [4, 7, 8, 10, 11, 12, 44, 45, 55, 70, 79, 80], "behavior": [4, 7, 8, 10, 11, 12, 70, 73], "old": [4, 7, 8, 10, 11, 12, 95], "environ": [4, 7, 8, 10, 11, 12, 63, 70, 80, 85, 90], "variabl": [4, 7, 8, 10, 11, 12, 63, 70, 80, 85, 93], "td_get_defaults_to_non": [4, 7, 8, 10, 11, 12], "set_get_defaults_to_non": [4, 7, 8, 10, 11, 12], "get_at": [4, 7, 8, 10, 11, 12], "get_item_shap": [4, 7, 8, 10, 11, 12], "implement": [4, 7, 8, 10, 12, 79, 80, 82, 84, 85, 88, 89, 90], "ineffici": [4, 7, 95], "get_nestedtensor": [4, 7], "cannot": [4, 7, 8, 9, 10, 11, 12, 41, 53, 73, 88, 90], "optiona": [4, 7], "nestedtensor": [4, 7], "anyth": [4, 7, 64], "els": [4, 7, 8, 10, 11, 12, 41, 64, 84, 89, 90, 91], "b2": [4, 7, 40], "get_non_tensor": [4, 7, 8, 10, 11, 12], "robust": [4, 7, 8, 10, 11, 12], "natur": [4, 7, 8, 10, 11, 12, 63, 82], "scope": [4, 7, 8, 10, 11, 12], "set_non_tensor": [4, 7, 8, 10, 11, 12], "inform": [4, 6, 7, 8, 10, 11, 12, 17, 20, 21, 24, 26, 27, 49, 53, 82, 88], "half": [4, 7, 8, 10, 11, 12], "insert": [4, 7, 8, 10, 11, 12], "int16": [4, 7, 8, 10, 11, 12], "int32": [4, 7, 8, 10, 11, 12], "int8": [4, 7, 8, 10, 11, 12], "irecv": [4, 7, 8, 10, 11, 12], "src": [4, 7, 8, 10, 11, 12], "return_prematur": [4, 7, 8, 10, 11, 12], "init_tag": [4, 7, 8, 10, 11, 12], "pseudo_rand": [4, 7, 8, 10, 11, 12], "asynchron": [4, 6, 7, 8, 10, 11, 12, 36], "isend": [4, 7, 8, 10, 11, 12], "wait": [4, 7, 8, 10, 11, 12, 90], "complet": [4, 7, 8, 10, 11, 12, 81, 93], "withing": [4, 7, 8, 10, 11, 12], "tag": [4, 7, 8, 10, 11, 12], "pseudo": [4, 7, 8, 10, 11, 12], "random": [4, 7, 8, 10, 11, 12, 43, 85, 90, 94], "overlap": [4, 7, 8, 10, 11, 12], "1e": [4, 7, 8, 10, 11, 12, 54, 56, 57, 84, 89], "sec": [4, 7, 8, 10, 11, 12, 88], "slow": [4, 6, 7, 8, 10, 11, 12, 39], "down": [4, 7, 8, 10, 11, 12], "runtim": [4, 7, 8, 10, 11, 12, 45, 55, 79, 85, 90], "your": [4, 7, 8, 10, 11, 12, 43, 70, 80, 82, 90], "algorithm": [4, 7, 8, 10, 11, 12], "is_consolid": [4, 7, 8, 10, 11, 12], "is_contigu": [4, 7, 8, 10, 11, 12], "is_empti": [4, 7, 8, 10, 11, 12], "__not__": [4, 7, 8, 10, 11, 12, 53], "share_memory_": [4, 7, 8, 10, 11, 12], "eg": [4, 6, 7, 8, 10, 11, 12, 39], "increment": [4, 7, 8, 10, 11, 12, 88], "queue": [4, 5, 7, 8, 10, 11, 12, 88], "fut": [4, 7, 8, 10, 11, 12], "timeout": [4, 7, 8, 10, 11, 12, 88], "isfinit": [4, 7, 8, 10, 11, 12], "finit": [4, 7, 8, 10, 11, 12], "nan": [4, 7, 8, 10, 11, 12], "neg": [4, 7, 8, 10, 11, 12, 91, 95], "infin": [4, 7, 8, 10, 11, 12], "imaginari": [4, 7, 8, 10, 11, 12], "part": [4, 7, 8, 10, 11, 12, 44, 55, 79, 82, 85, 90], "isnan": [4, 7, 8, 10, 11, 12], "isneginf": [4, 7, 8, 10, 11, 12], "test": [4, 7, 8, 10, 11, 12, 73, 76, 80, 84, 85, 89, 95], "isposinf": [4, 7, 8, 10, 11, 12], "isreal": [4, 7, 8, 10, 11, 12], "Be": [4, 7, 8, 10, 11, 12], "mind": [4, 7, 8, 10, 11, 12, 42, 95], "signific": [4, 7, 8, 10, 11, 12, 90], "deal": [4, 7, 8, 10, 11, 12, 85, 88], "larg": [4, 6, 7, 8, 10, 11, 12, 39, 82, 85, 90, 91], "_lazystackedtensordictkeysview": [4, 7], "shoulb": [4, 7, 8, 10, 11, 12], "lerp": [4, 7, 8, 10, 11, 12], "end": [4, 7, 8, 10, 11, 12, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96], "interpol": [4, 7, 8, 10, 11, 12], "formula": [4, 7, 8, 10, 11, 12], "lerp_": [4, 7, 8, 10, 11, 12], "lgamma": [4, 7, 8, 10, 11, 12], "lgamma_": [4, 7, 8, 10, 11, 12], "pathlib": [4, 6, 7, 8, 10, 11, 12, 35, 36, 90], "load_memmap": [4, 6, 7, 8, 10, 11, 12, 35, 80, 82], "load_": [4, 6, 7, 8, 10, 11, 12], "load_memmap_": [4, 6, 7, 8, 10, 11, 12], "folder": [4, 6, 7, 8, 10, 11, 12, 36], "fetch": [4, 6, 7, 8, 10, 11, 12, 36], "sens": [4, 6, 7, 8, 10, 11, 12, 36, 85], "total": [4, 6, 7, 8, 10, 11, 12, 36, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], "actual": [4, 6, 7, 8, 10, 11, 12, 36], "synchron": [4, 6, 7, 8, 10, 11, 12, 36], "saved_td": [4, 6, 7, 8, 10, 11, 12, 36], "td_load": [4, 6, 7, 8, 10, 11, 12, 36, 82], "fake": [4, 6, 7, 8, 10, 11, 12, 36], "temporarydirectori": [4, 6, 7, 8, 10, 11, 12, 36, 82], "_subclass": [4, 6, 7, 8, 10, 11, 12, 36], "faketensormod": [4, 6, 7, 8, 10, 11, 12, 36], "faketensor": [4, 6, 7, 8, 10, 11, 12, 36], "info": [4, 7, 8, 10, 11, 12, 85], "ordereddict": [4, 7, 8, 10, 11, 12, 44, 48], "strict": [4, 6, 7, 8, 10, 11, 12, 45, 80], "from_flatten": [4, 6, 7, 8, 10, 11, 12], "format": [4, 7, 8, 10, 11, 12, 67, 80, 82, 88], "preserv": [4, 7, 8, 10, 11, 12, 41, 93], "data_zero": [4, 7, 8, 10, 11, 12], "sd": [4, 7, 8, 10, 11, 12], "lock_": [4, 7, 8, 10, 11, 12, 81, 95], "__setitem__": [4, 7, 8, 10, 11, 12], "rename_key_": [4, 7, 8, 10, 11, 12, 91], "decor": [4, 7, 8, 9, 10, 11, 12, 50, 64, 70, 73, 80, 85], "is_lock": [4, 7, 8, 10, 11, 12, 81], "error": [4, 6, 7, 8, 10, 11, 12, 39, 76, 77, 82, 84, 89], "except": [4, 5, 6, 7, 8, 10, 11, 12, 39, 45, 47, 53, 58, 80, 81, 82, 88, 94], "del": [4, 7, 8, 10, 11, 12, 82, 91], "No": [4, 7, 8, 10, 11, 12, 93], "move": [4, 7, 8, 10, 11, 12, 66, 90, 92], "log": [4, 7, 8, 10, 11, 12, 43, 44, 52, 55, 63, 85, 93], "log10": [4, 7, 8, 10, 11, 12], "log10_": [4, 7, 8, 10, 11, 12], "log1p": [4, 7, 8, 10, 11, 12], "log1p_": [4, 7, 8, 10, 11, 12], "log2": [4, 7, 8, 10, 11, 12], "log2_": [4, 7, 8, 10, 11, 12], "log_": [4, 7, 8, 10, 11, 12], "logical_and": [4, 7, 8, 10, 11, 12], "logic": [4, 7, 8, 10, 11, 12, 85, 89, 90, 93], "logsumexp": [4, 7, 8, 10, 11, 12], "exponenti": [4, 7, 8, 10, 11, 12], "row": [4, 7, 8, 10, 11, 12, 94, 96], "stabil": [4, 7, 8, 10, 11, 12], "len": [4, 7, 8, 10, 11, 12, 66, 84, 88, 89, 90, 95], "fewer": [4, 7, 8, 10, 11, 12], "retain": [4, 7, 8, 10, 11, 12], "make_memmap": [4, 7, 8, 10, 11, 12], "memmap_refresh_": [4, 6, 7, 8, 10, 11, 12], "make_memmap_from_storag": [4, 7, 8, 10, 11, 12], "untypedstorag": [4, 7, 8, 10, 11, 12], "associ": [4, 5, 6, 7, 8, 10, 11, 12, 39, 40, 77, 92], "make_memmap_from_tensor": [4, 7, 8, 10, 11, 12], "copy_data": [4, 5, 7, 8, 10, 11, 12], "replic": [4, 7, 8, 10, 11, 12], "num_work": [4, 7, 8, 10, 11, 12, 90], "chunksiz": [4, 7, 8, 10, 11, 12], "num_chunk": [4, 7, 8, 10, 11, 12], "pool": [4, 7, 8, 10, 11, 12], "max_tasks_per_child": [4, 7, 8, 10, 11, 12], "worker_thread": [4, 7, 8, 10, 11, 12], "index_with_gener": [4, 7, 8, 10, 11, 12], "pbar": [4, 7, 8, 10, 11, 12, 90], "mp_start_method": [4, 7, 8, 10, 11, 12], "callab": [4, 7, 8, 10, 11, 12], "virtual": [4, 7, 8, 10, 11, 12], "tread": [4, 7, 8, 10, 11, 12], "tb": [4, 7, 8, 10, 11, 12], "ndim": [4, 7, 8, 10, 11, 12], "inward": [4, 7, 8, 10, 11, 12], "restack": [4, 7, 8, 10, 11, 12], "equat": [4, 7, 8, 10, 11, 12], "doabl": [4, 7, 8, 10, 11, 12], "job": [4, 7, 8, 10, 11, 12], "seed": [4, 7, 8, 10, 11, 12], "unseed": [4, 7, 8, 10, 11, 12], "taken": [4, 7, 8, 10, 11, 12], "low": [4, 7, 8, 10, 11, 12], "autocorrel": [4, 7, 8, 10, 11, 12], "experi": [4, 7, 8, 10, 11, 12, 90], "These": [4, 7, 8, 10, 11, 12, 48, 71, 81, 82, 94, 95], "NOT": [4, 7, 8, 10, 11, 12, 82], "imposs": [4, 7, 8, 10, 11, 12], "pick": [4, 7, 8, 10, 11, 12], "howev": [4, 7, 8, 10, 11, 12, 44, 80, 81, 82, 88, 91, 92, 93], "uncorrel": [4, 7, 8, 10, 11, 12], "child": [4, 7, 8, 10, 11, 12, 44], "spare": [4, 7, 8, 10, 11, 12], "init": [4, 7, 8, 10, 11, 12], "gain": [4, 7, 8, 10, 11, 12], "progress": [4, 7, 8, 10, 11, 12], "bar": [4, 7, 8, 10, 11, 12, 90], "fork": [4, 7, 8, 10, 11, 12], "process_data": [4, 7, 8, 10, 11, 12], "1_000_000": [4, 6, 7, 8, 10, 11, 12, 81, 82, 93], "map_it": [4, 7, 8, 10, 11, 12], "shuffl": [4, 7, 8, 10, 11, 12], "yield": [4, 7, 8, 10, 11, 12, 82], "dataload": [4, 7, 8, 10, 11, 12, 82, 90], "fashion": [4, 6, 7, 8, 10, 11, 12, 39], "sampl": [4, 7, 8, 10, 11, 12, 43, 44, 46, 55, 63, 79, 93], "prohibit": [4, 7, 8, 10, 11, 12, 93], "unlock_": [4, 7, 8, 10, 11, 12, 81, 95], "break": [4, 7, 8, 10, 11, 12, 82, 84, 89, 93], "masked_fil": [4, 7, 8, 10, 11, 12, 90], "masked_fill_": [4, 7, 8, 10, 11, 12], "masked_select": [4, 7, 8, 10, 11, 12], "td_mask": [4, 7, 8, 10, 11, 12], "dimensionless": [4, 7, 8, 10, 11, 12], "2942": [4, 7, 8, 10, 11, 12], "maximum_": [4, 7, 8, 10, 11, 12], "maybe_dense_stack": [4, 7, 8, 10, 11, 12], "liter": [4, 7, 8, 10, 11, 12], "permit": [4, 5, 7, 8, 10, 11, 12], "reduct": [4, 7, 8, 10, 11, 12], "overflow": [4, 7, 8, 10, 11, 12], "0547": [4, 7, 8, 10, 11, 12], "existsok": [4, 5, 6, 7, 8, 10, 11, 12], "correct": [4, 6, 7, 8, 10, 11, 12, 39, 84, 89], "oom": [4, 6, 7, 8, 10, 11, 12, 39], "throw": [4, 6, 7, 8, 10, 11, 12, 39], "onc": [4, 6, 7, 8, 10, 11, 12, 39, 47, 85, 90, 95], "unlock": [4, 6, 7, 8, 10, 11, 12, 39, 81], "turn": [4, 6, 7, 8, 10, 11, 12, 39, 42, 79, 85], "becaus": [4, 6, 7, 8, 9, 10, 11, 12, 39, 80, 81, 82, 84, 85, 89, 90, 94], "cross": [4, 6, 7, 8, 10, 11, 12, 39, 84, 89], "anymor": [4, 6, 7, 8, 10, 11, 12, 39, 82], "tensordictfutur": [4, 6, 7, 8, 10, 11, 12, 39], "might": [4, 6, 7, 8, 10, 11, 12, 39], "deepli": [4, 6, 7, 8, 10, 11, 12, 39], "recommend": [4, 6, 7, 8, 10, 11, 12, 39, 44, 70], "insid": [4, 6, 7, 8, 10, 11, 12, 39, 84, 89, 90], "memmap_lik": [4, 6, 7, 8, 10, 11, 12, 82, 92], "contentless": [4, 6, 7, 8, 10, 11, 12], "64": [4, 6, 7, 8, 10, 11, 12, 82, 84, 88, 89, 90], "refresh": [4, 6, 7, 8, 10, 11, 12], "saved_path": [4, 6, 7, 8, 10, 11, 12], "9953": [4, 7, 8, 10, 11, 12], "minimum_": [4, 7, 8, 10, 11, 12], "subtract": [4, 7, 8, 10, 11, 12, 81], "mul_": [4, 7, 8, 10, 11, 12], "named_appli": [4, 7, 8, 10, 11, 12], "nested_kei": [4, 7, 8, 10, 11, 12], "condit": [4, 7, 8, 10, 11, 12, 44, 48], "atensordict": [4, 7, 8, 10, 11, 12], "name_filt": [4, 7, 8, 10, 11, 12], "nanmean": [4, 7, 8, 10, 11, 12], "nansum": [4, 7, 8, 10, 11, 12], "neg_": [4, 7, 8, 10, 11, 12], "new_empti": [4, 7, 8, 10, 11, 12], "requires_grad": [4, 7, 8, 10, 11, 12], "emtpi": [4, 7, 8, 10, 11, 12], "By": [4, 7, 8, 10, 11, 12, 43, 70, 85, 88, 91, 92, 93], "unchang": [4, 7, 8, 10, 11, 12], "record": [4, 7, 8, 10, 11, 12], "new_ful": [4, 7, 8, 10, 11, 12], "fill_valu": [4, 5, 7, 8, 10, 11, 12], "new_on": [4, 7, 8, 10, 11, 12], "new_tensor": [4, 7, 8, 10, 11, 12], "new_zero": [4, 7, 8, 10, 11, 12], "non_tensor_item": [4, 7, 8, 10, 11, 12], "mayb": [4, 7, 8, 10, 11, 12], "least": [4, 7, 8, 10, 11, 12, 44, 80], "expos": [4, 7, 8, 10, 11, 12, 44, 45, 81, 89, 90, 93, 95], "param_count": [4, 7, 8, 10, 11, 12], "dims_list": [4, 7, 8, 10, 11, 12], "permutedtensordict": [4, 7, 8, 10, 11, 12], "threadpoolexecutor": [4, 7, 8, 10, 11, 12], "max_work": [4, 7, 8, 10, 11, 12], "pin_memory_": [4, 7, 8, 10, 11, 12], "pop": [4, 7, 8, 10, 11, 12], "thrown": [4, 5, 7, 8, 10, 11, 12, 80], "popitem": [4, 7, 8, 10, 11, 12], "pow": [4, 7, 8, 10, 11, 12], "expon": [4, 7, 8, 10, 11, 12], "pow_": [4, 7, 8, 10, 11, 12], "prod": [4, 7, 8, 10, 11, 12], "qint32": [4, 7, 8, 10, 11, 12], "qint8": [4, 7, 8, 10, 11, 12], "quint4x2": [4, 7, 8, 10, 11, 12], "quint8": [4, 7, 8, 10, 11, 12], "reciproc": [4, 7, 8, 10, 11, 12], "reciprocal_": [4, 7, 8, 10, 11, 12], "record_stream": [4, 7, 8, 10, 11, 12], "dealloc": [4, 7, 8, 10, 11, 12], "reus": [4, 7, 8, 10, 11, 12], "queu": [4, 7, 8, 10, 11, 12], "recv": [4, 7, 8, 10, 11, 12], "async_op": [4, 7, 8, 10, 11, 12], "machin": [4, 7, 8, 10, 11, 12], "go": [4, 7, 8, 10, 11, 12, 82, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96], "special": [4, 7, 8, 10, 11, 12, 73, 93], "lift": [4, 7, 8, 10, 11, 12], "coexist": [4, 7, 8, 10, 11, 12], "nice": [4, 7, 8, 10, 11, 12, 88], "awar": [4, 7, 8, 10, 11, 12, 41], "greedili": [4, 7, 8, 10, 11, 12], "tdr": [4, 7, 8, 10, 11, 12], "rename_map": [4, 7, 8, 10, 11, 12], "abcd": [4, 7, 8, 10, 11, 12], "td_renam": [4, 7, 8, 10, 11, 12], "abgd": [4, 7, 8, 10, 11, 12], "rename_": [4, 7, 8, 10, 11, 12], "old_kei": [4, 7, 8, 10, 11, 12], "new_kei": [4, 7, 8, 10, 11, 12], "behav": [4, 7, 8, 10, 11, 12, 47, 58, 95], "tile": [4, 7, 8, 10, 11, 12], "repeat_interleav": [4, 7, 8, 10, 11, 12], "repetit": [4, 7, 8, 10, 11, 12], "replac": [4, 7, 8, 10, 11, 12, 46, 95], "addition": [4, 7, 8, 10, 11, 12, 91], "requires_grad_": [4, 7, 8, 10, 11, 12], "round": [4, 7, 8, 10, 11, 12], "round_": [4, 7, 8, 10, 11, 12], "valish": [4, 7, 8, 10, 11, 12], "soon": [4, 7, 8, 10, 11, 12, 88, 95], "select": [4, 7, 8, 10, 11, 12, 33, 46, 48, 79, 82, 88, 96], "depriv": [4, 7, 8, 10, 11, 12], "split_kei": [4, 7, 8, 10, 11, 12], "td_a_c": [4, 7, 8, 10, 11, 12], "host": [4, 7, 8, 10, 11, 12], "yet": [4, 7, 8, 10, 11, 12, 85, 90], "mismatch": [4, 7, 8, 10, 11, 12], "set_at_": [4, 7, 8, 10, 11, 12], "setdefault": [4, 7, 8, 10, 11, 12, 91], "Will": [4, 7, 8, 10, 11, 12], "sigmoid_": [4, 7, 8, 10, 11, 12], "sign": [4, 7, 8, 10, 11, 12], "sign_": [4, 7, 8, 10, 11, 12], "sin": [4, 7, 8, 10, 11, 12], "sin_": [4, 7, 8, 10, 11, 12], "sinh": [4, 7, 8, 10, 11, 12], "sinh_": [4, 7, 8, 10, 11, 12], "sorted_kei": [4, 7, 8, 10, 11, 12], "_nestedkei": [4, 7, 8, 10, 11, 12, 67], "cach": [4, 7, 8, 10, 11, 12, 93], "split_siz": [4, 7, 8, 10, 11, 12], "key_set": [4, 7, 8, 10, 11, 12], "reproduce_struct": [4, 7, 8, 10, 11, 12], "subset": [4, 7, 8, 10, 11, 12, 90, 91, 95], "td_a": [4, 7, 8, 10, 11, 12], "td_bc": [4, 7, 8, 10, 11, 12], "td_d": [4, 7, 8, 10, 11, 12], "sqrt": [4, 7, 8, 10, 11, 12, 81], "squar": [4, 7, 8, 10, 11, 12], "sqrt_": [4, 7, 8, 10, 11, 12], "singleton": [4, 7, 8, 10, 11, 12, 95], "alter": [4, 7, 8, 10, 11, 12], "implicit": [4, 7, 8, 10, 11, 12], "stack_from_tensordict": [4, 7, 8, 10, 11, 12], "stack_tensor": [4, 7, 8, 10, 11, 12], "keep_var": [4, 6, 7, 8, 10, 11, 12, 82], "rebuild": [4, 7, 8, 10, 11, 12, 82, 93], "compos": [4, 7, 8, 10, 11, 12, 88, 90], "__batch_siz": [4, 7, 8, 10, 11, 12], "__devic": [4, 7, 8, 10, 11, 12], "std": [4, 7, 8, 10, 11, 12, 54, 57], "standard": [4, 7, 8, 10, 11, 12, 81, 85], "deviat": [4, 7, 8, 10, 11, 12], "freedom": [4, 7, 8, 10, 11, 12], "bessel": [4, 7, 8, 10, 11, 12], "0006": [4, 7, 8, 10, 11, 12], "sub_": [4, 7, 8, 10, 11, 12], "tan": [4, 7, 8, 10, 11, 12], "tan_": [4, 7, 8, 10, 11, 12], "tanh": [4, 7, 8, 10, 11, 12], "tanh_": [4, 7, 8, 10, 11, 12], "whose": [4, 7, 8, 10, 11, 12, 48, 91, 93, 94, 95, 96], "memory_format": [4, 7, 8, 10, 11, 12, 85], "4d": [4, 7, 8, 10, 11, 12], "undertook": [4, 7, 8, 10, 11, 12], "non_blocking_pin": [4, 7, 8, 10, 11, 12], "slower": [4, 7, 8, 10, 11, 12, 88], "multithread": [4, 7, 8, 10, 11, 12], "benefici": [4, 7, 8, 10, 11, 12], "outweigh": [4, 7, 8, 10, 11, 12], "benefit": [4, 7, 8, 10, 11, 12, 85], "small": [4, 7, 8, 10, 11, 12, 82, 85, 95], "get_num_thread": [4, 7, 8, 10, 11, 12], "cancel": [4, 7, 8, 10, 11, 12, 88], "data_cuda": [4, 7, 8, 10, 11, 12], "data_int": [4, 7, 8, 10, 11, 12], "data_cuda_int": [4, 7, 8, 10, 11, 12], "retain_non": [4, 7, 8, 10, 11, 12], "convert_tensor": [4, 7, 8, 10, 11, 12], "remain": [4, 7, 8, 10, 11, 12, 80, 91, 94], "tolist": [4, 6, 7, 8, 10, 11, 12], "to_h5": [4, 7, 8, 10, 11, 12], "backend": [4, 7, 8, 10, 11, 12], "h5py": [4, 7, 8, 10, 11, 12], "create_dataset": [4, 7, 8, 10, 11, 12], "persitenttensordict": [4, 7, 8, 10, 11, 12], "link": [4, 7, 8, 10, 11, 12], "newli": [4, 7, 8, 10, 11, 12], "timeit": [4, 7, 8, 10, 11, 12], "from_tensor": [4, 5, 7, 8, 10, 11, 12], "namedtemporaryfil": [4, 5, 7, 8, 10, 11, 12], "td_h5": [4, 7, 8, 10, 11, 12], "compress": [4, 7, 8, 10, 11, 12], "gzip": [4, 7, 8, 10, 11, 12], "compression_opt": [4, 7, 8, 10, 11, 12], "1000000": [4, 7, 8, 10, 11, 12], "return_swap": [4, 7, 8, 10, 11, 12], "swap_dest": [4, 7, 8, 10, 11, 12], "memo": [4, 7, 8, 10, 11, 12], "temporarili": [4, 7, 8, 10, 11, 12, 44, 81], "swap": [4, 7, 8, 10, 11, 12, 95], "zero_": [4, 7, 8, 10, 11, 12, 81], "rubric": [4, 7, 8, 10, 11, 12, 46, 48], "remak": [4, 7, 8, 10, 11, 12], "repopul": [4, 7, 8, 10, 11, 12], "to_padded_tensor": [4, 7, 8, 10, 11, 12], "pad": [4, 7, 8, 10, 11, 12, 67], "mask_kei": [4, 7, 8, 10, 11, 12], "adapt": [4, 7, 8, 10, 11, 12, 95], "valid": [4, 7, 8, 10, 11, 12, 19, 41, 67, 73, 80, 90, 92], "arr": [4, 7, 8, 10, 11, 12], "switch": [4, 7, 8, 10, 11, 12, 88, 93], "convert_nod": [4, 8, 10, 11, 12], "inner": [4, 8, 10, 11, 12], "transpos": [4, 7, 8, 10, 11, 12, 71, 95], "dim0": [4, 7, 8, 10, 11, 12], "dim1": [4, 7, 8, 10, 11, 12], "tensordict_transpos": [4, 7, 8, 10, 11, 12], "trunc": [4, 7, 8, 10, 11, 12], "trunc_": [4, 7, 8, 10, 11, 12], "dst_type": [4, 7, 8, 10, 11, 12], "uint16": [4, 7, 8, 10, 11, 12], "uint32": [4, 7, 8, 10, 11, 12], "uint64": [4, 7, 8, 10, 11, 12], "unflattened_s": [4, 7, 8, 10, 11, 12], "td_unflat": [4, 7, 8, 10, 11, 12], "compris": [4, 7, 8, 10, 11, 12], "input_dict_or_td": [4, 7, 8, 10, 11, 12], "keys_to_upd": [4, 7, 8, 10, 11, 12], "update_batch_s": [4, 7, 8, 10, 11, 12], "corrupt": [4, 7, 8, 10, 11, 12], "hope": [4, 7, 8, 10, 11, 12, 88], "catch": [4, 7, 8, 10, 11, 12], "patch": [4, 7, 8, 10, 11, 12], "key_to_upd": [4, 7, 8, 10, 11, 12], "data_dest": [4, 7, 8, 10, 11, 12], "data_src": [4, 7, 8, 10, 11, 12], "lazystacktensordict": [4, 7, 8, 10, 11, 12], "unabl": [4, 7, 8, 10, 11, 12], "ignore_lock": [4, 7, 8, 10, 11, 12], "statu": [4, 7, 8, 10, 11, 12, 29], "dest": [4, 7, 8, 10, 11, 12, 53, 74], "reli": [4, 7, 8, 10, 11, 12, 80, 82, 93, 95], "other_td": [4, 7, 8, 10, 11, 12], "though": [4, 7, 8, 10, 11, 12, 80, 85, 90, 95], "unknown": [4, 7, 8, 10, 11, 12], "valid_kei": [4, 7], "var": [4, 7, 8, 10, 11, 12], "varianc": [4, 7, 8, 10, 11, 12, 54, 57], "td_view": [4, 7, 8, 10, 11, 12], "depend": [4, 7, 8, 10, 11, 12, 43, 44, 48, 64, 85], "booltensor": [4, 7, 8, 10, 11, 12, 96], "nonzero": [4, 7, 8, 10, 11, 12], "set_to_non": [4, 7, 8, 10, 11, 12, 29], "resid": 5, "filepath": 5, "undefin": [5, 12, 80], "memmap_tensor": 5, "memmap_tensor_empti": 5, "empty_lik": 5, "memmap_tensor_zero": 5, "ones_lik": 5, "ok": [5, 93], "overwrit": 5, "empty_nest": 5, "nested_shap": 5, "from_filenam": 5, "nested_tensor": [5, 88], "from_handl": 5, "inadvert": [5, 82], "overrid": [5, 12, 85], "full_lik": 5, "seq": [5, 42, 44, 45, 46, 48, 49, 85], "_metadata": 6, "_is_non_tensor": 6, "from_tensordict": 6, "non_tensordict": 6, "wrapper": [6, 7, 12, 41, 43, 45, 47, 49], "attemptedli": 6, "maybe_to_stack": [6, 7], "setattr": 6, "tent": 6, "thin": 7, "around": [7, 43, 45, 49, 88, 93], "recogniz": 7, "j": 7, "valueerror": [7, 12, 44], "interchang": 7, "extract": [7, 85, 90], "persist": [8, 12, 82], "close": 8, "materi": 8, "reman": 8, "ptd": 8, "recur": [8, 10, 11, 12, 93], "_persistenttdkeysview": 8, "fall": [8, 10, 11, 12, 38], "better": [9, 90], "non_tensor": [9, 80], "bracket": 9, "autocast": [9, 19, 73], "nocast": [9, 19, 73], "frozen": [9, 19, 73], "anticip": 9, "conflict": [9, 93], "parent": [9, 11, 12, 82], "notabl": 10, "algebra": 10, "expend": 10, "td_unsqueez": 10, "a_view": 10, "td_cpu": 10, "td_or_dict": 10, "old_nam": 10, "new_nam": 10, "tensordict_list": 10, "lsit": 10, "deliv": [10, 95], "fastest": 10, "movement": 10, "creation": 10, "potenti": [10, 12, 77], "td_unqueez": 10, "hasn": 10, "_tensordictkeysview": 10, "no_convert": 12, "exposur": 12, "hold": [12, 84, 89, 90], "seamless": 12, "enabl": [12, 19, 79, 80, 93], "named_paramet": [12, 91], "compar": [12, 45, 90, 93], "afterward": [12, 43, 47, 49, 93], "p": [12, 44], "custommodul": 12, "add_modul": 12, "submodul": [12, 45, 48], "direct": 12, "member": 12, "xdoctest": 12, "skip": [12, 43, 64], "buf": 12, "20l": 12, "1l": 12, "5l": 12, "__call__": [12, 43, 45, 90], "eval": [12, 84, 89], "dropout": 12, "batchnorm": 12, "disabl": [12, 19, 73, 80], "comparison": 12, "mechan": 12, "confus": 12, "extra_repr": 12, "line": [12, 82], "multi": [12, 93], "overridden": [12, 43, 47, 49, 55], "recip": [12, 43, 47, 49], "get_buff": 12, "docstr": 12, "get_submodul": 12, "explan": 12, "correctli": [12, 85], "fulli": [12, 85, 90, 93], "qualifi": 12, "referenc": 12, "attributeerror": 12, "invalid": 12, "resolv": [12, 93], "get_extra_st": 12, "set_extra_st": 12, "picklabl": 12, "form": [12, 42, 43, 66], "get_paramet": 12, "sai": 12, "net_b": 12, "net_c": 12, "conv": 12, "conv2d": 12, "kernel_s": 12, "in_featur": [12, 84, 89], "out_featur": [12, 84, 89], "200": 12, "diagram": 12, "named_modul": 12, "o": [12, 90], "transit": 12, "ipu": 12, "network": [12, 45, 79, 85, 93], "l": 12, "mtia": 12, "named_buff": 12, "remove_dupl": 12, "prepend": 12, "running_var": 12, "named_children": 12, "conv4": 12, "conv5": 12, "typic": [12, 44, 45, 46, 82, 88], "register_backward_hook": 12, "removablehandl": 12, "deprec": [12, 55, 63, 95], "favor": [12, 63], "register_full_backward_hook": 12, "register_buff": 12, "running_mean": 12, "alongsid": 12, "num_featur": 12, "register_forward_hook": 12, "with_kwarg": 12, "always_cal": 12, "posit": [12, 54, 57], "fire": 12, "register_module_forward_hook": 12, "register_forward_pre_hook": 12, "invok": [12, 85], "And": [12, 93], "forward_pr": 12, "register_module_forward_pre_hook": 12, "grad_input": 12, "grad_output": 12, "technic": 12, "caller": 12, "register_module_full_backward_hook": 12, "register_full_backward_pre_hook": 12, "backward_pr": 12, "register_module_full_backward_pre_hook": 12, "register_get_post_hook": 12, "register_load_state_dict_post_hook": 12, "post": 12, "incompatible_kei": 12, "missing_kei": 12, "unexpected_kei": 12, "register_load_state_dict_pre_hook": 12, "local_metadata": 12, "error_msg": 12, "noqa": [12, 84, 89, 90], "b950": 12, "register_modul": 12, "alia": [12, 15, 31], "register_paramet": 12, "register_state_dict_post_hook": 12, "register_state_dict_pre_hook": 12, "set_submodul": 12, "doesn": 12, "to_empti": 12, "xpu": 12, "allow_non": [13, 33], "captur": [13, 41, 70, 85], "seealso": 13, "set_capture_non_tensor_stack": 13, "_default_is_leaf": 15, "td_list": [16, 82], "obtrain": 16, "infeas": 16, "thu": [16, 44, 48], "assert_allclose_td": 16, "td_lazi": 16, "td_contain": 16, "td_container_clon": 16, "push": 16, "reveal": 16, "shadow": [19, 73], "immut": 19, "unintend": [19, 73], "consequ": [19, 73], "x2": 19, "h5_file": 21, "arg0": 30, "_is_leaf_nontensor": 31, "datatyp": 32, "lib": [32, 85], "istanc": 32, "incompat": [37, 61], "callback_exist": 40, "merg": 40, "callback": 40, "b0": 40, "b1": 40, "warmup": [41, 93], "cudagraph": 41, "friendli": 41, "gpu": [41, 90], "essenti": [41, 90], "meet": 41, "fullfil": 41, "flow": 41, "fail": [41, 53], "fortun": [41, 88], "constant": [41, 66], "loss_val": 41, "loss_fn": [41, 84, 89], "differnti": 41, "differenti": 41, "adam": 41, "lr": [41, 84, 89], "irrespect": 41, "discourag": 41, "pytreeabl": 41, "coupl": 41, "suffici": [41, 82], "treat": 41, "alik": 41, "num_copi": [42, 79], "parameter_init_funct": 42, "expand_input": 42, "cnn": 42, "mlp": [42, 93], "mod": [42, 44, 45, 46, 48, 49, 79, 85], "off": 42, "bork": [42, 46], "dork": [42, 46], "next_modul": 42, "spork": 42, "e0": 42, "e1": 42, "probabilist": [43, 44, 55, 85], "parametr": [43, 57, 85, 93], "embed": [43, 45, 85], "loos": 43, "speak": 43, "rule": [43, 93], "default_interaction_typ": [43, 44, 85, 93], "interaction_typ": [43, 44, 93], "get_dist": [43, 44, 93], "dist": [43, 44, 55, 63, 85, 93], "median": [43, 93], "rsampl": [43, 55], "suppli": 43, "delta": 43, "determinist": [43, 44, 85], "importantli": 43, "interest": [43, 85], "loc": [43, 44, 48, 54, 55, 57, 59, 63, 79, 85, 90, 93], "normal": [43, 44, 48, 55, 59, 63, 79, 85, 90, 93], "interactiontyp": [43, 85], "randomli": [43, 90], "drawn": 43, "interact": [43, 44, 81, 82], "dictat": 43, "probabilistictdmodul": 43, "datacollectorbas": 43, "set_interaction_typ": [43, 85], "paliat": 43, "get_mod": 43, "get_median": 43, "get_mean": 43, "distribution_class": [43, 44, 48, 79, 85, 93], "compositedistribut": [43, 44, 52, 63], "distribution_map": [43, 55, 63], "name_map": [43, 55], "keywork": 43, "distribution_kwarg": [43, 44], "return_log_prob": [43, 48, 79, 93], "log_prob_kei": [43, 55], "log_prob": [43, 44, 55, 63], "sample_key_nam": 43, "_log_prob": [43, 55], "sample_log_prob": [43, 48, 55, 79, 93], "cache_dist": 43, "diverg": 43, "action": [43, 79, 81, 92, 93], "ppo": 43, "n_empirical_estim": 43, "empir": 43, "normalparamextractor": [43, 48, 79, 85, 93], "functional_modul": [43, 48], "make_funct": [43, 48], "hidden": [43, 45, 48, 79, 85, 93], "grucel": [43, 45, 79, 93], "normal_param": [43, 48, 57], "indepnorm": 43, "prob_modul": [43, 79], "td_modul": [43, 45, 47, 48, 79, 93], "td_vmap": [43, 48], "build_dist_from_param": [43, 44], "dist_params_kei": [43, 44], "dist_sample_kei": [43, 44], "_requires_sampl": 43, "extend": [44, 88], "return_composit": 44, "interdepend": 44, "termin": [44, 88], "partial_toler": [44, 48], "scan": [44, 48], "prob": [44, 58, 63, 85], "9189": 44, "sample0": 44, "loc2": 44, "sample1": 44, "sample0_log_prob": 44, "sample1_log_prob": 44, "revers": [44, 45, 95], "get_dist_param": 44, "composit": [44, 55], "aggregate_prob": [44, 55], "include_sum": 44, "warn": [44, 52, 70], "explicitli": [44, 70, 82, 93], "space": [45, 85, 90], "nestedstr": 45, "out_to_in_map": 45, "invert": [45, 60], "prevail": 45, "taensordict": 45, "method_kwarg": 45, "neural": [45, 93], "128": [45, 93], "tgt": 45, "mynet": 45, "my_func": 45, "an_integ": 45, "td_function": 45, "td_state": 45, "character": 46, "convent": 46, "tensordict_in": 46, "properli": 46, "select_out_kei": [46, 48, 85, 93], "static": 46, "is_tdmodule_compat": 46, "reset_out_kei": [46, 48, 85], "reset_parameters_recurs": 46, "old_param": 46, "reset_paramet": 46, "rid": [46, 48, 93], "presenc": [46, 48], "trigger": [46, 48], "out_keys_sourc": [46, 48], "simplest": [46, 48, 93], "revert": [46, 48, 85], "tensordictsequenci": 48, "who": 48, "selected_out_kei": [48, 85, 93], "wish": [48, 88, 93], "clariti": 48, "7214": 48, "8748": 48, "1571": 48, "1138": 48, "grad_fn": [48, 85], "addbackward0": 48, "tensordictsequ": 48, "net1": 48, "module1": 48, "td_module1": 48, "module2": 48, "td_module2": 48, "absent": 48, "pattern": 48, "acord": 48, "idn": 48, "modulelist": 48, "0x126ed1ca0": 48, "0x129efae50": 48, "visibl": 49, "my_method": 50, "my_funct": [50, 70], "min_val": [51, 85], "01": [51, 83, 85, 87, 89], "bias": 51, "softplu": [51, 54, 57, 60, 85], "_bia": 51, "shift": 51, "nowarn": 52, "entropi": [52, 55, 63, 84, 89], "aggreg": [52, 55, 63], "mymodul": [53, 64], "keys_in": 53, "keys_out": 53, "dispatch_kwarg": 53, "mymodulenest": 53, "a_c": 53, "sep": 53, "asepc": 53, "oopsi": 53, "scale_shap": 54, "scale_map": [54, 57, 85], "scale_lb": [54, 57, 85], "0001": [54, 57, 85], "make_param": 54, "trainabl": 54, "biased_softplus_1": [54, 57], "num_output": 54, "module_norm": 54, "lstm": [54, 57], "extra_kwarg": 55, "entropy_kei": 55, "log_prob_composit": 55, "entropy_composit": 55, "cdf": 55, "icdf": 55, "tbe": 55, "sample_nam": 55, "_entropi": 55, "plu": [55, 81], "cont": [55, 63], "disc": [55, 63], "categor": [55, 58, 63], "cont_log_prob": [55, 63], "disc_log_prob": [55, 63], "atol": 56, "06": 56, "rtol": 56, "batch_shap": 56, "event_shap": 56, "rel": [56, 84, 89, 95], "outcom": 56, "hot": 58, "excacli": 58, "encod": 58, "discret": [58, 85, 88], "validate_arg": 59, "truncat": 59, "peopl": 59, "sc": 59, "fsu": 59, "edu": 59, "jburkardt": 59, "truncated_norm": 59, "pdf": 59, "invers": 60, "do_softmax": 62, "somewhat": 63, "lp": 63, "0886": 63, "2155": 63, "0414": 63, "8973": 63, "5165": 63, "4402": 63, "2806": 63, "2799": 63, "1733": 63, "0407": 63, "3593": 63, "5763": 63, "in_key_attr": 64, "out_key_attr": 64, "skip_exist": 64, "abl": [64, 80, 82, 85, 88, 90, 95, 96], "fun": 64, "partial": [64, 80, 82], "intend": [64, 68], "outsid": 64, "hello": 64, "ot": 64, "mistakenli": 64, "subgraph": 64, "deactiv": [64, 80], "pad_siz": 66, "padding_left": 66, "padding_right": 66, "padding_top": 66, "padding_bottom": 66, "dim0_left": 66, "dim0_right": 66, "dim1_left": 66, "dim1_right": 66, "padded_td": [66, 67], "list_of_tensordict": 67, "pad_dim": 67, "padding_valu": 67, "return_mask": 67, "stack_len": 67, "new_shap": 67, "max_seq_length": 67, "rest": [67, 88], "list_td": 67, "pars": 68, "repr": [68, 80], "debug": [68, 85], "capture_non_tensor_stack": 70, "begin": 70, "thie": 73, "mydata": [73, 80], "expand_and_mask": 73, "nestingmydata": 73, "nesting_data": 73, "hint": [73, 80], "help": [73, 80, 88, 90], "td_ref": 76, "in_refer": 76, "expected_in_refer": 76, "assert_clos": [76, 95], "detect": 77, "identifi": 77, "corrspond": 77, "unique_indic": 77, "occurr": 77, "return_index": 77, "output_tensordict": 77, "remove_duplicate_el": 77, "expected_output": 77, "ml": 79, "pipelin": [79, 84, 88, 89, 90, 93], "basic": [79, 88, 90], "512": [79, 84, 89], "necessarili": [79, 93], "suffic": 79, "sub_modul": 79, "summari": 79, "statist": 79, "straightforward": 79, "reiniti": 79, "ensemblemodul": 79, "compon": [79, 85, 90], "reach": 79, "predefin": 80, "__future__": [80, 82], "annot": [80, 82], "floatdata": 80, "intdata": 80, "non_tensordata": 80, "check_nest": 80, "nested_test": 80, "omit": [80, 91], "intern": 80, "test_chang": 80, "nested_test_chang": 80, "data2": 80, "cat_tc": 80, "catted_tc": 80, "json": [80, 82], "deseri": 80, "data_load": 80, "inequ": 80, "discrep": 80, "userwarn": 80, "test_new": 80, "stack_tc": 80, "limit": [80, 85], "__setattr__": 80, "tc": [80, 82], "tc_autocast": 80, "tc_not_autocast": 80, "type0": 80, "type1": 80, "widespread": 80, "drastic": 80, "pack": 81, "situat": [81, 82], "undon": 81, "primit": [81, 85], "handi": 81, "eas": 81, "de": 81, "goe": 81, "pointer": 81, "my_imag": 81, "unint8": 81, "mini_batch": 81, "er": 81, "think": 81, "_foreach_": 81, "fuse": 81, "kernel": 81, "speed": [81, 82, 90], "imagin": 82, "mainli": 82, "magnitud": 82, "__faster__": 82, "relianc": 82, "explain": [82, 85, 90], "mmap": 82, "unsaf": 82, "memorybuff": 82, "amort": 82, "io": 82, "launch": 82, "concurr": 82, "appar": 82, "disadvantag": 82, "Not": 82, "fallback": 82, "four": 82, "weights_disk": 82, "dir": 82, "new_weight": 82, "prealloc": 82, "make_datum": 82, "255": [82, 90, 93], "dataset_s": 82, "datum": 82, "data_disk": 82, "date": 82, "system": 82, "releant": 82, "print_directory_tre": 82, "tempdir": 82, "loaded_data": 82, "tmpzy1jcaoq": 82, "_tensordict": 82, "tmpdir_0": 82, "tmpdir_1": 82, "memorymap": 82, "mainten": 82, "discontinu": 82, "checkpoint": 82, "moreov": [82, 88], "buit": 82, "huge": 82, "hundr": 82, "gb": 82, "ram": [82, 90], "don": 82, "advanc": 82, "margin": 82, "tensordict_sourc": 82, "snapshot": 82, "app_stat": 82, "my": 82, "hood": [82, 93], "tensordict_target": 82, "state_target": 82, "restor": 82, "uuid": 82, "uuid4": 82, "tensordict2": 82, "target_st": 82, "price": 82, "pai": 82, "again": [82, 91], "statedict": 82, "my_tensordict_sourc": 82, "implic": 82, "unnot": 82, "td_dest": 82, "saniti": 82, "fairli": 82, "tc_dest": 82, "02": [83, 87], "906": [83, 87], "galleri": [83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96], "mem": [83, 87], "mb": [83, 87], "tensorclass_fashion": [83, 87, 89], "00": [83, 87, 89, 90], "675": [83, 87, 89], "data_fashion": [83, 84, 87], "941": [83, 84, 87], "tensordict_modul": [83, 87, 93], "027": [83, 87, 93], "streamed_tensordict": [83, 87, 88], "021": [83, 87, 88], "tensorclass_imagenet": [83, 87, 90], "643": [83, 87, 90], "569": [83, 85, 87], "tensordict_kei": [83, 87, 91], "009": [83, 87, 91], "tensordict_shap": [83, 87, 95], "008": [83, 87, 95], "tensordict_sl": [83, 87, 96], "005": [83, 87, 96], "tensordict_memori": [83, 87, 92], "004": [83, 87, 92], "tensordict_prealloc": [83, 87, 94], "003": [83, 87, 94], "download": [84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96], "transpar": [84, 89, 90], "heavili": [84, 89], "quickstart": [84, 89], "torchvis": [84, 89, 90], "totensor": [84, 89, 90], "is_avail": [84, 89, 90], "conveni": [84, 89, 90, 93], "prepar": [84, 89], "fashionmnist": [84, 89], "cloth": [84, 89], "classifi": [84, 89], "bag": [84, 89, 95], "sneaker": [84, 89], "training_data": [84, 89], "test_data": [84, 89], "repeatedli": [84, 89], "training_data_td": 84, "test_data_td": 84, "Then": 84, "front": 84, "img": 84, "__len__": [84, 89, 90], "__getitem__": [84, 89, 90], "__getitems__": [84, 89, 90], "style": [84, 89, 90], "collat": [84, 89, 90], "collate_fn": [84, 89, 90], "train_dataload": [84, 89, 90], "tor401": [84, 89, 90], "test_dataload": [84, 89], "train_dataloader_td": 84, "test_dataloader_td": 84, "linear_relu_stack": [84, 89], "model_td": 84, "784": [84, 89], "optimis": [84, 89], "stochast": [84, 85, 89], "descent": [84, 89], "crossentropyloss": [84, 89], "sgd": [84, 89], "optimizer_td": 84, "pred": [84, 89], "7f": [84, 89], "5d": [84, 89], "adjust": [84, 89], "unpack": [84, 85, 89], "explicit": [84, 89], "train_td": 84, "num_batch": [84, 89], "test_loss": [84, 89], "no_grad": [84, 89], "argmax": [84, 89], "accuraci": [84, 89], "1f": [84, 89], "avg": [84, 89], "8f": [84, 89], "test_td": 84, "epoch": [84, 89, 90], "4f": [84, 89, 90, 93], "313148": 84, "60000": [84, 89], "297082": 84, "6400": [84, 89], "278878": 84, "12800": [84, 89], "269250": 84, "19200": [84, 89], "251081": 84, "25600": [84, 89], "226427": 84, "32000": [84, 89], "236009": 84, "38400": [84, 89], "208971": 84, "44800": [84, 89], "207229": 84, "51200": [84, 89], "166640": 84, "57600": [84, 89], "160633": 84, "177286": 84, "166658": 84, "109658": 84, "124791": 84, "076198": 84, "014718": 84, "050936": 84, "974665": 84, "986972": 84, "909771": 84, "904533": 84, "938430": 84, "909272": 84, "793488": 84, "839070": 84, "734319": 84, "674734": 84, "714326": 84, "606152": 84, "645314": 84, "542397": 84, "548302": 84, "610398": 84, "578383": 84, "426596": 84, "503797": 84, "393687": 84, "375342": 84, "405778": 84, "313700": 84, "359790": 84, "269192": 84, "62": [84, 88, 89], "280886": 84, "350779": 84, "336789": 84, "167458": 84, "279639": 84, "165326": 84, "175726": 84, "210595": 84, "128131": 84, "176830": 84, "104107": 84, "111026": 84, "0604": 84, "304668": 84, "292386": 84, "279886": 84, "274151": 84, "253694": 84, "226183": 84, "227448": 84, "193195": 84, "193567": 84, "153168": 84, "156995": 84, "168396": 84, "157246": 84, "103333": 84, "118365": 84, "071339": 84, "009579": 84, "033818": 84, "955558": 84, "961881": 84, "881332": 84, "890628": 84, "926387": 84, "893901": 84, "777137": 84, "816110": 84, "721444": 84, "662533": 84, "683497": 84, "584902": 84, "617829": 84, "497560": 84, "527753": 84, "597413": 84, "561042": 84, "409835": 84, "478843": 84, "372358": 84, "357145": 84, "368607": 84, "295315": 84, "337907": 84, "224189": 84, "261989": 84, "341912": 84, "322501": 84, "157571": 84, "259140": 84, "140932": 84, "160843": 84, "176407": 84, "115638": 84, "161433": 84, "067783": 84, "63": [84, 88, 89], "098282": 84, "5769": 84, "minut": [84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96], "jupyt": [84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96], "notebook": [84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96], "ipynb": [84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96], "zip": [84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96], "sphinx": [84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96], "author": [85, 88, 91, 92, 93, 94, 95, 96], "vincent": [85, 88, 93], "moen": [85, 88, 93], "often": [85, 88, 93], "isol": [85, 93], "hardwar": 85, "robot": 85, "drone": 85, "altogeth": 85, "onnx": 85, "stochstic": 85, "ai": 85, "distribt": 85, "latent": 85, "distrbut": 85, "1769": 85, "0000": 85, "1565": 85, "relubackward0": 85, "3321": 85, "4357": 85, "1904": 85, "3871": 85, "addmmbackward0": 85, "splitbackward0": 85, "1238": 85, "2601": 85, "clampminbackward0": 85, "quit": 85, "annoi": 85, "wast": 85, "successfulli": 85, "exportedprogram": 85, "explor": [85, 88], "graph_signatur": 85, "focu": 85, "clearer": 85, "model_export": 85, "graphmodul": 85, "fx_pytre": 85, "tree_flatten_spec": 85, "_in_spec": 85, "module_0_module_weight": 85, "module_0_module_bia": 85, "module_2_module_weight": 85, "module_2_module_bia": 85, "aten": 85, "linear_1": 85, "5254586935043335": 85, "add_1": 85, "broadcast_tensor": 85, "getitem_2": 85, "getitem_3": 85, "tree_unflatten": 85, "_out_spec": 85, "pleas": [85, 95], "print_read": 85, "tdmodul": 85, "1e6": 85, "2f": 85, "micro": 85, "568": 85, "87": 85, "353": 85, "p_l__args___0_module_0_module_weight": 85, "f32": 85, "p_l__args___0_module_0_module_bia": 85, "p_l__args___0_module_2_module_weight": 85, "p_l__args___0_module_2_module_bia": 85, "1149": 85, "_call_modul": 85, "continu": [85, 88], "85": 85, "71": 85, "86": 85, "env": 85, "python3": 85, "site": 85, "broadcast_al": 85, "regualar": 85, "underscor": 85, "model_nest": 85, "model_nested_export": 85, "some_kei": 85, "pure": 85, "protocol": 85, "convention": 85, "pt2": 85, "extens": 85, "recal": 85, "argu": 85, "neglig": 85, "induc": 85, "unwant": [85, 93], "module_filt": 85, "discuss": [85, 96], "address": 85, "enum": 85, "domain": 85, "recap": 85, "respond": 85, "normal_": 85, "add_2": 85, "deploy": 85, "aotinductor": 85, "tutorials_python": 86, "tutorials_jupyt": 86, "world": 88, "vari": 88, "frequenc": 88, "sensor": 88, "iot": 88, "financi": 88, "transact": 88, "social": 88, "media": [88, 90], "analyz": 88, "bucket": 88, "incom": 88, "analysi": 88, "challeng": 88, "interv": 88, "life": 88, "upcom": 88, "rectangular": 88, "bucket0": 88, "stream0": 88, "stream1": 88, "bucket1": 88, "principl": [88, 90], "data_select": 88, "data_plus_1": 88, "data_appli": 88, "data_cont": 88, "concret": 88, "asyncio": 88, "async": 88, "generate_numb": 88, "await": 88, "sleep": 88, "collect_data": 88, "stop": 88, "wait_for": 88, "nonloc": 88, "create_task": 88, "timeouterror": 88, "wait7hz": 88, "generate_task": 88, "collect_data_task": 88, "enough": 88, "streamedtensordict": 88, "from_stream": 88, "values_task": 88, "hz": 88, "7hz": 88, "70": 88, "3hz": 88, "_nested_tensor_s": 88, "61": [88, 89], "65": [88, 89], "66": 88, "67": 88, "68": 88, "seen": [88, 93], "leverag": 88, "scalabl": 88, "demand": [88, 95], "thank": [88, 93], "4m": 89, "5k": 89, "363kb": 89, "229k": 89, "683kb": 89, "885k": 89, "53mb": 89, "93m": 89, "05": 89, "13mb": 89, "55m": 89, "3mb": 89, "0m": 89, "6m": 89, "7mb": 89, "73": 89, "3m": 89, "9mb": 89, "90": 89, "7m": 89, "5mb": 89, "4mb": 89, "328kb": 89, "42m": 89, "362kb": 89, "197k": 89, "07": 89, "583kb": 89, "852k": 89, "98mb": 89, "77": 89, "41m": 89, "81mb": 89, "10mb": 89, "15k": 89, "69": 89, "good": [89, 90], "fix": 89, "encapsul": [89, 90], "from_dataset": [89, 90], "fashionmnistdata": 89, "training_data_tc": 89, "test_data_tc": 89, "train_dataloader_tc": [89, 90], "test_dataloader_tc": 89, "model_tc": 89, "optimizer_tc": 89, "train_tc": 89, "test_tc": 89, "297776": 89, "285073": 89, "265797": 89, "263900": 89, "246367": 89, "223979": 89, "228954": 89, "197018": 89, "192640": 89, "163336": 89, "156597": 89, "168729": 89, "153501": 89, "097351": 89, "116257": 89, "057253": 89, "009928": 89, "034160": 89, "955048": 89, "956481": 89, "888795": 89, "884194": 89, "916020": 89, "881103": 89, "765102": 89, "812483": 89, "688695": 89, "650679": 89, "673494": 89, "572129": 89, "595098": 89, "494365": 89, "509581": 89, "572926": 89, "538116": 89, "388822": 89, "466035": 89, "334628": 89, "343790": 89, "360234": 89, "281432": 89, "313751": 89, "219487": 89, "241078": 89, "316286": 89, "298521": 89, "133108": 89, "239412": 89, "106581": 89, "145541": 89, "169561": 89, "102112": 89, "138480": 89, "059707": 89, "075980": 89, "6131": 89, "297022": 89, "279274": 89, "263730": 89, "263042": 89, "244423": 89, "211986": 89, "217412": 89, "178223": 89, "189185": 89, "149389": 89, "143423": 89, "153996": 89, "136071": 89, "071854": 89, "089887": 89, "038138": 89, "969532": 89, "998506": 89, "909394": 89, "936346": 89, "840546": 89, "846230": 89, "889281": 89, "846204": 89, "724286": 89, "766126": 89, "663038": 89, "614242": 89, "638742": 89, "539191": 89, "584874": 89, "465754": 89, "490287": 89, "564366": 89, "522193": 89, "376342": 89, "447001": 89, "333642": 89, "336009": 89, "349612": 89, "276295": 89, "319464": 89, "217170": 89, "243447": 89, "321753": 89, "297880": 89, "138428": 89, "241757": 89, "114350": 89, "151362": 89, "168221": 89, "108561": 89, "149915": 89, "066624": 89, "085881": 89, "0918": 89, "idea": 90, "raw": 90, "10x": 90, "speedup": 90, "imagenet": [90, 92], "subdirectori": 90, "os": 90, "strtobool": 90, "overfit": 90, "train_transform": 90, "randomresizedcrop": 90, "224": 90, "randomhorizontalflip": 90, "485": 90, "456": 90, "406": 90, "229": 90, "225": 90, "val_transform": 90, "resiz": 90, "256": [90, 93], "centercrop": 90, "imagefold": 90, "data_dir": 90, "hymenoptera_data": 90, "train_data": 90, "val_data": 90, "train_data_raw": 90, "piltotensor": 90, "vector": 90, "invaffin": 90, "crop": 90, "flip": 90, "randomhflip": 90, "bernoulli_": 90, "randomcrop": 90, "index0": 90, "index1": 90, "collate_transform": 90, "known": 90, "apriori": 90, "imagenetdata": 90, "dl": 90, "_batch": 90, "train_data_tc": 90, "val_data_tc": 90, "helper": 90, "parallel": 90, "But": 90, "val_dataload": 90, "val_dataloader_tc": 90, "measur": 90, "rate": 90, "fp": 90, "bigger": 90, "improv": 90, "aw": 90, "ec2": 90, "a100": 90, "png": 90, "alt": 90, "chart": 90, "henc": [90, 92], "__": 90, "blob": 90, "244": 90, "239": 90, "38it": 90, "738": 90, "61it": 90, "153": 90, "187": 90, "54it": 90, "392": 90, "32it": 90, "326": 90, "01it": 90, "891": 90, "2277": 90, "2469": 90, "1725": 90, "7314": 90, "1275": 90, "536": 90, "1535": 90, "2406": 90, "21698": 90, "1559": 90, "0059": 90, "tom": [91, 92, 94, 95, 96], "beglei": [91, 92, 94, 95, 96], "accomplish": 91, "request": 91, "banana": 91, "statement": 91, "chosen": 91, "furthermor": 91, "nested_tensordict": 91, "double_nest": 91, "double_nested_a": 91, "nested_a": 91, "top": 91, "conjunct": [91, 95], "lookup": 91, "flattened_tensordict": 91, "meth": 91, "clear_devic": 92, "slowli": 92, "mm_tensordict": 92, "pt": 92, "nicola": 93, "dufour": 93, "exemplifi": 93, "introduc": 93, "unwat": 93, "programat": 93, "programmat": 93, "architectur": 93, "resnet": 93, "tini": 93, "perceptron": 93, "presum": 93, "feed": 93, "linear0": 93, "incorpor": 93, "convolut": 93, "vision": 93, "forward_hook": 93, "activ": 93, "relu0": 93, "fly": 93, "block0": 93, "relu1": 93, "linear2": 93, "block1": 93, "residu": 93, "flesh": 93, "genuin": 93, "concern": 93, "accumul": 93, "anywai": 93, "garbag": 93, "collector": 93, "opportun": 93, "deconstruct": 93, "greatli": 93, "residualblock": 93, "block_notd": 93, "block_tdm": 93, "block_td": 93, "tdm": 93, "block_notd_c": 93, "block_tdm_c": 93, "block_tds_c": 93, "217": 93, "8161": 93, "282": 93, "7862": 93, "502": 93, "4699": 93, "328": 93, "0125": 93, "338": 93, "2770": 93, "351": 93, "6525": 93, "onverhead": 93, "disappear": 93, "fact": 93, "workspac": 93, "freed": 93, "preced": 93, "wire": 93, "extractor": 93, "oblivi": 93, "manner": 93, "neat": 93, "make_tensordict": 94, "perhap": 94, "initialis": 94, "prepopul": 94, "random_tensordict": 94, "agre": [95, 96], "indexed_tensordict": 95, "reshaped_tensordict": 95, "interpret": 95, "throughout": 95, "conceptu": 95, "carri": 95, "proper": 95, "cloned_tensordict": 95, "stacked_tensordict": 95, "set_lazy_legaci": 95, "dense_stack": 95, "concatenated_tensordict": 95, "exp_tensordict": 95, "squeezed_tensordict": 95, "unsqueezed_tensordict": 95, "were": 95, "lazy_unsqueez": 95, "dense_unsqueez": 95, "bear": 95, "ever": 95, "unaffect": 95, "drop": [95, 96], "_viewedtensordict": 95, "viewed_tensordict": 95, "permuted_tensordict": 95, "quick": 95, "tdt": 95, "gathered_tensordict": 95, "7243": 95, "5694": 95, "0307": 95, "1270": 95, "5334": 95, "2221": 95, "2790": 95, "6742": 95, "4337": 95, "3049": 95, "9879": 95, "6572": 95, "simultan": 96, "new_tensordict": 96}, "objects": {"tensordict": [[4, 0, 1, "", "LazyStackedTensorDict"], [5, 0, 1, "", "MemoryMappedTensor"], [6, 0, 1, "", "NonTensorData"], [7, 0, 1, "", "NonTensorStack"], [8, 0, 1, "", "PersistentTensorDict"], [9, 0, 1, "", "TensorClass"], [10, 0, 1, "", "TensorDict"], [11, 0, 1, "", "TensorDictBase"], [12, 0, 1, "", "TensorDictParams"], [13, 0, 1, "", "capture_non_tensor_stack"], [14, 0, 1, "", "cat"], [15, 3, 1, "", "default_is_leaf"], [16, 0, 1, "", "dense_stack_tds"], [17, 0, 1, "", "from_any"], [18, 0, 1, "", "from_consolidated"], [19, 0, 1, "", "from_dataclass"], [20, 0, 1, "", "from_dict"], [21, 0, 1, "", "from_h5"], [22, 0, 1, "", "from_module"], [23, 0, 1, "", "from_modules"], [24, 0, 1, "", "from_namedtuple"], [25, 0, 1, "", "from_pytree"], [26, 0, 1, "", "from_struct_array"], [27, 0, 1, "", "from_tuple"], [28, 0, 1, "", "fromkeys"], [29, 0, 1, "", "get_defaults_to_none"], [30, 0, 1, "", "is_batchedtensor"], [31, 3, 1, "", "is_leaf_nontensor"], [32, 0, 1, "", "is_tensor_collection"], [33, 0, 1, "", "lazy_legacy"], [34, 0, 1, "", "lazy_stack"], [35, 0, 1, "", "load"], [36, 0, 1, "", "load_memmap"], [37, 0, 1, "", "make_tensordict"], [38, 0, 1, "", "maybe_dense_stack"], [39, 0, 1, "", "memmap"], [40, 0, 1, "", "merge_tensordicts"], [66, 0, 1, "", "pad"], [67, 0, 1, "", "pad_sequence"], [68, 0, 1, "", "parse_tensor_dict_string"], [69, 0, 1, "", "save"], [70, 0, 1, "", "set_capture_non_tensor_stack"], [71, 0, 1, "", "set_lazy_legacy"], [72, 0, 1, "", "stack"], [73, 0, 1, "", "tensorclass"]], "tensordict.LazyStackedTensorDict": [[4, 1, 1, "", "abs"], [4, 1, 1, "", "abs_"], [4, 1, 1, "", "acos"], [4, 1, 1, "", "acos_"], [4, 1, 1, "", "add"], [4, 1, 1, "", "add_"], [4, 1, 1, "", "addcdiv"], [4, 1, 1, "", "addcdiv_"], [4, 1, 1, "", "addcmul"], [4, 1, 1, "", "addcmul_"], [4, 1, 1, "", "all"], [4, 1, 1, "", "amax"], [4, 1, 1, "", "amin"], [4, 1, 1, "", "any"], [4, 1, 1, "", "append"], [4, 1, 1, "", "apply"], [4, 1, 1, "", "apply_"], [4, 1, 1, "", "asin"], [4, 1, 1, "", "asin_"], [4, 1, 1, "", "atan"], [4, 1, 1, "", "atan_"], [4, 1, 1, "", "auto_batch_size_"], [4, 1, 1, "", "auto_device_"], [4, 2, 1, "", "batch_dims"], [4, 2, 1, "", "batch_size"], [4, 1, 1, "", "bfloat16"], [4, 1, 1, "", "bitwise_and"], [4, 1, 1, "", "bool"], [4, 1, 1, "", "bytes"], [4, 1, 1, "", "cat"], [4, 1, 1, "", "cat_from_tensordict"], [4, 1, 1, "", "cat_tensors"], [4, 1, 1, "", "ceil"], [4, 1, 1, "", "ceil_"], [4, 1, 1, "", "chunk"], [4, 1, 1, "", "clamp"], [4, 1, 1, "", "clamp_max"], [4, 1, 1, "", "clamp_max_"], [4, 1, 1, "", "clamp_min"], [4, 1, 1, "", "clamp_min_"], [4, 1, 1, "", "clear"], [4, 1, 1, "", "clear_device_"], [4, 1, 1, "", "clear_refs_for_compile_"], [4, 1, 1, "", "clone"], [4, 1, 1, "", "complex128"], [4, 1, 1, "", "complex32"], [4, 1, 1, "", "complex64"], [4, 1, 1, "", "consolidate"], [4, 1, 1, "", "contiguous"], [4, 1, 1, "", "copy"], [4, 1, 1, "", "copy_"], [4, 1, 1, "", "copy_at_"], [4, 1, 1, "", "cos"], [4, 1, 1, "", "cos_"], [4, 1, 1, "", "cosh"], [4, 1, 1, "", "cosh_"], [4, 1, 1, "", "cpu"], [4, 1, 1, "", "create_nested"], [4, 1, 1, "", "cuda"], [4, 1, 1, "", "cummax"], [4, 1, 1, "", "cummin"], [4, 2, 1, "", "data"], [4, 1, 1, "", "data_ptr"], [4, 1, 1, "", "del_"], [4, 1, 1, "", "densify"], [4, 2, 1, "", "depth"], [4, 1, 1, "", "detach"], [4, 1, 1, "", "detach_"], [4, 2, 1, "", "device"], [4, 1, 1, "", "dim"], [4, 1, 1, "", "div"], [4, 1, 1, "", "div_"], [4, 1, 1, "", "double"], [4, 2, 1, "", "dtype"], [4, 1, 1, "", "dumps"], [4, 1, 1, "", "empty"], [4, 1, 1, "", "entry_class"], [4, 1, 1, "", "erf"], [4, 1, 1, "", "erf_"], [4, 1, 1, "", "erfc"], [4, 1, 1, "", "erfc_"], [4, 1, 1, "", "exclude"], [4, 1, 1, "", "exp"], [4, 1, 1, "", "exp_"], [4, 1, 1, "", "expand"], [4, 1, 1, "", "expand_as"], [4, 1, 1, "", "expm1"], [4, 1, 1, "", "expm1_"], [4, 1, 1, "", "fill_"], [4, 1, 1, "", "filter_empty_"], [4, 1, 1, "", "filter_non_tensor_data"], [4, 1, 1, "", "flatten"], [4, 1, 1, "", "flatten_keys"], [4, 1, 1, "", "float"], [4, 1, 1, "", "float16"], [4, 1, 1, "", "float32"], [4, 1, 1, "", "float64"], [4, 1, 1, "", "floor"], [4, 1, 1, "", "floor_"], [4, 1, 1, "", "frac"], [4, 1, 1, "", "frac_"], [4, 1, 1, "", "from_any"], [4, 1, 1, "", "from_dataclass"], [4, 1, 1, "", "from_dict"], [4, 1, 1, "", "from_dict_instance"], [4, 1, 1, "", "from_h5"], [4, 1, 1, "", "from_module"], [4, 1, 1, "", "from_modules"], [4, 1, 1, "", "from_namedtuple"], [4, 1, 1, "", "from_pytree"], [4, 1, 1, "", "from_struct_array"], [4, 1, 1, "", "from_tuple"], [4, 1, 1, "", "fromkeys"], [4, 1, 1, "", "gather"], [4, 1, 1, "", "gather_and_stack"], [4, 1, 1, "", "get"], [4, 1, 1, "", "get_at"], [4, 1, 1, "", "get_item_shape"], [4, 1, 1, "", "get_nestedtensor"], [4, 1, 1, "", "get_non_tensor"], [4, 2, 1, "", "grad"], [4, 1, 1, "", "half"], [4, 1, 1, "", "insert"], [4, 1, 1, "", "int"], [4, 1, 1, "", "int16"], [4, 1, 1, "", "int32"], [4, 1, 1, "", "int64"], [4, 1, 1, "", "int8"], [4, 1, 1, "", "irecv"], [4, 1, 1, "", "is_consolidated"], [4, 1, 1, "", "is_contiguous"], [4, 1, 1, "", "is_empty"], [4, 1, 1, "", "is_memmap"], [4, 1, 1, "", "is_shared"], [4, 1, 1, "", "isend"], [4, 1, 1, "", "isfinite"], [4, 1, 1, "", "isnan"], [4, 1, 1, "", "isneginf"], [4, 1, 1, "", "isposinf"], [4, 1, 1, "", "isreal"], [4, 1, 1, "", "items"], [4, 1, 1, "", "keys"], [4, 1, 1, "", "lazy_stack"], [4, 1, 1, "", "lerp"], [4, 1, 1, "", "lerp_"], [4, 1, 1, "", "lgamma"], [4, 1, 1, "", "lgamma_"], [4, 1, 1, "", "load"], [4, 1, 1, "", "load_"], [4, 1, 1, "", "load_memmap"], [4, 1, 1, "", "load_memmap_"], [4, 1, 1, "", "load_state_dict"], [4, 1, 1, "", "lock_"], [4, 1, 1, "", "log"], [4, 1, 1, "", "log10"], [4, 1, 1, "", "log10_"], [4, 1, 1, "", "log1p"], [4, 1, 1, "", "log1p_"], [4, 1, 1, "", "log2"], [4, 1, 1, "", "log2_"], [4, 1, 1, "", "log_"], [4, 1, 1, "", "logical_and"], [4, 1, 1, "", "logsumexp"], [4, 1, 1, "", "make_memmap"], [4, 1, 1, "", "make_memmap_from_storage"], [4, 1, 1, "", "make_memmap_from_tensor"], [4, 1, 1, "", "map"], [4, 1, 1, "", "map_iter"], [4, 1, 1, "", "masked_fill"], [4, 1, 1, "", "masked_fill_"], [4, 1, 1, "", "masked_select"], [4, 1, 1, "", "max"], [4, 1, 1, "", "maximum"], [4, 1, 1, "", "maximum_"], [4, 1, 1, "", "maybe_dense_stack"], [4, 1, 1, "", "mean"], [4, 1, 1, "", "memmap"], [4, 1, 1, "", "memmap_"], [4, 1, 1, "", "memmap_like"], [4, 1, 1, "", "memmap_refresh_"], [4, 1, 1, "", "min"], [4, 1, 1, "", "minimum"], [4, 1, 1, "", "minimum_"], [4, 1, 1, "", "mul"], [4, 1, 1, "", "mul_"], [4, 1, 1, "", "named_apply"], [4, 2, 1, "", "names"], [4, 1, 1, "", "nanmean"], [4, 1, 1, "", "nansum"], [4, 2, 1, "", "ndim"], [4, 1, 1, "", "ndimension"], [4, 1, 1, "", "neg"], [4, 1, 1, "", "neg_"], [4, 1, 1, "", "new_empty"], [4, 1, 1, "", "new_full"], [4, 1, 1, "", "new_ones"], [4, 1, 1, "", "new_tensor"], [4, 1, 1, "", "new_zeros"], [4, 1, 1, "", "non_tensor_items"], [4, 1, 1, "", "norm"], [4, 1, 1, "", "numel"], [4, 1, 1, "", "numpy"], [4, 1, 1, "", "param_count"], [4, 1, 1, "", "permute"], [4, 1, 1, "", "pin_memory"], [4, 1, 1, "", "pin_memory_"], [4, 1, 1, "", "pop"], [4, 1, 1, "", "popitem"], [4, 1, 1, "", "pow"], [4, 1, 1, "", "pow_"], [4, 1, 1, "", "prod"], [4, 1, 1, "", "qint32"], [4, 1, 1, "", "qint8"], [4, 1, 1, "", "quint4x2"], [4, 1, 1, "", "quint8"], [4, 1, 1, "", "reciprocal"], [4, 1, 1, "", "reciprocal_"], [4, 1, 1, "", "record_stream"], [4, 1, 1, "", "recv"], [4, 1, 1, "", "reduce"], [4, 1, 1, "", "refine_names"], [4, 1, 1, "", "rename"], [4, 1, 1, "", "rename_"], [4, 1, 1, "", "rename_key_"], [4, 1, 1, "", "repeat"], [4, 1, 1, "", "repeat_interleave"], [4, 1, 1, "", "replace"], [4, 1, 1, "", "requires_grad_"], [4, 1, 1, "", "reshape"], [4, 1, 1, "", "round"], [4, 1, 1, "", "round_"], [4, 1, 1, "", "save"], [4, 2, 1, "", "saved_path"], [4, 1, 1, "", "select"], [4, 1, 1, "", "send"], [4, 1, 1, "", "separates"], [4, 1, 1, "", "set"], [4, 1, 1, "", "set_"], [4, 1, 1, "", "set_at_"], [4, 1, 1, "", "set_non_tensor"], [4, 1, 1, "", "setdefault"], [4, 2, 1, "", "shape"], [4, 1, 1, "", "share_memory_"], [4, 1, 1, "", "sigmoid"], [4, 1, 1, "", "sigmoid_"], [4, 1, 1, "", "sign"], [4, 1, 1, "", "sign_"], [4, 1, 1, "", "sin"], [4, 1, 1, "", "sin_"], [4, 1, 1, "", "sinh"], [4, 1, 1, "", "sinh_"], [4, 1, 1, "", "size"], [4, 1, 1, "", "softmax"], [4, 2, 1, "", "sorted_keys"], [4, 1, 1, "", "split"], [4, 1, 1, "", "split_keys"], [4, 1, 1, "", "sqrt"], [4, 1, 1, "", "sqrt_"], [4, 1, 1, "", "squeeze"], [4, 1, 1, "", "stack"], [4, 1, 1, "", "stack_from_tensordict"], [4, 1, 1, "", "stack_tensors"], [4, 1, 1, "", "state_dict"], [4, 1, 1, "", "std"], [4, 1, 1, "", "sub"], [4, 1, 1, "", "sub_"], [4, 1, 1, "", "sum"], [4, 1, 1, "", "tan"], [4, 1, 1, "", "tan_"], [4, 1, 1, "", "tanh"], [4, 1, 1, "", "tanh_"], [4, 1, 1, "", "to"], [4, 1, 1, "", "to_dict"], [4, 1, 1, "", "to_h5"], [4, 1, 1, "", "to_module"], [4, 1, 1, "", "to_namedtuple"], [4, 1, 1, "", "to_padded_tensor"], [4, 1, 1, "", "to_pytree"], [4, 1, 1, "", "to_struct_array"], [4, 1, 1, "", "to_tensordict"], [4, 1, 1, "", "tolist"], [4, 1, 1, "", "transpose"], [4, 1, 1, "", "trunc"], [4, 1, 1, "", "trunc_"], [4, 1, 1, "", "type"], [4, 1, 1, "", "uint16"], [4, 1, 1, "", "uint32"], [4, 1, 1, "", "uint64"], [4, 1, 1, "", "uint8"], [4, 1, 1, "", "unbind"], [4, 1, 1, "", "unflatten"], [4, 1, 1, "", "unflatten_keys"], [4, 1, 1, "", "unlock_"], [4, 1, 1, "", "unsqueeze"], [4, 1, 1, "", "update"], [4, 1, 1, "", "update_"], [4, 1, 1, "", "update_at_"], [4, 1, 1, "", "valid_keys"], [4, 1, 1, "", "values"], [4, 1, 1, "", "var"], [4, 1, 1, "", "view"], [4, 1, 1, "", "where"], [4, 1, 1, "", "zero_"], [4, 1, 1, "", "zero_grad"]], "tensordict.MemoryMappedTensor": [[5, 1, 1, "", "chunk"], [5, 1, 1, "", "empty"], [5, 1, 1, "", "empty_like"], [5, 1, 1, "", "empty_nested"], [5, 2, 1, "", "filename"], [5, 1, 1, "", "from_filename"], [5, 1, 1, "", "from_handler"], [5, 1, 1, "", "from_tensor"], [5, 1, 1, "", "full"], [5, 1, 1, "", "full_like"], [5, 1, 1, "", "ones"], [5, 1, 1, "", "ones_like"], [5, 1, 1, "", "unbind"], [5, 1, 1, "", "zeros"], [5, 1, 1, "", "zeros_like"]], "tensordict.NonTensorData": [[6, 2, 1, "", "device"], [6, 1, 1, "", "dumps"], [6, 1, 1, "", "fields"], [6, 1, 1, "", "from_tensordict"], [6, 1, 1, "", "get"], [6, 1, 1, "", "load"], [6, 1, 1, "", "load_"], [6, 1, 1, "", "load_memmap"], [6, 1, 1, "", "load_state_dict"], [6, 1, 1, "", "maybe_to_stack"], [6, 1, 1, "", "memmap"], [6, 1, 1, "", "memmap_"], [6, 1, 1, "", "memmap_like"], [6, 1, 1, "", "memmap_refresh_"], [6, 1, 1, "", "save"], [6, 1, 1, "", "set"], [6, 1, 1, "", "state_dict"], [6, 1, 1, "", "tolist"], [6, 1, 1, "", "unbind"]], "tensordict.NonTensorStack": [[7, 1, 1, "", "abs"], [7, 1, 1, "", "abs_"], [7, 1, 1, "", "acos"], [7, 1, 1, "", "acos_"], [7, 1, 1, "", "add"], [7, 1, 1, "", "add_"], [7, 1, 1, "", "addcdiv"], [7, 1, 1, "", "addcdiv_"], [7, 1, 1, "", "addcmul"], [7, 1, 1, "", "addcmul_"], [7, 1, 1, "", "all"], [7, 1, 1, "", "amax"], [7, 1, 1, "", "amin"], [7, 1, 1, "", "any"], [7, 1, 1, "", "append"], [7, 1, 1, "", "apply"], [7, 1, 1, "", "apply_"], [7, 1, 1, "", "asin"], [7, 1, 1, "", "asin_"], [7, 1, 1, "", "atan"], [7, 1, 1, "", "atan_"], [7, 1, 1, "", "auto_batch_size_"], [7, 1, 1, "", "auto_device_"], [7, 2, 1, "", "batch_dims"], [7, 2, 1, "", "batch_size"], [7, 1, 1, "", "bfloat16"], [7, 1, 1, "", "bitwise_and"], [7, 1, 1, "", "bool"], [7, 1, 1, "", "bytes"], [7, 1, 1, "", "cat"], [7, 1, 1, "", "cat_from_tensordict"], [7, 1, 1, "", "cat_tensors"], [7, 1, 1, "", "ceil"], [7, 1, 1, "", "ceil_"], [7, 1, 1, "", "chunk"], [7, 1, 1, "", "clamp"], [7, 1, 1, "", "clamp_max"], [7, 1, 1, "", "clamp_max_"], [7, 1, 1, "", "clamp_min"], [7, 1, 1, "", "clamp_min_"], [7, 1, 1, "", "clear"], [7, 1, 1, "", "clear_device_"], [7, 1, 1, "", "clear_refs_for_compile_"], [7, 1, 1, "", "clone"], [7, 1, 1, "", "complex128"], [7, 1, 1, "", "complex32"], [7, 1, 1, "", "complex64"], [7, 1, 1, "", "consolidate"], [7, 1, 1, "", "contiguous"], [7, 1, 1, "", "copy"], [7, 1, 1, "", "copy_"], [7, 1, 1, "", "copy_at_"], [7, 1, 1, "", "cos"], [7, 1, 1, "", "cos_"], [7, 1, 1, "", "cosh"], [7, 1, 1, "", "cosh_"], [7, 1, 1, "", "cpu"], [7, 1, 1, "", "create_nested"], [7, 1, 1, "", "cuda"], [7, 1, 1, "", "cummax"], [7, 1, 1, "", "cummin"], [7, 2, 1, "", "data"], [7, 1, 1, "", "data_ptr"], [7, 1, 1, "", "del_"], [7, 1, 1, "", "densify"], [7, 2, 1, "", "depth"], [7, 1, 1, "", "detach"], [7, 1, 1, "", "detach_"], [7, 2, 1, "", "device"], [7, 1, 1, "", "dim"], [7, 1, 1, "", "div"], [7, 1, 1, "", "div_"], [7, 1, 1, "", "double"], [7, 2, 1, "", "dtype"], [7, 1, 1, "", "dumps"], [7, 1, 1, "", "empty"], [7, 1, 1, "", "entry_class"], [7, 1, 1, "", "erf"], [7, 1, 1, "", "erf_"], [7, 1, 1, "", "erfc"], [7, 1, 1, "", "erfc_"], [7, 1, 1, "", "exclude"], [7, 1, 1, "", "exp"], [7, 1, 1, "", "exp_"], [7, 1, 1, "", "expand"], [7, 1, 1, "", "expand_as"], [7, 1, 1, "", "expm1"], [7, 1, 1, "", "expm1_"], [7, 1, 1, "", "fill_"], [7, 1, 1, "", "filter_empty_"], [7, 1, 1, "", "filter_non_tensor_data"], [7, 1, 1, "", "flatten"], [7, 1, 1, "", "flatten_keys"], [7, 1, 1, "", "float"], [7, 1, 1, "", "float16"], [7, 1, 1, "", "float32"], [7, 1, 1, "", "float64"], [7, 1, 1, "", "floor"], [7, 1, 1, "", "floor_"], [7, 1, 1, "", "frac"], [7, 1, 1, "", "frac_"], [7, 1, 1, "", "from_any"], [7, 1, 1, "", "from_dataclass"], [7, 1, 1, "", "from_dict"], [7, 1, 1, "", "from_dict_instance"], [7, 1, 1, "", "from_h5"], [7, 1, 1, "", "from_module"], [7, 1, 1, "", "from_modules"], [7, 1, 1, "", "from_namedtuple"], [7, 1, 1, "", "from_pytree"], [7, 1, 1, "", "from_struct_array"], [7, 1, 1, "", "from_tuple"], [7, 1, 1, "", "fromkeys"], [7, 1, 1, "", "gather"], [7, 1, 1, "", "gather_and_stack"], [7, 1, 1, "", "get"], [7, 1, 1, "", "get_at"], [7, 1, 1, "", "get_item_shape"], [7, 1, 1, "", "get_nestedtensor"], [7, 1, 1, "", "get_non_tensor"], [7, 2, 1, "", "grad"], [7, 1, 1, "", "half"], [7, 1, 1, "", "insert"], [7, 1, 1, "", "int"], [7, 1, 1, "", "int16"], [7, 1, 1, "", "int32"], [7, 1, 1, "", "int64"], [7, 1, 1, "", "int8"], [7, 1, 1, "", "irecv"], [7, 1, 1, "", "is_consolidated"], [7, 1, 1, "", "is_contiguous"], [7, 1, 1, "", "is_empty"], [7, 1, 1, "", "is_memmap"], [7, 1, 1, "", "is_shared"], [7, 1, 1, "", "isend"], [7, 1, 1, "", "isfinite"], [7, 1, 1, "", "isnan"], [7, 1, 1, "", "isneginf"], [7, 1, 1, "", "isposinf"], [7, 1, 1, "", "isreal"], [7, 1, 1, "", "items"], [7, 1, 1, "", "keys"], [7, 1, 1, "", "lazy_stack"], [7, 1, 1, "", "lerp"], [7, 1, 1, "", "lerp_"], [7, 1, 1, "", "lgamma"], [7, 1, 1, "", "lgamma_"], [7, 1, 1, "", "load"], [7, 1, 1, "", "load_"], [7, 1, 1, "", "load_memmap"], [7, 1, 1, "", "load_memmap_"], [7, 1, 1, "", "load_state_dict"], [7, 1, 1, "", "lock_"], [7, 1, 1, "", "log"], [7, 1, 1, "", "log10"], [7, 1, 1, "", "log10_"], [7, 1, 1, "", "log1p"], [7, 1, 1, "", "log1p_"], [7, 1, 1, "", "log2"], [7, 1, 1, "", "log2_"], [7, 1, 1, "", "log_"], [7, 1, 1, "", "logical_and"], [7, 1, 1, "", "logsumexp"], [7, 1, 1, "", "make_memmap"], [7, 1, 1, "", "make_memmap_from_storage"], [7, 1, 1, "", "make_memmap_from_tensor"], [7, 1, 1, "", "map"], [7, 1, 1, "", "map_iter"], [7, 1, 1, "", "masked_fill"], [7, 1, 1, "", "masked_fill_"], [7, 1, 1, "", "masked_select"], [7, 1, 1, "", "max"], [7, 1, 1, "", "maximum"], [7, 1, 1, "", "maximum_"], [7, 1, 1, "", "maybe_dense_stack"], [7, 1, 1, "", "maybe_to_stack"], [7, 1, 1, "", "mean"], [7, 1, 1, "", "memmap"], [7, 1, 1, "", "memmap_"], [7, 1, 1, "", "memmap_like"], [7, 1, 1, "", "memmap_refresh_"], [7, 1, 1, "", "min"], [7, 1, 1, "", "minimum"], [7, 1, 1, "", "minimum_"], [7, 1, 1, "", "mul"], [7, 1, 1, "", "mul_"], [7, 1, 1, "", "named_apply"], [7, 2, 1, "", "names"], [7, 1, 1, "", "nanmean"], [7, 1, 1, "", "nansum"], [7, 2, 1, "", "ndim"], [7, 1, 1, "", "ndimension"], [7, 1, 1, "", "neg"], [7, 1, 1, "", "neg_"], [7, 1, 1, "", "new_empty"], [7, 1, 1, "", "new_full"], [7, 1, 1, "", "new_ones"], [7, 1, 1, "", "new_tensor"], [7, 1, 1, "", "new_zeros"], [7, 1, 1, "", "non_tensor_items"], [7, 1, 1, "", "norm"], [7, 1, 1, "", "numel"], [7, 1, 1, "", "numpy"], [7, 1, 1, "", "param_count"], [7, 1, 1, "", "permute"], [7, 1, 1, "", "pin_memory"], [7, 1, 1, "", "pin_memory_"], [7, 1, 1, "", "pop"], [7, 1, 1, "", "popitem"], [7, 1, 1, "", "pow"], [7, 1, 1, "", "pow_"], [7, 1, 1, "", "prod"], [7, 1, 1, "", "qint32"], [7, 1, 1, "", "qint8"], [7, 1, 1, "", "quint4x2"], [7, 1, 1, "", "quint8"], [7, 1, 1, "", "reciprocal"], [7, 1, 1, "", "reciprocal_"], [7, 1, 1, "", "record_stream"], [7, 1, 1, "", "recv"], [7, 1, 1, "", "reduce"], [7, 1, 1, "", "refine_names"], [7, 1, 1, "", "rename"], [7, 1, 1, "", "rename_"], [7, 1, 1, "", "rename_key_"], [7, 1, 1, "", "repeat"], [7, 1, 1, "", "repeat_interleave"], [7, 1, 1, "", "replace"], [7, 1, 1, "", "requires_grad_"], [7, 1, 1, "", "reshape"], [7, 1, 1, "", "round"], [7, 1, 1, "", "round_"], [7, 1, 1, "", "save"], [7, 2, 1, "", "saved_path"], [7, 1, 1, "", "select"], [7, 1, 1, "", "send"], [7, 1, 1, "", "separates"], [7, 1, 1, "", "set"], [7, 1, 1, "", "set_"], [7, 1, 1, "", "set_at_"], [7, 1, 1, "", "set_non_tensor"], [7, 1, 1, "", "setdefault"], [7, 2, 1, "", "shape"], [7, 1, 1, "", "share_memory_"], [7, 1, 1, "", "sigmoid"], [7, 1, 1, "", "sigmoid_"], [7, 1, 1, "", "sign"], [7, 1, 1, "", "sign_"], [7, 1, 1, "", "sin"], [7, 1, 1, "", "sin_"], [7, 1, 1, "", "sinh"], [7, 1, 1, "", "sinh_"], [7, 1, 1, "", "size"], [7, 1, 1, "", "softmax"], [7, 2, 1, "", "sorted_keys"], [7, 1, 1, "", "split"], [7, 1, 1, "", "split_keys"], [7, 1, 1, "", "sqrt"], [7, 1, 1, "", "sqrt_"], [7, 1, 1, "", "squeeze"], [7, 1, 1, "", "stack"], [7, 1, 1, "", "stack_from_tensordict"], [7, 1, 1, "", "stack_tensors"], [7, 1, 1, "", "state_dict"], [7, 1, 1, "", "std"], [7, 1, 1, "", "sub"], [7, 1, 1, "", "sub_"], [7, 1, 1, "", "sum"], [7, 1, 1, "", "tan"], [7, 1, 1, "", "tan_"], [7, 1, 1, "", "tanh"], [7, 1, 1, "", "tanh_"], [7, 1, 1, "", "to"], [7, 1, 1, "", "to_dict"], [7, 1, 1, "", "to_h5"], [7, 1, 1, "", "to_module"], [7, 1, 1, "", "to_namedtuple"], [7, 1, 1, "", "to_padded_tensor"], [7, 1, 1, "", "to_pytree"], [7, 1, 1, "", "to_struct_array"], [7, 1, 1, "", "to_tensordict"], [7, 1, 1, "", "tolist"], [7, 1, 1, "", "transpose"], [7, 1, 1, "", "trunc"], [7, 1, 1, "", "trunc_"], [7, 1, 1, "", "type"], [7, 1, 1, "", "uint16"], [7, 1, 1, "", "uint32"], [7, 1, 1, "", "uint64"], [7, 1, 1, "", "uint8"], [7, 1, 1, "", "unbind"], [7, 1, 1, "", "unflatten"], [7, 1, 1, "", "unflatten_keys"], [7, 1, 1, "", "unlock_"], [7, 1, 1, "", "unsqueeze"], [7, 1, 1, "", "update"], [7, 1, 1, "", "update_"], [7, 1, 1, "", "update_at_"], [7, 1, 1, "", "valid_keys"], [7, 1, 1, "", "values"], [7, 1, 1, "", "var"], [7, 1, 1, "", "view"], [7, 1, 1, "", "where"], [7, 1, 1, "", "zero_"], [7, 1, 1, "", "zero_grad"]], "tensordict.PersistentTensorDict": [[8, 1, 1, "", "abs"], [8, 1, 1, "", "abs_"], [8, 1, 1, "", "acos"], [8, 1, 1, "", "acos_"], [8, 1, 1, "", "add"], [8, 1, 1, "", "add_"], [8, 1, 1, "", "addcdiv"], [8, 1, 1, "", "addcdiv_"], [8, 1, 1, "", "addcmul"], [8, 1, 1, "", "addcmul_"], [8, 1, 1, "", "all"], [8, 1, 1, "", "amax"], [8, 1, 1, "", "amin"], [8, 1, 1, "", "any"], [8, 1, 1, "", "apply"], [8, 1, 1, "", "apply_"], [8, 1, 1, "", "asin"], [8, 1, 1, "", "asin_"], [8, 1, 1, "", "atan"], [8, 1, 1, "", "atan_"], [8, 1, 1, "", "auto_batch_size_"], [8, 1, 1, "", "auto_device_"], [8, 2, 1, "", "batch_dims"], [8, 2, 1, "", "batch_size"], [8, 1, 1, "", "bfloat16"], [8, 1, 1, "", "bitwise_and"], [8, 1, 1, "", "bool"], [8, 1, 1, "", "bytes"], [8, 1, 1, "", "cat"], [8, 1, 1, "", "cat_from_tensordict"], [8, 1, 1, "", "cat_tensors"], [8, 1, 1, "", "ceil"], [8, 1, 1, "", "ceil_"], [8, 1, 1, "", "chunk"], [8, 1, 1, "", "clamp"], [8, 1, 1, "", "clamp_max"], [8, 1, 1, "", "clamp_max_"], [8, 1, 1, "", "clamp_min"], [8, 1, 1, "", "clamp_min_"], [8, 1, 1, "", "clear"], [8, 1, 1, "", "clear_device_"], [8, 1, 1, "", "clear_refs_for_compile_"], [8, 1, 1, "", "clone"], [8, 1, 1, "", "close"], [8, 1, 1, "", "complex128"], [8, 1, 1, "", "complex32"], [8, 1, 1, "", "complex64"], [8, 1, 1, "", "consolidate"], [8, 1, 1, "", "contiguous"], [8, 1, 1, "", "copy"], [8, 1, 1, "", "copy_"], [8, 1, 1, "", "copy_at_"], [8, 1, 1, "", "cos"], [8, 1, 1, "", "cos_"], [8, 1, 1, "", "cosh"], [8, 1, 1, "", "cosh_"], [8, 1, 1, "", "cpu"], [8, 1, 1, "", "create_nested"], [8, 1, 1, "", "cuda"], [8, 1, 1, "", "cummax"], [8, 1, 1, "", "cummin"], [8, 2, 1, "", "data"], [8, 1, 1, "", "data_ptr"], [8, 1, 1, "", "del_"], [8, 1, 1, "", "densify"], [8, 2, 1, "", "depth"], [8, 1, 1, "", "detach"], [8, 1, 1, "", "detach_"], [8, 2, 1, "", "device"], [8, 1, 1, "", "dim"], [8, 1, 1, "", "div"], [8, 1, 1, "", "div_"], [8, 1, 1, "", "double"], [8, 2, 1, "", "dtype"], [8, 1, 1, "", "dumps"], [8, 1, 1, "", "empty"], [8, 1, 1, "", "entry_class"], [8, 1, 1, "", "erf"], [8, 1, 1, "", "erf_"], [8, 1, 1, "", "erfc"], [8, 1, 1, "", "erfc_"], [8, 1, 1, "", "exclude"], [8, 1, 1, "", "exp"], [8, 1, 1, "", "exp_"], [8, 1, 1, "", "expand"], [8, 1, 1, "", "expand_as"], [8, 1, 1, "", "expm1"], [8, 1, 1, "", "expm1_"], [8, 1, 1, "", "fill_"], [8, 1, 1, "", "filter_empty_"], [8, 1, 1, "", "filter_non_tensor_data"], [8, 1, 1, "", "flatten"], [8, 1, 1, "", "flatten_keys"], [8, 1, 1, "", "float"], [8, 1, 1, "", "float16"], [8, 1, 1, "", "float32"], [8, 1, 1, "", "float64"], [8, 1, 1, "", "floor"], [8, 1, 1, "", "floor_"], [8, 1, 1, "", "frac"], [8, 1, 1, "", "frac_"], [8, 1, 1, "", "from_any"], [8, 1, 1, "", "from_dataclass"], [8, 1, 1, "", "from_dict"], [8, 1, 1, "", "from_dict_instance"], [8, 1, 1, "", "from_h5"], [8, 1, 1, "", "from_module"], [8, 1, 1, "", "from_modules"], [8, 1, 1, "", "from_namedtuple"], [8, 1, 1, "", "from_pytree"], [8, 1, 1, "", "from_struct_array"], [8, 1, 1, "", "from_tuple"], [8, 1, 1, "", "fromkeys"], [8, 1, 1, "", "gather"], [8, 1, 1, "", "gather_and_stack"], [8, 1, 1, "", "get"], [8, 1, 1, "", "get_at"], [8, 1, 1, "", "get_item_shape"], [8, 1, 1, "", "get_non_tensor"], [8, 2, 1, "", "grad"], [8, 1, 1, "", "half"], [8, 1, 1, "", "int"], [8, 1, 1, "", "int16"], [8, 1, 1, "", "int32"], [8, 1, 1, "", "int64"], [8, 1, 1, "", "int8"], [8, 1, 1, "", "irecv"], [8, 1, 1, "", "is_consolidated"], [8, 1, 1, "", "is_contiguous"], [8, 1, 1, "", "is_empty"], [8, 1, 1, "", "is_memmap"], [8, 1, 1, "", "is_shared"], [8, 1, 1, "", "isend"], [8, 1, 1, "", "isfinite"], [8, 1, 1, "", "isnan"], [8, 1, 1, "", "isneginf"], [8, 1, 1, "", "isposinf"], [8, 1, 1, "", "isreal"], [8, 1, 1, "", "items"], [8, 1, 1, "", "keys"], [8, 1, 1, "", "lazy_stack"], [8, 1, 1, "", "lerp"], [8, 1, 1, "", "lerp_"], [8, 1, 1, "", "lgamma"], [8, 1, 1, "", "lgamma_"], [8, 1, 1, "", "load"], [8, 1, 1, "", "load_"], [8, 1, 1, "", "load_memmap"], [8, 1, 1, "", "load_memmap_"], [8, 1, 1, "", "load_state_dict"], [8, 1, 1, "", "lock_"], [8, 1, 1, "", "log"], [8, 1, 1, "", "log10"], [8, 1, 1, "", "log10_"], [8, 1, 1, "", "log1p"], [8, 1, 1, "", "log1p_"], [8, 1, 1, "", "log2"], [8, 1, 1, "", "log2_"], [8, 1, 1, "", "log_"], [8, 1, 1, "", "logical_and"], [8, 1, 1, "", "logsumexp"], [8, 1, 1, "", "make_memmap"], [8, 1, 1, "", "make_memmap_from_storage"], [8, 1, 1, "", "make_memmap_from_tensor"], [8, 1, 1, "", "map"], [8, 1, 1, "", "map_iter"], [8, 1, 1, "", "masked_fill"], [8, 1, 1, "", "masked_fill_"], [8, 1, 1, "", "masked_select"], [8, 1, 1, "", "max"], [8, 1, 1, "", "maximum"], [8, 1, 1, "", "maximum_"], [8, 1, 1, "", "maybe_dense_stack"], [8, 1, 1, "", "mean"], [8, 1, 1, "", "memmap"], [8, 1, 1, "", "memmap_"], [8, 1, 1, "", "memmap_like"], [8, 1, 1, "", "memmap_refresh_"], [8, 1, 1, "", "min"], [8, 1, 1, "", "minimum"], [8, 1, 1, "", "minimum_"], [8, 1, 1, "", "mul"], [8, 1, 1, "", "mul_"], [8, 1, 1, "", "named_apply"], [8, 2, 1, "", "names"], [8, 1, 1, "", "nanmean"], [8, 1, 1, "", "nansum"], [8, 2, 1, "", "ndim"], [8, 1, 1, "", "ndimension"], [8, 1, 1, "", "neg"], [8, 1, 1, "", "neg_"], [8, 1, 1, "", "new_empty"], [8, 1, 1, "", "new_full"], [8, 1, 1, "", "new_ones"], [8, 1, 1, "", "new_tensor"], [8, 1, 1, "", "new_zeros"], [8, 1, 1, "", "non_tensor_items"], [8, 1, 1, "", "norm"], [8, 1, 1, "", "numel"], [8, 1, 1, "", "numpy"], [8, 1, 1, "", "param_count"], [8, 1, 1, "", "permute"], [8, 1, 1, "", "pin_memory"], [8, 1, 1, "", "pin_memory_"], [8, 1, 1, "", "pop"], [8, 1, 1, "", "popitem"], [8, 1, 1, "", "pow"], [8, 1, 1, "", "pow_"], [8, 1, 1, "", "prod"], [8, 1, 1, "", "qint32"], [8, 1, 1, "", "qint8"], [8, 1, 1, "", "quint4x2"], [8, 1, 1, "", "quint8"], [8, 1, 1, "", "reciprocal"], [8, 1, 1, "", "reciprocal_"], [8, 1, 1, "", "record_stream"], [8, 1, 1, "", "recv"], [8, 1, 1, "", "reduce"], [8, 1, 1, "", "refine_names"], [8, 1, 1, "", "rename"], [8, 1, 1, "", "rename_"], [8, 1, 1, "", "rename_key_"], [8, 1, 1, "", "repeat"], [8, 1, 1, "", "repeat_interleave"], [8, 1, 1, "", "replace"], [8, 1, 1, "", "requires_grad_"], [8, 1, 1, "", "reshape"], [8, 1, 1, "", "round"], [8, 1, 1, "", "round_"], [8, 1, 1, "", "save"], [8, 2, 1, "", "saved_path"], [8, 1, 1, "", "select"], [8, 1, 1, "", "send"], [8, 1, 1, "", "separates"], [8, 1, 1, "", "set"], [8, 1, 1, "", "set_"], [8, 1, 1, "", "set_at_"], [8, 1, 1, "", "set_non_tensor"], [8, 1, 1, "", "setdefault"], [8, 2, 1, "", "shape"], [8, 1, 1, "", "share_memory_"], [8, 1, 1, "", "sigmoid"], [8, 1, 1, "", "sigmoid_"], [8, 1, 1, "", "sign"], [8, 1, 1, "", "sign_"], [8, 1, 1, "", "sin"], [8, 1, 1, "", "sin_"], [8, 1, 1, "", "sinh"], [8, 1, 1, "", "sinh_"], [8, 1, 1, "", "size"], [8, 1, 1, "", "softmax"], [8, 2, 1, "", "sorted_keys"], [8, 1, 1, "", "split"], [8, 1, 1, "", "split_keys"], [8, 1, 1, "", "sqrt"], [8, 1, 1, "", "sqrt_"], [8, 1, 1, "", "squeeze"], [8, 1, 1, "", "stack"], [8, 1, 1, "", "stack_from_tensordict"], [8, 1, 1, "", "stack_tensors"], [8, 1, 1, "", "state_dict"], [8, 1, 1, "", "std"], [8, 1, 1, "", "sub"], [8, 1, 1, "", "sub_"], [8, 1, 1, "", "sum"], [8, 1, 1, "", "tan"], [8, 1, 1, "", "tan_"], [8, 1, 1, "", "tanh"], [8, 1, 1, "", "tanh_"], [8, 1, 1, "", "to"], [8, 1, 1, "", "to_dict"], [8, 1, 1, "", "to_h5"], [8, 1, 1, "", "to_module"], [8, 1, 1, "", "to_namedtuple"], [8, 1, 1, "", "to_padded_tensor"], [8, 1, 1, "", "to_pytree"], [8, 1, 1, "", "to_struct_array"], [8, 1, 1, "", "to_tensordict"], [8, 1, 1, "", "tolist"], [8, 1, 1, "", "transpose"], [8, 1, 1, "", "trunc"], [8, 1, 1, "", "trunc_"], [8, 1, 1, "", "type"], [8, 1, 1, "", "uint16"], [8, 1, 1, "", "uint32"], [8, 1, 1, "", "uint64"], [8, 1, 1, "", "uint8"], [8, 1, 1, "", "unbind"], [8, 1, 1, "", "unflatten"], [8, 1, 1, "", "unflatten_keys"], [8, 1, 1, "", "unlock_"], [8, 1, 1, "", "unsqueeze"], [8, 1, 1, "", "update"], [8, 1, 1, "", "update_"], [8, 1, 1, "", "update_at_"], [8, 1, 1, "", "values"], [8, 1, 1, "", "var"], [8, 1, 1, "", "view"], [8, 1, 1, "", "where"], [8, 1, 1, "", "zero_"], [8, 1, 1, "", "zero_grad"]], "tensordict.TensorDict": [[10, 1, 1, "", "abs"], [10, 1, 1, "", "abs_"], [10, 1, 1, "", "acos"], [10, 1, 1, "", "acos_"], [10, 1, 1, "", "add"], [10, 1, 1, "", "add_"], [10, 1, 1, "", "addcdiv"], [10, 1, 1, "", "addcdiv_"], [10, 1, 1, "", "addcmul"], [10, 1, 1, "", "addcmul_"], [10, 1, 1, "", "all"], [10, 1, 1, "", "amax"], [10, 1, 1, "", "amin"], [10, 1, 1, "", "any"], [10, 1, 1, "", "apply"], [10, 1, 1, "", "apply_"], [10, 1, 1, "", "asin"], [10, 1, 1, "", "asin_"], [10, 1, 1, "", "atan"], [10, 1, 1, "", "atan_"], [10, 1, 1, "", "auto_batch_size_"], [10, 1, 1, "", "auto_device_"], [10, 2, 1, "", "batch_dims"], [10, 2, 1, "", "batch_size"], [10, 1, 1, "", "bfloat16"], [10, 1, 1, "", "bitwise_and"], [10, 1, 1, "", "bool"], [10, 1, 1, "", "bytes"], [10, 1, 1, "", "cat"], [10, 1, 1, "", "cat_from_tensordict"], [10, 1, 1, "", "cat_tensors"], [10, 1, 1, "", "ceil"], [10, 1, 1, "", "ceil_"], [10, 1, 1, "", "chunk"], [10, 1, 1, "", "clamp"], [10, 1, 1, "", "clamp_max"], [10, 1, 1, "", "clamp_max_"], [10, 1, 1, "", "clamp_min"], [10, 1, 1, "", "clamp_min_"], [10, 1, 1, "", "clear"], [10, 1, 1, "", "clear_device_"], [10, 1, 1, "", "clear_refs_for_compile_"], [10, 1, 1, "", "clone"], [10, 1, 1, "", "complex128"], [10, 1, 1, "", "complex32"], [10, 1, 1, "", "complex64"], [10, 1, 1, "", "consolidate"], [10, 1, 1, "", "contiguous"], [10, 1, 1, "", "copy"], [10, 1, 1, "", "copy_"], [10, 1, 1, "", "copy_at_"], [10, 1, 1, "", "cos"], [10, 1, 1, "", "cos_"], [10, 1, 1, "", "cosh"], [10, 1, 1, "", "cosh_"], [10, 1, 1, "", "cpu"], [10, 1, 1, "", "create_nested"], [10, 1, 1, "", "cuda"], [10, 1, 1, "", "cummax"], [10, 1, 1, "", "cummin"], [10, 2, 1, "", "data"], [10, 1, 1, "", "data_ptr"], [10, 1, 1, "", "del_"], [10, 1, 1, "", "densify"], [10, 2, 1, "", "depth"], [10, 1, 1, "", "detach"], [10, 1, 1, "", "detach_"], [10, 2, 1, "", "device"], [10, 1, 1, "", "dim"], [10, 1, 1, "", "div"], [10, 1, 1, "", "div_"], [10, 1, 1, "", "double"], [10, 2, 1, "", "dtype"], [10, 1, 1, "", "dumps"], [10, 1, 1, "", "empty"], [10, 1, 1, "", "entry_class"], [10, 1, 1, "", "erf"], [10, 1, 1, "", "erf_"], [10, 1, 1, "", "erfc"], [10, 1, 1, "", "erfc_"], [10, 1, 1, "", "exclude"], [10, 1, 1, "", "exp"], [10, 1, 1, "", "exp_"], [10, 1, 1, "", "expand"], [10, 1, 1, "", "expand_as"], [10, 1, 1, "", "expm1"], [10, 1, 1, "", "expm1_"], [10, 1, 1, "", "fill_"], [10, 1, 1, "", "filter_empty_"], [10, 1, 1, "", "filter_non_tensor_data"], [10, 1, 1, "", "flatten"], [10, 1, 1, "", "flatten_keys"], [10, 1, 1, "", "float"], [10, 1, 1, "", "float16"], [10, 1, 1, "", "float32"], [10, 1, 1, "", "float64"], [10, 1, 1, "", "floor"], [10, 1, 1, "", "floor_"], [10, 1, 1, "", "frac"], [10, 1, 1, "", "frac_"], [10, 1, 1, "", "from_any"], [10, 1, 1, "", "from_dataclass"], [10, 1, 1, "", "from_dict"], [10, 1, 1, "", "from_dict_instance"], [10, 1, 1, "", "from_h5"], [10, 1, 1, "", "from_module"], [10, 1, 1, "", "from_modules"], [10, 1, 1, "", "from_namedtuple"], [10, 1, 1, "", "from_pytree"], [10, 1, 1, "", "from_struct_array"], [10, 1, 1, "", "from_tuple"], [10, 1, 1, "", "fromkeys"], [10, 1, 1, "", "gather"], [10, 1, 1, "", "gather_and_stack"], [10, 1, 1, "", "get"], [10, 1, 1, "", "get_at"], [10, 1, 1, "", "get_item_shape"], [10, 1, 1, "", "get_non_tensor"], [10, 2, 1, "", "grad"], [10, 1, 1, "", "half"], [10, 1, 1, "", "int"], [10, 1, 1, "", "int16"], [10, 1, 1, "", "int32"], [10, 1, 1, "", "int64"], [10, 1, 1, "", "int8"], [10, 1, 1, "", "irecv"], [10, 1, 1, "", "is_consolidated"], [10, 1, 1, "", "is_contiguous"], [10, 1, 1, "", "is_empty"], [10, 1, 1, "", "is_memmap"], [10, 1, 1, "", "is_shared"], [10, 1, 1, "", "isend"], [10, 1, 1, "", "isfinite"], [10, 1, 1, "", "isnan"], [10, 1, 1, "", "isneginf"], [10, 1, 1, "", "isposinf"], [10, 1, 1, "", "isreal"], [10, 1, 1, "", "items"], [10, 1, 1, "", "keys"], [10, 1, 1, "", "lazy_stack"], [10, 1, 1, "", "lerp"], [10, 1, 1, "", "lerp_"], [10, 1, 1, "", "lgamma"], [10, 1, 1, "", "lgamma_"], [10, 1, 1, "", "load"], [10, 1, 1, "", "load_"], [10, 1, 1, "", "load_memmap"], [10, 1, 1, "", "load_memmap_"], [10, 1, 1, "", "load_state_dict"], [10, 1, 1, "", "lock_"], [10, 1, 1, "", "log"], [10, 1, 1, "", "log10"], [10, 1, 1, "", "log10_"], [10, 1, 1, "", "log1p"], [10, 1, 1, "", "log1p_"], [10, 1, 1, "", "log2"], [10, 1, 1, "", "log2_"], [10, 1, 1, "", "log_"], [10, 1, 1, "", "logical_and"], [10, 1, 1, "", "logsumexp"], [10, 1, 1, "", "make_memmap"], [10, 1, 1, "", "make_memmap_from_storage"], [10, 1, 1, "", "make_memmap_from_tensor"], [10, 1, 1, "", "map"], [10, 1, 1, "", "map_iter"], [10, 1, 1, "", "masked_fill"], [10, 1, 1, "", "masked_fill_"], [10, 1, 1, "", "masked_select"], [10, 1, 1, "", "max"], [10, 1, 1, "", "maximum"], [10, 1, 1, "", "maximum_"], [10, 1, 1, "", "maybe_dense_stack"], [10, 1, 1, "", "mean"], [10, 1, 1, "", "memmap"], [10, 1, 1, "", "memmap_"], [10, 1, 1, "", "memmap_like"], [10, 1, 1, "", "memmap_refresh_"], [10, 1, 1, "", "min"], [10, 1, 1, "", "minimum"], [10, 1, 1, "", "minimum_"], [10, 1, 1, "", "mul"], [10, 1, 1, "", "mul_"], [10, 1, 1, "", "named_apply"], [10, 2, 1, "", "names"], [10, 1, 1, "", "nanmean"], [10, 1, 1, "", "nansum"], [10, 2, 1, "", "ndim"], [10, 1, 1, "", "ndimension"], [10, 1, 1, "", "neg"], [10, 1, 1, "", "neg_"], [10, 1, 1, "", "new_empty"], [10, 1, 1, "", "new_full"], [10, 1, 1, "", "new_ones"], [10, 1, 1, "", "new_tensor"], [10, 1, 1, "", "new_zeros"], [10, 1, 1, "", "non_tensor_items"], [10, 1, 1, "", "norm"], [10, 1, 1, "", "numel"], [10, 1, 1, "", "numpy"], [10, 1, 1, "", "param_count"], [10, 1, 1, "", "permute"], [10, 1, 1, "", "pin_memory"], [10, 1, 1, "", "pin_memory_"], [10, 1, 1, "", "pop"], [10, 1, 1, "", "popitem"], [10, 1, 1, "", "pow"], [10, 1, 1, "", "pow_"], [10, 1, 1, "", "prod"], [10, 1, 1, "", "qint32"], [10, 1, 1, "", "qint8"], [10, 1, 1, "", "quint4x2"], [10, 1, 1, "", "quint8"], [10, 1, 1, "", "reciprocal"], [10, 1, 1, "", "reciprocal_"], [10, 1, 1, "", "record_stream"], [10, 1, 1, "", "recv"], [10, 1, 1, "", "reduce"], [10, 1, 1, "", "refine_names"], [10, 1, 1, "", "rename"], [10, 1, 1, "", "rename_"], [10, 1, 1, "", "rename_key_"], [10, 1, 1, "", "repeat"], [10, 1, 1, "", "repeat_interleave"], [10, 1, 1, "", "replace"], [10, 1, 1, "", "requires_grad_"], [10, 1, 1, "", "reshape"], [10, 1, 1, "", "round"], [10, 1, 1, "", "round_"], [10, 1, 1, "", "save"], [10, 2, 1, "", "saved_path"], [10, 1, 1, "", "select"], [10, 1, 1, "", "send"], [10, 1, 1, "", "separates"], [10, 1, 1, "", "set"], [10, 1, 1, "", "set_"], [10, 1, 1, "", "set_at_"], [10, 1, 1, "", "set_non_tensor"], [10, 1, 1, "", "setdefault"], [10, 2, 1, "", "shape"], [10, 1, 1, "", "share_memory_"], [10, 1, 1, "", "sigmoid"], [10, 1, 1, "", "sigmoid_"], [10, 1, 1, "", "sign"], [10, 1, 1, "", "sign_"], [10, 1, 1, "", "sin"], [10, 1, 1, "", "sin_"], [10, 1, 1, "", "sinh"], [10, 1, 1, "", "sinh_"], [10, 1, 1, "", "size"], [10, 1, 1, "", "softmax"], [10, 2, 1, "", "sorted_keys"], [10, 1, 1, "", "split"], [10, 1, 1, "", "split_keys"], [10, 1, 1, "", "sqrt"], [10, 1, 1, "", "sqrt_"], [10, 1, 1, "", "squeeze"], [10, 1, 1, "", "stack"], [10, 1, 1, "", "stack_from_tensordict"], [10, 1, 1, "", "stack_tensors"], [10, 1, 1, "", "state_dict"], [10, 1, 1, "", "std"], [10, 1, 1, "", "sub"], [10, 1, 1, "", "sub_"], [10, 1, 1, "", "sum"], [10, 1, 1, "", "tan"], [10, 1, 1, "", "tan_"], [10, 1, 1, "", "tanh"], [10, 1, 1, "", "tanh_"], [10, 1, 1, "", "to"], [10, 1, 1, "", "to_dict"], [10, 1, 1, "", "to_h5"], [10, 1, 1, "", "to_module"], [10, 1, 1, "", "to_namedtuple"], [10, 1, 1, "", "to_padded_tensor"], [10, 1, 1, "", "to_pytree"], [10, 1, 1, "", "to_struct_array"], [10, 1, 1, "", "to_tensordict"], [10, 1, 1, "", "tolist"], [10, 1, 1, "", "transpose"], [10, 1, 1, "", "trunc"], [10, 1, 1, "", "trunc_"], [10, 1, 1, "", "type"], [10, 1, 1, "", "uint16"], [10, 1, 1, "", "uint32"], [10, 1, 1, "", "uint64"], [10, 1, 1, "", "uint8"], [10, 1, 1, "", "unbind"], [10, 1, 1, "", "unflatten"], [10, 1, 1, "", "unflatten_keys"], [10, 1, 1, "", "unlock_"], [10, 1, 1, "", "unsqueeze"], [10, 1, 1, "", "update"], [10, 1, 1, "", "update_"], [10, 1, 1, "", "update_at_"], [10, 1, 1, "", "values"], [10, 1, 1, "", "var"], [10, 1, 1, "", "view"], [10, 1, 1, "", "where"], [10, 1, 1, "", "zero_"], [10, 1, 1, "", "zero_grad"]], "tensordict.TensorDictBase": [[11, 1, 1, "", "abs"], [11, 1, 1, "", "abs_"], [11, 1, 1, "", "acos"], [11, 1, 1, "", "acos_"], [11, 1, 1, "", "add"], [11, 1, 1, "", "add_"], [11, 1, 1, "", "addcdiv"], [11, 1, 1, "", "addcdiv_"], [11, 1, 1, "", "addcmul"], [11, 1, 1, "", "addcmul_"], [11, 1, 1, "", "all"], [11, 1, 1, "", "amax"], [11, 1, 1, "", "amin"], [11, 1, 1, "", "any"], [11, 1, 1, "", "apply"], [11, 1, 1, "", "apply_"], [11, 1, 1, "", "asin"], [11, 1, 1, "", "asin_"], [11, 1, 1, "", "atan"], [11, 1, 1, "", "atan_"], [11, 1, 1, "", "auto_batch_size_"], [11, 1, 1, "", "auto_device_"], [11, 2, 1, "", "batch_dims"], [11, 2, 1, "", "batch_size"], [11, 1, 1, "", "bfloat16"], [11, 1, 1, "", "bitwise_and"], [11, 1, 1, "", "bool"], [11, 1, 1, "", "bytes"], [11, 1, 1, "", "cat"], [11, 1, 1, "", "cat_from_tensordict"], [11, 1, 1, "", "cat_tensors"], [11, 1, 1, "", "ceil"], [11, 1, 1, "", "ceil_"], [11, 1, 1, "", "chunk"], [11, 1, 1, "", "clamp"], [11, 1, 1, "", "clamp_max"], [11, 1, 1, "", "clamp_max_"], [11, 1, 1, "", "clamp_min"], [11, 1, 1, "", "clamp_min_"], [11, 1, 1, "", "clear"], [11, 1, 1, "", "clear_device_"], [11, 1, 1, "", "clear_refs_for_compile_"], [11, 1, 1, "", "clone"], [11, 1, 1, "", "complex128"], [11, 1, 1, "", "complex32"], [11, 1, 1, "", "complex64"], [11, 1, 1, "", "consolidate"], [11, 1, 1, "", "contiguous"], [11, 1, 1, "", "copy"], [11, 1, 1, "", "copy_"], [11, 1, 1, "", "copy_at_"], [11, 1, 1, "", "cos"], [11, 1, 1, "", "cos_"], [11, 1, 1, "", "cosh"], [11, 1, 1, "", "cosh_"], [11, 1, 1, "", "cpu"], [11, 1, 1, "", "create_nested"], [11, 1, 1, "", "cuda"], [11, 1, 1, "", "cummax"], [11, 1, 1, "", "cummin"], [11, 2, 1, "", "data"], [11, 1, 1, "", "data_ptr"], [11, 1, 1, "", "del_"], [11, 1, 1, "", "densify"], [11, 2, 1, "", "depth"], [11, 1, 1, "", "detach"], [11, 1, 1, "", "detach_"], [11, 2, 1, "", "device"], [11, 1, 1, "", "dim"], [11, 1, 1, "", "div"], [11, 1, 1, "", "div_"], [11, 1, 1, "", "double"], [11, 2, 1, "", "dtype"], [11, 1, 1, "", "dumps"], [11, 1, 1, "", "empty"], [11, 1, 1, "", "entry_class"], [11, 1, 1, "", "erf"], [11, 1, 1, "", "erf_"], [11, 1, 1, "", "erfc"], [11, 1, 1, "", "erfc_"], [11, 1, 1, "", "exclude"], [11, 1, 1, "", "exp"], [11, 1, 1, "", "exp_"], [11, 1, 1, "", "expand"], [11, 1, 1, "", "expand_as"], [11, 1, 1, "", "expm1"], [11, 1, 1, "", "expm1_"], [11, 1, 1, "", "fill_"], [11, 1, 1, "", "filter_empty_"], [11, 1, 1, "", "filter_non_tensor_data"], [11, 1, 1, "", "flatten"], [11, 1, 1, "", "flatten_keys"], [11, 1, 1, "", "float"], [11, 1, 1, "", "float16"], [11, 1, 1, "", "float32"], [11, 1, 1, "", "float64"], [11, 1, 1, "", "floor"], [11, 1, 1, "", "floor_"], [11, 1, 1, "", "frac"], [11, 1, 1, "", "frac_"], [11, 1, 1, "", "from_any"], [11, 1, 1, "", "from_dataclass"], [11, 1, 1, "", "from_dict"], [11, 1, 1, "", "from_dict_instance"], [11, 1, 1, "", "from_h5"], [11, 1, 1, "", "from_module"], [11, 1, 1, "", "from_modules"], [11, 1, 1, "", "from_namedtuple"], [11, 1, 1, "", "from_pytree"], [11, 1, 1, "", "from_struct_array"], [11, 1, 1, "", "from_tuple"], [11, 1, 1, "", "fromkeys"], [11, 1, 1, "", "gather"], [11, 1, 1, "", "gather_and_stack"], [11, 1, 1, "", "get"], [11, 1, 1, "", "get_at"], [11, 1, 1, "", "get_item_shape"], [11, 1, 1, "", "get_non_tensor"], [11, 2, 1, "", "grad"], [11, 1, 1, "", "half"], [11, 1, 1, "", "int"], [11, 1, 1, "", "int16"], [11, 1, 1, "", "int32"], [11, 1, 1, "", "int64"], [11, 1, 1, "", "int8"], [11, 1, 1, "", "irecv"], [11, 1, 1, "", "is_consolidated"], [11, 1, 1, "", "is_contiguous"], [11, 1, 1, "", "is_empty"], [11, 1, 1, "", "is_memmap"], [11, 1, 1, "", "is_shared"], [11, 1, 1, "", "isend"], [11, 1, 1, "", "isfinite"], [11, 1, 1, "", "isnan"], [11, 1, 1, "", "isneginf"], [11, 1, 1, "", "isposinf"], [11, 1, 1, "", "isreal"], [11, 1, 1, "", "items"], [11, 1, 1, "", "keys"], [11, 1, 1, "", "lazy_stack"], [11, 1, 1, "", "lerp"], [11, 1, 1, "", "lerp_"], [11, 1, 1, "", "lgamma"], [11, 1, 1, "", "lgamma_"], [11, 1, 1, "", "load"], [11, 1, 1, "", "load_"], [11, 1, 1, "", "load_memmap"], [11, 1, 1, "", "load_memmap_"], [11, 1, 1, "", "load_state_dict"], [11, 1, 1, "", "lock_"], [11, 1, 1, "", "log"], [11, 1, 1, "", "log10"], [11, 1, 1, "", "log10_"], [11, 1, 1, "", "log1p"], [11, 1, 1, "", "log1p_"], [11, 1, 1, "", "log2"], [11, 1, 1, "", "log2_"], [11, 1, 1, "", "log_"], [11, 1, 1, "", "logical_and"], [11, 1, 1, "", "logsumexp"], [11, 1, 1, "", "make_memmap"], [11, 1, 1, "", "make_memmap_from_storage"], [11, 1, 1, "", "make_memmap_from_tensor"], [11, 1, 1, "", "map"], [11, 1, 1, "", "map_iter"], [11, 1, 1, "", "masked_fill"], [11, 1, 1, "", "masked_fill_"], [11, 1, 1, "", "masked_select"], [11, 1, 1, "", "max"], [11, 1, 1, "", "maximum"], [11, 1, 1, "", "maximum_"], [11, 1, 1, "", "maybe_dense_stack"], [11, 1, 1, "", "mean"], [11, 1, 1, "", "memmap"], [11, 1, 1, "", "memmap_"], [11, 1, 1, "", "memmap_like"], [11, 1, 1, "", "memmap_refresh_"], [11, 1, 1, "", "min"], [11, 1, 1, "", "minimum"], [11, 1, 1, "", "minimum_"], [11, 1, 1, "", "mul"], [11, 1, 1, "", "mul_"], [11, 1, 1, "", "named_apply"], [11, 2, 1, "", "names"], [11, 1, 1, "", "nanmean"], [11, 1, 1, "", "nansum"], [11, 2, 1, "", "ndim"], [11, 1, 1, "", "ndimension"], [11, 1, 1, "", "neg"], [11, 1, 1, "", "neg_"], [11, 1, 1, "", "new_empty"], [11, 1, 1, "", "new_full"], [11, 1, 1, "", "new_ones"], [11, 1, 1, "", "new_tensor"], [11, 1, 1, "", "new_zeros"], [11, 1, 1, "", "non_tensor_items"], [11, 1, 1, "", "norm"], [11, 1, 1, "", "numel"], [11, 1, 1, "", "numpy"], [11, 1, 1, "", "param_count"], [11, 1, 1, "", "permute"], [11, 1, 1, "", "pin_memory"], [11, 1, 1, "", "pin_memory_"], [11, 1, 1, "", "pop"], [11, 1, 1, "", "popitem"], [11, 1, 1, "", "pow"], [11, 1, 1, "", "pow_"], [11, 1, 1, "", "prod"], [11, 1, 1, "", "qint32"], [11, 1, 1, "", "qint8"], [11, 1, 1, "", "quint4x2"], [11, 1, 1, "", "quint8"], [11, 1, 1, "", "reciprocal"], [11, 1, 1, "", "reciprocal_"], [11, 1, 1, "", "record_stream"], [11, 1, 1, "", "recv"], [11, 1, 1, "", "reduce"], [11, 1, 1, "", "refine_names"], [11, 1, 1, "", "rename"], [11, 1, 1, "", "rename_"], [11, 1, 1, "", "rename_key_"], [11, 1, 1, "", "repeat"], [11, 1, 1, "", "repeat_interleave"], [11, 1, 1, "", "replace"], [11, 1, 1, "", "requires_grad_"], [11, 1, 1, "", "reshape"], [11, 1, 1, "", "round"], [11, 1, 1, "", "round_"], [11, 1, 1, "", "save"], [11, 2, 1, "", "saved_path"], [11, 1, 1, "", "select"], [11, 1, 1, "", "send"], [11, 1, 1, "", "separates"], [11, 1, 1, "", "set"], [11, 1, 1, "", "set_"], [11, 1, 1, "", "set_at_"], [11, 1, 1, "", "set_non_tensor"], [11, 1, 1, "", "setdefault"], [11, 2, 1, "", "shape"], [11, 1, 1, "", "share_memory_"], [11, 1, 1, "", "sigmoid"], [11, 1, 1, "", "sigmoid_"], [11, 1, 1, "", "sign"], [11, 1, 1, "", "sign_"], [11, 1, 1, "", "sin"], [11, 1, 1, "", "sin_"], [11, 1, 1, "", "sinh"], [11, 1, 1, "", "sinh_"], [11, 1, 1, "", "size"], [11, 1, 1, "", "softmax"], [11, 2, 1, "", "sorted_keys"], [11, 1, 1, "", "split"], [11, 1, 1, "", "split_keys"], [11, 1, 1, "", "sqrt"], [11, 1, 1, "", "sqrt_"], [11, 1, 1, "", "squeeze"], [11, 1, 1, "", "stack"], [11, 1, 1, "", "stack_from_tensordict"], [11, 1, 1, "", "stack_tensors"], [11, 1, 1, "", "state_dict"], [11, 1, 1, "", "std"], [11, 1, 1, "", "sub"], [11, 1, 1, "", "sub_"], [11, 1, 1, "", "sum"], [11, 1, 1, "", "tan"], [11, 1, 1, "", "tan_"], [11, 1, 1, "", "tanh"], [11, 1, 1, "", "tanh_"], [11, 1, 1, "", "to"], [11, 1, 1, "", "to_dict"], [11, 1, 1, "", "to_h5"], [11, 1, 1, "", "to_module"], [11, 1, 1, "", "to_namedtuple"], [11, 1, 1, "", "to_padded_tensor"], [11, 1, 1, "", "to_pytree"], [11, 1, 1, "", "to_struct_array"], [11, 1, 1, "", "to_tensordict"], [11, 1, 1, "", "tolist"], [11, 1, 1, "", "transpose"], [11, 1, 1, "", "trunc"], [11, 1, 1, "", "trunc_"], [11, 1, 1, "", "type"], [11, 1, 1, "", "uint16"], [11, 1, 1, "", "uint32"], [11, 1, 1, "", "uint64"], [11, 1, 1, "", "uint8"], [11, 1, 1, "", "unbind"], [11, 1, 1, "", "unflatten"], [11, 1, 1, "", "unflatten_keys"], [11, 1, 1, "", "unlock_"], [11, 1, 1, "", "unsqueeze"], [11, 1, 1, "", "update"], [11, 1, 1, "", "update_"], [11, 1, 1, "", "update_at_"], [11, 1, 1, "", "values"], [11, 1, 1, "", "var"], [11, 1, 1, "", "view"], [11, 1, 1, "", "where"], [11, 1, 1, "", "zero_"], [11, 1, 1, "", "zero_grad"]], "tensordict.TensorDictParams": [[12, 1, 1, "", "abs"], [12, 1, 1, "", "abs_"], [12, 1, 1, "", "acos"], [12, 1, 1, "", "acos_"], [12, 1, 1, "", "add"], [12, 1, 1, "", "add_"], [12, 1, 1, "", "add_module"], [12, 1, 1, "", "addcdiv"], [12, 1, 1, "", "addcdiv_"], [12, 1, 1, "", "addcmul"], [12, 1, 1, "", "addcmul_"], [12, 1, 1, "", "all"], [12, 1, 1, "", "amax"], [12, 1, 1, "", "amin"], [12, 1, 1, "", "any"], [12, 1, 1, "", "apply"], [12, 1, 1, "", "apply_"], [12, 1, 1, "", "asin"], [12, 1, 1, "", "asin_"], [12, 1, 1, "", "atan"], [12, 1, 1, "", "atan_"], [12, 1, 1, "", "auto_batch_size_"], [12, 1, 1, "", "auto_device_"], [12, 2, 1, "", "batch_dims"], [12, 2, 1, "", "batch_size"], [12, 1, 1, "", "bfloat16"], [12, 1, 1, "", "bitwise_and"], [12, 1, 1, "", "bool"], [12, 1, 1, "", "buffers"], [12, 1, 1, "", "bytes"], [12, 1, 1, "", "cat"], [12, 1, 1, "", "cat_from_tensordict"], [12, 1, 1, "", "cat_tensors"], [12, 1, 1, "", "ceil"], [12, 1, 1, "", "ceil_"], [12, 1, 1, "", "children"], [12, 1, 1, "", "chunk"], [12, 1, 1, "", "clamp"], [12, 1, 1, "", "clamp_max"], [12, 1, 1, "", "clamp_max_"], [12, 1, 1, "", "clamp_min"], [12, 1, 1, "", "clamp_min_"], [12, 1, 1, "", "clear"], [12, 1, 1, "", "clear_device_"], [12, 1, 1, "", "clear_refs_for_compile_"], [12, 1, 1, "", "clone"], [12, 1, 1, "", "compile"], [12, 1, 1, "", "complex128"], [12, 1, 1, "", "complex32"], [12, 1, 1, "", "complex64"], [12, 1, 1, "", "consolidate"], [12, 1, 1, "", "contiguous"], [12, 1, 1, "", "copy"], [12, 1, 1, "", "copy_"], [12, 1, 1, "", "copy_at_"], [12, 1, 1, "", "cos"], [12, 1, 1, "", "cos_"], [12, 1, 1, "", "cosh"], [12, 1, 1, "", "cosh_"], [12, 1, 1, "", "cpu"], [12, 1, 1, "", "create_nested"], [12, 1, 1, "", "cuda"], [12, 1, 1, "", "cummax"], [12, 1, 1, "", "cummin"], [12, 2, 1, "", "data"], [12, 1, 1, "", "data_ptr"], [12, 1, 1, "", "del_"], [12, 1, 1, "", "densify"], [12, 2, 1, "", "depth"], [12, 1, 1, "", "detach"], [12, 1, 1, "", "detach_"], [12, 2, 1, "", "device"], [12, 1, 1, "", "dim"], [12, 1, 1, "", "div"], [12, 1, 1, "", "div_"], [12, 1, 1, "", "double"], [12, 2, 1, "", "dtype"], [12, 1, 1, "", "dumps"], [12, 1, 1, "", "empty"], [12, 1, 1, "", "entry_class"], [12, 1, 1, "", "erf"], [12, 1, 1, "", "erf_"], [12, 1, 1, "", "erfc"], [12, 1, 1, "", "erfc_"], [12, 1, 1, "", "eval"], [12, 1, 1, "", "exclude"], [12, 1, 1, "", "exp"], [12, 1, 1, "", "exp_"], [12, 1, 1, "", "expand"], [12, 1, 1, "", "expand_as"], [12, 1, 1, "", "expm1"], [12, 1, 1, "", "expm1_"], [12, 1, 1, "", "extra_repr"], [12, 1, 1, "", "fill_"], [12, 1, 1, "", "filter_empty_"], [12, 1, 1, "", "filter_non_tensor_data"], [12, 1, 1, "", "flatten"], [12, 1, 1, "", "flatten_keys"], [12, 1, 1, "", "float"], [12, 1, 1, "", "float16"], [12, 1, 1, "", "float32"], [12, 1, 1, "", "float64"], [12, 1, 1, "", "floor"], [12, 1, 1, "", "floor_"], [12, 1, 1, "", "forward"], [12, 1, 1, "", "frac"], [12, 1, 1, "", "frac_"], [12, 1, 1, "", "from_any"], [12, 1, 1, "", "from_dataclass"], [12, 1, 1, "", "from_dict"], [12, 1, 1, "", "from_dict_instance"], [12, 1, 1, "", "from_h5"], [12, 1, 1, "", "from_module"], [12, 1, 1, "", "from_modules"], [12, 1, 1, "", "from_namedtuple"], [12, 1, 1, "", "from_pytree"], [12, 1, 1, "", "from_struct_array"], [12, 1, 1, "", "from_tuple"], [12, 1, 1, "", "fromkeys"], [12, 1, 1, "", "gather"], [12, 1, 1, "", "gather_and_stack"], [12, 1, 1, "", "get"], [12, 1, 1, "", "get_at"], [12, 1, 1, "", "get_buffer"], [12, 1, 1, "", "get_extra_state"], [12, 1, 1, "", "get_item_shape"], [12, 1, 1, "", "get_non_tensor"], [12, 1, 1, "", "get_parameter"], [12, 1, 1, "", "get_submodule"], [12, 2, 1, "", "grad"], [12, 1, 1, "", "half"], [12, 1, 1, "", "int"], [12, 1, 1, "", "int16"], [12, 1, 1, "", "int32"], [12, 1, 1, "", "int64"], [12, 1, 1, "", "int8"], [12, 1, 1, "", "ipu"], [12, 1, 1, "", "irecv"], [12, 1, 1, "", "is_consolidated"], [12, 1, 1, "", "is_contiguous"], [12, 1, 1, "", "is_empty"], [12, 2, 1, "", "is_memmap"], [12, 2, 1, "", "is_shared"], [12, 1, 1, "", "isend"], [12, 1, 1, "", "isfinite"], [12, 1, 1, "", "isnan"], [12, 1, 1, "", "isneginf"], [12, 1, 1, "", "isposinf"], [12, 1, 1, "", "isreal"], [12, 1, 1, "", "items"], [12, 1, 1, "", "keys"], [12, 1, 1, "", "lazy_stack"], [12, 1, 1, "", "lerp"], [12, 1, 1, "", "lerp_"], [12, 1, 1, "", "lgamma"], [12, 1, 1, "", "lgamma_"], [12, 1, 1, "", "load"], [12, 1, 1, "", "load_"], [12, 1, 1, "", "load_memmap"], [12, 1, 1, "", "load_memmap_"], [12, 1, 1, "", "load_state_dict"], [12, 1, 1, "", "lock_"], [12, 1, 1, "", "log"], [12, 1, 1, "", "log10"], [12, 1, 1, "", "log10_"], [12, 1, 1, "", "log1p"], [12, 1, 1, "", "log1p_"], [12, 1, 1, "", "log2"], [12, 1, 1, "", "log2_"], [12, 1, 1, "", "log_"], [12, 1, 1, "", "logical_and"], [12, 1, 1, "", "logsumexp"], [12, 1, 1, "", "make_memmap"], [12, 1, 1, "", "make_memmap_from_storage"], [12, 1, 1, "", "make_memmap_from_tensor"], [12, 1, 1, "", "map"], [12, 1, 1, "", "map_iter"], [12, 1, 1, "", "masked_fill"], [12, 1, 1, "", "masked_fill_"], [12, 1, 1, "", "masked_select"], [12, 1, 1, "", "max"], [12, 1, 1, "", "maximum"], [12, 1, 1, "", "maximum_"], [12, 1, 1, "", "maybe_dense_stack"], [12, 1, 1, "", "mean"], [12, 1, 1, "", "memmap"], [12, 1, 1, "", "memmap_"], [12, 1, 1, "", "memmap_like"], [12, 1, 1, "", "memmap_refresh_"], [12, 1, 1, "", "min"], [12, 1, 1, "", "minimum"], [12, 1, 1, "", "minimum_"], [12, 1, 1, "", "modules"], [12, 1, 1, "", "mtia"], [12, 1, 1, "", "mul"], [12, 1, 1, "", "mul_"], [12, 1, 1, "", "named_apply"], [12, 1, 1, "", "named_buffers"], [12, 1, 1, "", "named_children"], [12, 1, 1, "", "named_modules"], [12, 1, 1, "", "named_parameters"], [12, 2, 1, "", "names"], [12, 1, 1, "", "nanmean"], [12, 1, 1, "", "nansum"], [12, 2, 1, "", "ndim"], [12, 1, 1, "", "ndimension"], [12, 1, 1, "", "neg"], [12, 1, 1, "", "neg_"], [12, 1, 1, "", "new_empty"], [12, 1, 1, "", "new_full"], [12, 1, 1, "", "new_ones"], [12, 1, 1, "", "new_tensor"], [12, 1, 1, "", "new_zeros"], [12, 1, 1, "", "non_tensor_items"], [12, 1, 1, "", "norm"], [12, 1, 1, "", "numel"], [12, 1, 1, "", "numpy"], [12, 1, 1, "", "param_count"], [12, 1, 1, "", "parameters"], [12, 1, 1, "", "permute"], [12, 1, 1, "", "pin_memory"], [12, 1, 1, "", "pin_memory_"], [12, 1, 1, "", "pop"], [12, 1, 1, "", "popitem"], [12, 1, 1, "", "pow"], [12, 1, 1, "", "pow_"], [12, 1, 1, "", "prod"], [12, 1, 1, "", "qint32"], [12, 1, 1, "", "qint8"], [12, 1, 1, "", "quint4x2"], [12, 1, 1, "", "quint8"], [12, 1, 1, "", "reciprocal"], [12, 1, 1, "", "reciprocal_"], [12, 1, 1, "", "record_stream"], [12, 1, 1, "", "recv"], [12, 1, 1, "", "reduce"], [12, 1, 1, "", "refine_names"], [12, 1, 1, "", "register_backward_hook"], [12, 1, 1, "", "register_buffer"], [12, 1, 1, "", "register_forward_hook"], [12, 1, 1, "", "register_forward_pre_hook"], [12, 1, 1, "", "register_full_backward_hook"], [12, 1, 1, "", "register_full_backward_pre_hook"], [12, 1, 1, "", "register_get_post_hook"], [12, 1, 1, "", "register_load_state_dict_post_hook"], [12, 1, 1, "", "register_load_state_dict_pre_hook"], [12, 1, 1, "", "register_module"], [12, 1, 1, "", "register_parameter"], [12, 1, 1, "", "register_state_dict_post_hook"], [12, 1, 1, "", "register_state_dict_pre_hook"], [12, 1, 1, "", "rename"], [12, 1, 1, "", "rename_"], [12, 1, 1, "", "rename_key_"], [12, 1, 1, "", "repeat"], [12, 1, 1, "", "repeat_interleave"], [12, 1, 1, "", "replace"], [12, 1, 1, "", "requires_grad_"], [12, 1, 1, "", "reshape"], [12, 1, 1, "", "round"], [12, 1, 1, "", "round_"], [12, 1, 1, "", "save"], [12, 2, 1, "", "saved_path"], [12, 1, 1, "", "select"], [12, 1, 1, "", "send"], [12, 1, 1, "", "separates"], [12, 1, 1, "", "set"], [12, 1, 1, "", "set_"], [12, 1, 1, "", "set_at_"], [12, 1, 1, "", "set_extra_state"], [12, 1, 1, "", "set_non_tensor"], [12, 1, 1, "", "set_submodule"], [12, 1, 1, "", "setdefault"], [12, 2, 1, "", "shape"], [12, 1, 1, "", "share_memory"], [12, 1, 1, "", "share_memory_"], [12, 1, 1, "", "sigmoid"], [12, 1, 1, "", "sigmoid_"], [12, 1, 1, "", "sign"], [12, 1, 1, "", "sign_"], [12, 1, 1, "", "sin"], [12, 1, 1, "", "sin_"], [12, 1, 1, "", "sinh"], [12, 1, 1, "", "sinh_"], [12, 1, 1, "", "size"], [12, 1, 1, "", "softmax"], [12, 2, 1, "", "sorted_keys"], [12, 1, 1, "", "split"], [12, 1, 1, "", "split_keys"], [12, 1, 1, "", "sqrt"], [12, 1, 1, "", "sqrt_"], [12, 1, 1, "", "squeeze"], [12, 1, 1, "", "stack"], [12, 1, 1, "", "stack_from_tensordict"], [12, 1, 1, "", "stack_tensors"], [12, 1, 1, "", "state_dict"], [12, 1, 1, "", "std"], [12, 1, 1, "", "sub"], [12, 1, 1, "", "sub_"], [12, 1, 1, "", "sum"], [12, 1, 1, "", "tan"], [12, 1, 1, "", "tan_"], [12, 1, 1, "", "tanh"], [12, 1, 1, "", "tanh_"], [12, 1, 1, "", "to"], [12, 1, 1, "", "to_dict"], [12, 1, 1, "", "to_empty"], [12, 1, 1, "", "to_h5"], [12, 1, 1, "", "to_module"], [12, 1, 1, "", "to_namedtuple"], [12, 1, 1, "", "to_padded_tensor"], [12, 1, 1, "", "to_pytree"], [12, 1, 1, "", "to_struct_array"], [12, 1, 1, "", "to_tensordict"], [12, 1, 1, "", "tolist"], [12, 1, 1, "", "train"], [12, 1, 1, "", "transpose"], [12, 1, 1, "", "trunc"], [12, 1, 1, "", "trunc_"], [12, 1, 1, "", "type"], [12, 1, 1, "", "uint16"], [12, 1, 1, "", "uint32"], [12, 1, 1, "", "uint64"], [12, 1, 1, "", "uint8"], [12, 1, 1, "", "unbind"], [12, 1, 1, "", "unflatten"], [12, 1, 1, "", "unflatten_keys"], [12, 1, 1, "", "unlock_"], [12, 1, 1, "", "unsqueeze"], [12, 1, 1, "", "update"], [12, 1, 1, "", "update_"], [12, 1, 1, "", "update_at_"], [12, 1, 1, "", "values"], [12, 1, 1, "", "var"], [12, 1, 1, "", "view"], [12, 1, 1, "", "where"], [12, 1, 1, "", "xpu"], [12, 1, 1, "", "zero_"], [12, 1, 1, "", "zero_grad"]], "tensordict.nn": [[41, 0, 1, "", "CudaGraphModule"], [42, 0, 1, "", "EnsembleModule"], [43, 0, 1, "", "ProbabilisticTensorDictModule"], [44, 0, 1, "", "ProbabilisticTensorDictSequential"], [45, 0, 1, "", "TensorDictModule"], [46, 0, 1, "", "TensorDictModuleBase"], [47, 0, 1, "", "TensorDictModuleWrapper"], [48, 0, 1, "", "TensorDictSequential"], [49, 0, 1, "", "WrapModule"], [50, 0, 1, "", "as_tensordict_module"], [51, 0, 1, "", "biased_softplus"], [52, 0, 1, "", "composite_lp_aggregate"], [53, 0, 1, "", "dispatch"], [60, 4, 1, "", "inv_softplus"], [61, 4, 1, "", "make_tensordict"], [62, 4, 1, "", "rand_one_hot"], [63, 0, 1, "", "set_composite_lp_aggregate"], [64, 0, 1, "", "set_skip_existing"], [65, 4, 1, "", "skip_existing"]], "tensordict.nn.ProbabilisticTensorDictModule": [[43, 1, 1, "", "build_dist_from_params"], [43, 2, 1, "", "dist_params_keys"], [43, 2, 1, "", "dist_sample_keys"], [43, 1, 1, "", "forward"], [43, 1, 1, "", "get_dist"], [43, 1, 1, "", "log_prob"]], "tensordict.nn.ProbabilisticTensorDictSequential": [[44, 1, 1, "", "build_dist_from_params"], [44, 2, 1, "", "default_interaction_type"], [44, 2, 1, "", "dist_params_keys"], [44, 2, 1, "", "dist_sample_keys"], [44, 1, 1, "", "forward"], [44, 1, 1, "", "get_dist"], [44, 1, 1, "", "get_dist_params"], [44, 1, 1, "", "log_prob"]], "tensordict.nn.TensorDictModule": [[45, 1, 1, "", "forward"]], "tensordict.nn.TensorDictModuleBase": [[46, 1, 1, "", "is_tdmodule_compatible"], [46, 1, 1, "", "reset_out_keys"], [46, 1, 1, "", "reset_parameters_recursive"], [46, 1, 1, "", "select_out_keys"]], "tensordict.nn.TensorDictModuleWrapper": [[47, 1, 1, "", "forward"]], "tensordict.nn.TensorDictSequential": [[48, 1, 1, "", "forward"], [48, 1, 1, "", "reset_out_keys"], [48, 1, 1, "", "select_out_keys"], [48, 1, 1, "", "select_subsequence"]], "tensordict.nn.WrapModule": [[49, 1, 1, "", "forward"]], "tensordict.nn.distributions": [[54, 0, 1, "", "AddStateIndependentNormalScale"], [55, 0, 1, "", "CompositeDistribution"], [56, 0, 1, "", "Delta"], [57, 0, 1, "", "NormalParamExtractor"], [58, 0, 1, "", "OneHotCategorical"], [59, 0, 1, "", "TruncatedNormal"]], "tensordict.utils": [[74, 0, 1, "", "expand_as_right"], [75, 0, 1, "", "expand_right"], [76, 0, 1, "", "isin"], [77, 0, 1, "", "remove_duplicates"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:attribute", "4": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"]}, "titleterms": {"tensordict": [0, 2, 3, 10, 42, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 79, 81, 82, 84, 85, 88, 91, 92, 93, 94, 95], "distribut": [0, 54, 55, 56, 57, 58, 59, 79, 93], "set": [0, 91, 96], "creat": [0, 3], "memori": [0, 81, 82, 92, 94], "map": [0, 81, 82, 92], "oper": [0, 3, 81], "tensor": [0, 3, 81, 92], "across": 0, "node": 0, "trace": 1, "tensordictmodul": [1, 3, 45, 79, 85, 93], "tensordictsequenti": [1, 48], "welcom": 2, "document": 2, "instal": 2, "tutori": 2, "basic": 2, "nn": [2, 42, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 79], "dataload": [2, 84, 89], "content": [2, 91], "indic": 2, "tabl": 2, "overview": 3, "motiv": 3, "featur": 3, "escap": 3, "shape": [3, 95], "non": 3, "data": [3, 88, 90], "access": 3, "batch": [3, 90, 95], "stack": [3, 72, 88, 93, 95], "name": 3, "dimens": [3, 95], "nest": [3, 85, 91], "lazi": 3, "evalu": 3, "pre": [3, 94], "alloc": [3, 94], "lazystackedtensordict": 4, "memorymappedtensor": [5, 82], "nontensordata": 6, "nontensorstack": 7, "persistenttensordict": 8, "tensorclass": [9, 73, 80, 82, 89, 90], "tensordictbas": 11, "tensordictparam": 12, "capture_non_tensor_stack": 13, "cat": 14, "default_is_leaf": 15, "dense_stack_td": 16, "from_ani": 17, "from_consolid": 18, "from_dataclass": 19, "from_dict": 20, "from_h5": 21, "from_modul": [22, 23], "from_namedtupl": 24, "from_pytre": 25, "from_struct_arrai": 26, "from_tupl": 27, "fromkei": 28, "get_defaults_to_non": 29, "is_batchedtensor": 30, "is_leaf_nontensor": 31, "is_tensor_collect": 32, "lazy_legaci": 33, "lazy_stack": 34, "load": [35, 82, 90], "load_memmap": 36, "make_tensordict": [37, 61], "maybe_dense_stack": 38, "memmap": 39, "merge_tensordict": 40, "cudagraphmodul": 41, "ensemblemodul": 42, "probabilistictensordictmodul": [43, 93], "probabilistictensordictsequenti": 44, "tensordictmodulebas": 46, "tensordictmodulewrapp": 47, "wrapmodul": 49, "as_tensordict_modul": 50, "biased_softplu": 51, "composite_lp_aggreg": 52, "dispatch": 53, "addstateindependentnormalscal": 54, "compositedistribut": 55, "delta": 56, "normalparamextractor": 57, "onehotcategor": 58, "truncatednorm": 59, "inv_softplu": 60, "rand_one_hot": 62, "set_composite_lp_aggreg": 63, "set_skip_exist": 64, "skip_exist": 65, "pad": 66, "pad_sequ": 67, "parse_tensor_dict_str": 68, "save": [69, 82, 85], "set_capture_non_tensor_stack": 70, "set_lazy_legaci": 71, "expand_as_right": 74, "expand_right": 75, "isin": 76, "remove_dupl": 77, "api": 78, "refer": 78, "packag": [79, 81], "ensembl": 79, "compil": 79, "util": [79, 81], "serial": 80, "edg": 80, "case": [80, 82], "auto": 80, "cast": 80, "constructor": 81, "handler": 81, "context": 81, "manag": [81, 92], "pointwis": 81, "support": [81, 93], "perform": 81, "exampl": [81, 93], "1": 81, "2": 81, "3": 81, "scalar": 81, "broadcast": 81, "rule": 81, "effici": 81, "handl": [81, 82], "miss": 81, "entri": 81, "object": 82, "memmori": 82, "exist": [82, 91], "torchsnapshot": 82, "compat": 82, "gener": 82, "us": [82, 84, 85, 89, 93, 95], "big": 82, "dataset": [82, 84, 89], "comput": [83, 87], "time": [83, 87], "model": [84, 85, 89], "optim": [84, 89], "paramet": [84, 89], "export": 85, "modul": [85, 93], "prerequisit": 85, "kei": [85, 91, 93], "learn": 85, "design": 85, "torch": 85, "work": [85, 93], "select": [85, 91], "output": 85, "control": 85, "sampl": 85, "strategi": 85, "next": 85, "step": 85, "further": 85, "read": 85, "readm": 86, "tuto": 86, "build": 88, "from": 88, "stream": 88, "heterogen": 88, "togeth": 88, "asynchron": 88, "conclus": [88, 93], "manipul": [91, 95], "get": 91, "renam": 91, "updat": 91, "multipl": [91, 93], "valu": [91, 95, 96], "iter": 91, "over": 91, "s": [91, 93], "check": 91, "flatten": 91, "unflatten": 91, "exclud": 91, "simplifi": 92, "pytorch": 92, "devic": 92, "simpl": 93, "code": 93, "recurr": 93, "layer": 93, "callabl": 93, "input": 93, "without": 93, "runtim": 93, "do": 93, "don": 93, "t": 93, "index": [95, 96], "reshap": 95, "split": 95, "unbind": 95, "concaten": 95, "expand": 95, "squeez": 95, "unsqueez": 95, "view": 95, "permut": 95, "decor": 95, "gather": 95, "slice": 96, "mask": 96}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 56}})