Search.setIndex({"docnames": ["distributed", "fx", "index", "overview", "reference/generated/tensordict.LazyStackedTensorDict", "reference/generated/tensordict.MemoryMappedTensor", "reference/generated/tensordict.NonTensorData", "reference/generated/tensordict.NonTensorStack", "reference/generated/tensordict.PersistentTensorDict", "reference/generated/tensordict.TensorClass", "reference/generated/tensordict.TensorDict", "reference/generated/tensordict.TensorDictBase", "reference/generated/tensordict.TensorDictParams", "reference/generated/tensordict.capture_non_tensor_stack", "reference/generated/tensordict.cat", "reference/generated/tensordict.default_is_leaf", "reference/generated/tensordict.dense_stack_tds", "reference/generated/tensordict.from_any", "reference/generated/tensordict.from_consolidated", "reference/generated/tensordict.from_dataclass", "reference/generated/tensordict.from_dict", "reference/generated/tensordict.from_h5", "reference/generated/tensordict.from_module", "reference/generated/tensordict.from_modules", "reference/generated/tensordict.from_namedtuple", "reference/generated/tensordict.from_pytree", "reference/generated/tensordict.from_struct_array", "reference/generated/tensordict.from_tuple", "reference/generated/tensordict.fromkeys", "reference/generated/tensordict.get_defaults_to_none", "reference/generated/tensordict.is_batchedtensor", "reference/generated/tensordict.is_leaf_nontensor", "reference/generated/tensordict.is_tensor_collection", "reference/generated/tensordict.lazy_legacy", "reference/generated/tensordict.lazy_stack", "reference/generated/tensordict.load", "reference/generated/tensordict.load_memmap", "reference/generated/tensordict.make_tensordict", "reference/generated/tensordict.maybe_dense_stack", "reference/generated/tensordict.memmap", "reference/generated/tensordict.merge_tensordicts", "reference/generated/tensordict.nn.CudaGraphModule", "reference/generated/tensordict.nn.EnsembleModule", "reference/generated/tensordict.nn.ProbabilisticTensorDictModule", "reference/generated/tensordict.nn.ProbabilisticTensorDictSequential", "reference/generated/tensordict.nn.TensorDictModule", "reference/generated/tensordict.nn.TensorDictModuleBase", "reference/generated/tensordict.nn.TensorDictModuleWrapper", "reference/generated/tensordict.nn.TensorDictSequential", "reference/generated/tensordict.nn.WrapModule", "reference/generated/tensordict.nn.biased_softplus", "reference/generated/tensordict.nn.composite_lp_aggregate", "reference/generated/tensordict.nn.dispatch", "reference/generated/tensordict.nn.distributions.AddStateIndependentNormalScale", "reference/generated/tensordict.nn.distributions.CompositeDistribution", "reference/generated/tensordict.nn.distributions.Delta", "reference/generated/tensordict.nn.distributions.NormalParamExtractor", "reference/generated/tensordict.nn.distributions.OneHotCategorical", "reference/generated/tensordict.nn.distributions.TruncatedNormal", "reference/generated/tensordict.nn.inv_softplus", "reference/generated/tensordict.nn.make_tensordict", "reference/generated/tensordict.nn.rand_one_hot", "reference/generated/tensordict.nn.set_composite_lp_aggregate", "reference/generated/tensordict.nn.set_skip_existing", "reference/generated/tensordict.nn.skip_existing", "reference/generated/tensordict.pad", "reference/generated/tensordict.pad_sequence", "reference/generated/tensordict.parse_tensor_dict_string", "reference/generated/tensordict.save", "reference/generated/tensordict.set_capture_non_tensor_stack", "reference/generated/tensordict.set_lazy_legacy", "reference/generated/tensordict.stack", "reference/generated/tensordict.tensorclass", "reference/generated/tensordict.utils.expand_as_right", "reference/generated/tensordict.utils.expand_right", "reference/generated/tensordict.utils.isin", "reference/generated/tensordict.utils.remove_duplicates", "reference/index", "reference/nn", "reference/tensorclass", "reference/tensordict", "saving", "sg_execution_times", "tutorials/data_fashion", "tutorials/export", "tutorials/index", "tutorials/sg_execution_times", "tutorials/streamed_tensordict", "tutorials/tensorclass_fashion", "tutorials/tensorclass_imagenet", "tutorials/tensordict_keys", "tutorials/tensordict_memory", "tutorials/tensordict_module", "tutorials/tensordict_preallocation", "tutorials/tensordict_shapes", "tutorials/tensordict_slicing"], "filenames": ["distributed.rst", "fx.rst", "index.rst", "overview.rst", "reference/generated/tensordict.LazyStackedTensorDict.rst", "reference/generated/tensordict.MemoryMappedTensor.rst", "reference/generated/tensordict.NonTensorData.rst", "reference/generated/tensordict.NonTensorStack.rst", "reference/generated/tensordict.PersistentTensorDict.rst", "reference/generated/tensordict.TensorClass.rst", "reference/generated/tensordict.TensorDict.rst", "reference/generated/tensordict.TensorDictBase.rst", "reference/generated/tensordict.TensorDictParams.rst", "reference/generated/tensordict.capture_non_tensor_stack.rst", "reference/generated/tensordict.cat.rst", "reference/generated/tensordict.default_is_leaf.rst", "reference/generated/tensordict.dense_stack_tds.rst", "reference/generated/tensordict.from_any.rst", "reference/generated/tensordict.from_consolidated.rst", "reference/generated/tensordict.from_dataclass.rst", "reference/generated/tensordict.from_dict.rst", "reference/generated/tensordict.from_h5.rst", "reference/generated/tensordict.from_module.rst", "reference/generated/tensordict.from_modules.rst", "reference/generated/tensordict.from_namedtuple.rst", "reference/generated/tensordict.from_pytree.rst", "reference/generated/tensordict.from_struct_array.rst", "reference/generated/tensordict.from_tuple.rst", "reference/generated/tensordict.fromkeys.rst", "reference/generated/tensordict.get_defaults_to_none.rst", "reference/generated/tensordict.is_batchedtensor.rst", "reference/generated/tensordict.is_leaf_nontensor.rst", "reference/generated/tensordict.is_tensor_collection.rst", "reference/generated/tensordict.lazy_legacy.rst", "reference/generated/tensordict.lazy_stack.rst", "reference/generated/tensordict.load.rst", "reference/generated/tensordict.load_memmap.rst", "reference/generated/tensordict.make_tensordict.rst", "reference/generated/tensordict.maybe_dense_stack.rst", "reference/generated/tensordict.memmap.rst", "reference/generated/tensordict.merge_tensordicts.rst", "reference/generated/tensordict.nn.CudaGraphModule.rst", "reference/generated/tensordict.nn.EnsembleModule.rst", "reference/generated/tensordict.nn.ProbabilisticTensorDictModule.rst", "reference/generated/tensordict.nn.ProbabilisticTensorDictSequential.rst", "reference/generated/tensordict.nn.TensorDictModule.rst", "reference/generated/tensordict.nn.TensorDictModuleBase.rst", "reference/generated/tensordict.nn.TensorDictModuleWrapper.rst", "reference/generated/tensordict.nn.TensorDictSequential.rst", "reference/generated/tensordict.nn.WrapModule.rst", "reference/generated/tensordict.nn.biased_softplus.rst", "reference/generated/tensordict.nn.composite_lp_aggregate.rst", "reference/generated/tensordict.nn.dispatch.rst", "reference/generated/tensordict.nn.distributions.AddStateIndependentNormalScale.rst", "reference/generated/tensordict.nn.distributions.CompositeDistribution.rst", "reference/generated/tensordict.nn.distributions.Delta.rst", "reference/generated/tensordict.nn.distributions.NormalParamExtractor.rst", "reference/generated/tensordict.nn.distributions.OneHotCategorical.rst", "reference/generated/tensordict.nn.distributions.TruncatedNormal.rst", "reference/generated/tensordict.nn.inv_softplus.rst", "reference/generated/tensordict.nn.make_tensordict.rst", "reference/generated/tensordict.nn.rand_one_hot.rst", "reference/generated/tensordict.nn.set_composite_lp_aggregate.rst", "reference/generated/tensordict.nn.set_skip_existing.rst", "reference/generated/tensordict.nn.skip_existing.rst", "reference/generated/tensordict.pad.rst", "reference/generated/tensordict.pad_sequence.rst", "reference/generated/tensordict.parse_tensor_dict_string.rst", "reference/generated/tensordict.save.rst", "reference/generated/tensordict.set_capture_non_tensor_stack.rst", "reference/generated/tensordict.set_lazy_legacy.rst", "reference/generated/tensordict.stack.rst", "reference/generated/tensordict.tensorclass.rst", "reference/generated/tensordict.utils.expand_as_right.rst", "reference/generated/tensordict.utils.expand_right.rst", "reference/generated/tensordict.utils.isin.rst", "reference/generated/tensordict.utils.remove_duplicates.rst", "reference/index.rst", "reference/nn.rst", "reference/tensorclass.rst", "reference/tensordict.rst", "saving.rst", "sg_execution_times.rst", "tutorials/data_fashion.rst", "tutorials/export.rst", "tutorials/index.rst", "tutorials/sg_execution_times.rst", "tutorials/streamed_tensordict.rst", "tutorials/tensorclass_fashion.rst", "tutorials/tensorclass_imagenet.rst", "tutorials/tensordict_keys.rst", "tutorials/tensordict_memory.rst", "tutorials/tensordict_module.rst", "tutorials/tensordict_preallocation.rst", "tutorials/tensordict_shapes.rst", "tutorials/tensordict_slicing.rst"], "titles": ["TensorDict in distributed settings", "Tracing TensorDictModule", "Welcome to the TensorDict Documentation!", "Overview", "LazyStackedTensorDict", "MemoryMappedTensor", "NonTensorData", "NonTensorStack", "PersistentTensorDict", "TensorClass", "TensorDict", "TensorDictBase", "TensorDictParams", "capture_non_tensor_stack", "cat", "default_is_leaf", "dense_stack_tds", "from_any", "from_consolidated", "from_dataclass", "from_dict", "from_h5", "from_module", "from_modules", "from_namedtuple", "from_pytree", "from_struct_array", "from_tuple", "fromkeys", "get_defaults_to_none", "is_batchedtensor", "is_leaf_nontensor", "is_tensor_collection", "lazy_legacy", "lazy_stack", "load", "load_memmap", "make_tensordict", "maybe_dense_stack", "memmap", "merge_tensordicts", "CudaGraphModule", "tensordict.nn.EnsembleModule", "ProbabilisticTensorDictModule", "ProbabilisticTensorDictSequential", "TensorDictModule", "TensorDictModuleBase", "TensorDictModuleWrapper", "TensorDictSequential", "WrapModule", "tensordict.nn.biased_softplus", "composite_lp_aggregate", "tensordict.nn.dispatch", "tensordict.nn.distributions.AddStateIndependentNormalScale", "tensordict.nn.distributions.CompositeDistribution", "tensordict.nn.distributions.Delta", "tensordict.nn.distributions.NormalParamExtractor", "tensordict.nn.distributions.OneHotCategorical", "tensordict.nn.distributions.TruncatedNormal", "tensordict.nn.inv_softplus", "tensordict.nn.make_tensordict", "tensordict.nn.rand_one_hot", "set_composite_lp_aggregate", "tensordict.nn.set_skip_existing", "tensordict.nn.skip_existing", "pad", "pad_sequence", "parse_tensor_dict_string", "save", "set_capture_non_tensor_stack", "set_lazy_legacy", "stack", "tensorclass", "expand_as_right", "expand_right", "isin", "remove_duplicates", "API Reference", "tensordict.nn package", "tensorclass", "tensordict package", "Saving TensorDict and tensorclass objects", "Computation times", "Using TensorDict for datasets", "Exporting tensordict modules", "README Tutos", "Computation times", "Building tensordicts from streams", "Using tensorclasses for datasets", "Batched data loading with tensorclasses", "Manipulating the keys of a TensorDict", "Simplifying PyTorch Memory Management with TensorDict", "TensorDictModule", "Pre-allocating memory with TensorDict", "Manipulating the shape of a TensorDict", "Slicing, Indexing, and Masking"], "terms": {"can": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 20, 22, 23, 36, 37, 41, 43, 44, 45, 46, 48, 52, 53, 54, 56, 60, 62, 63, 69, 70, 72, 78, 79, 80, 81, 83, 84, 87, 88, 89, 90, 91, 92, 94, 95], "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 19, 20, 22, 23, 33, 36, 37, 39, 40, 41, 43, 44, 45, 46, 48, 49, 52, 53, 54, 56, 60, 63, 66, 67, 69, 72, 78, 79, 80, 82, 85, 86, 87, 89, 90, 91, 93, 95], "pass": [0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 12, 16, 19, 23, 25, 32, 40, 41, 43, 44, 45, 47, 48, 49, 50, 52, 54, 78, 80, 81, 83, 84, 87, 88, 91, 92], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 18, 19, 22, 23, 25, 28, 32, 35, 36, 37, 40, 42, 43, 44, 45, 46, 48, 49, 52, 53, 54, 56, 60, 62, 63, 65, 72, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95], "one": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 25, 41, 43, 44, 45, 46, 47, 48, 49, 52, 53, 56, 57, 63, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 90, 91, 92, 94], "anoth": [0, 3, 4, 5, 7, 8, 10, 11, 12, 45, 52, 73, 76, 81, 87, 90, 92, 94], "If": [0, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 16, 19, 23, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 52, 54, 60, 63, 66, 69, 76, 79, 80, 81, 91, 92, 94], "two": [0, 3, 4, 5, 7, 8, 9, 10, 11, 12, 25, 43, 65, 80, 81, 83, 87, 88, 89, 92, 95], "have": [0, 3, 4, 7, 8, 10, 11, 12, 16, 19, 20, 22, 23, 37, 41, 42, 44, 45, 48, 52, 54, 60, 63, 75, 79, 80, 81, 84, 87, 91, 92, 93, 94, 95], "access": [0, 2, 4, 5, 7, 8, 10, 11, 12, 46, 48, 80, 81, 90, 94], "share": [0, 4, 6, 7, 8, 10, 11, 12, 39, 94, 95], "physic": [0, 4, 7, 8, 10, 11, 12, 80, 89], "storag": [0, 3, 4, 5, 6, 7, 8, 10, 11, 12, 72, 80, 87, 89], "effici": [0, 3, 4, 7, 8, 10, 11, 12, 83, 87, 88, 89, 90], "data": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 19, 32, 36, 37, 39, 42, 45, 49, 60, 66, 68, 69, 72, 78, 79, 80, 81, 82, 83, 85, 86, 88, 92], "run": [0, 12, 41, 43, 44, 47, 49, 52, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95], "process": [0, 3, 4, 6, 7, 8, 10, 11, 12, 39, 49, 70, 80, 87, 89], "here": [0, 3, 78, 79, 81, 84, 87, 88, 89, 92, 94], "we": [0, 1, 3, 4, 7, 8, 9, 10, 11, 12, 20, 37, 42, 43, 45, 46, 48, 60, 78, 80, 81, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95], "provid": [0, 3, 4, 5, 6, 7, 8, 10, 11, 12, 16, 19, 25, 36, 41, 43, 45, 48, 49, 52, 54, 66, 72, 73, 76, 78, 79, 80, 83, 84, 88, 89, 90, 91, 92], "some": [0, 3, 4, 7, 8, 10, 11, 12, 16, 40, 41, 43, 44, 48, 65, 70, 72, 80, 81, 84, 87, 88, 89, 92], "detail": [0, 4, 7, 8, 10, 11, 12, 34, 38, 56, 79], "how": [0, 3, 4, 7, 8, 10, 11, 12, 19, 54, 81, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 19, 20, 22, 23, 25, 35, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 54, 57, 60, 62, 63, 67, 68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95], "achiev": [0, 3, 4, 7, 8, 10, 11, 12, 79, 90], "rpc": [0, 5], "For": [0, 2, 3, 4, 7, 8, 10, 11, 12, 25, 41, 54, 65, 78, 79, 80, 84, 87, 89, 90, 91, 92, 94, 95], "more": [0, 1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 17, 20, 21, 23, 24, 26, 27, 43, 44, 45, 53, 56, 62, 79, 81, 83, 84, 87, 88, 89, 94], "check": [0, 1, 3, 4, 7, 8, 9, 10, 11, 12, 25, 26, 32, 41, 46, 49, 63, 79, 81, 84, 89, 91], "offici": [0, 84], "pytorch": [0, 2, 3, 8, 12, 41, 78, 80, 81, 82, 83, 84, 85, 86, 88, 89, 94], "document": [0, 12, 79, 81, 84], "arrai": [0, 4, 7, 8, 10, 11, 12, 26, 80, 89, 93], "great": 0, "advantag": [0, 3, 5, 8, 80, 81, 89, 93, 94], "thei": [0, 3, 4, 7, 8, 10, 11, 12, 16, 63, 80, 81, 84, 87, 88, 89, 91, 92, 93, 94], "store": [0, 3, 4, 5, 6, 7, 8, 10, 11, 12, 22, 23, 39, 46, 54, 72, 80, 81, 83, 88, 90, 91, 93, 94], "amount": [0, 87], "allow": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 36, 41, 52, 54, 63, 78, 79, 80, 81, 83, 87, 88, 89, 91, 94], "slice": [0, 2, 3, 4, 7, 8, 10, 11, 12, 82, 85, 86, 94], "readili": [0, 43], "without": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 19, 36, 44, 72, 81, 84], "read": [0, 1, 2, 3, 4, 7, 8, 10, 11, 12, 43, 45, 46, 48, 49, 52, 57, 78, 80, 81, 87, 92], "whole": [0, 79, 81], "file": [0, 4, 5, 6, 7, 8, 10, 11, 12, 18, 21, 36, 39, 80, 81, 82, 84, 86, 89, 91], "offer": [0, 3, 41, 62, 80, 81, 83, 87, 88, 89, 92], "an": [0, 1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 16, 19, 21, 23, 28, 32, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 52, 60, 72, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94], "interfac": [0, 8, 41, 54, 92], "between": [0, 4, 6, 7, 8, 10, 11, 12, 23, 39, 43, 80, 92], "torch": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 19, 20, 22, 23, 25, 30, 36, 37, 40, 41, 42, 43, 44, 45, 46, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 69, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 87, 88, 89, 90, 91, 92, 93, 94, 95], "class": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 91, 92, 94], "name": [0, 2, 4, 5, 6, 7, 8, 10, 11, 12, 19, 25, 26, 45, 52, 54, 63, 72, 78, 92], "memmaptensor": [0, 81], "instanc": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 19, 22, 23, 25, 39, 41, 43, 44, 45, 47, 48, 49, 52, 66, 72, 78, 79, 80, 81, 84, 87, 89, 92, 94], "object": [0, 2, 3, 4, 6, 7, 8, 10, 11, 12, 16, 17, 19, 32, 43, 44, 45, 47, 69, 79, 80, 83, 84, 88], "repres": [0, 4, 5, 7, 8, 10, 11, 12, 23, 43, 81, 84, 87, 89, 92, 95], "big": [0, 2, 4, 7, 8, 10, 11, 12, 80], "dataset": [0, 2, 3, 4, 6, 7, 8, 10, 11, 12, 80, 82, 85, 86, 89], "disk": [0, 4, 5, 6, 7, 8, 10, 11, 12, 35, 36, 39, 68, 80, 81, 83, 88, 89, 91], "easili": [0, 2, 3, 7, 78, 81, 84], "batch": [0, 2, 4, 6, 7, 8, 10, 11, 12, 19, 20, 23, 37, 45, 52, 54, 55, 60, 65, 69, 75, 76, 79, 80, 81, 82, 83, 85, 86, 87, 88, 91, 95], "wai": [0, 3, 4, 7, 8, 9, 10, 11, 12, 45, 80, 84, 89, 90, 92, 94, 95], "A": [0, 3, 4, 5, 6, 7, 8, 10, 11, 12, 19, 36, 39, 41, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 56, 63, 65, 69, 72, 75, 78, 84, 87, 89, 92, 94], "simpli": [0, 1, 3, 6, 81, 87, 89, 90, 94], "via": [0, 2, 3, 4, 7, 8, 10, 11, 12, 46, 48, 79, 94], "1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 22, 25, 26, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 52, 56, 62, 65, 72, 75, 76, 78, 79, 81, 83, 84, 87, 88, 89, 90, 92, 93, 94, 95], "popul": [0, 3, 4, 7, 8, 10, 11, 12, 45, 80, 81, 83, 91, 93], "2": [0, 1, 3, 4, 7, 8, 10, 11, 12, 16, 23, 25, 40, 41, 42, 45, 46, 48, 49, 52, 53, 56, 62, 65, 66, 69, 72, 75, 76, 78, 79, 81, 83, 84, 87, 88, 89, 90, 93, 94, 95], "call": [0, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 16, 23, 36, 39, 41, 43, 45, 47, 48, 49, 52, 54, 63, 70, 71, 80, 81, 84, 87, 92, 93, 94], "memmap_": [0, 4, 6, 7, 8, 10, 11, 12, 81, 89, 91], "put": [0, 4, 7, 8, 10, 11, 12, 41, 81, 87, 92], "One": [0, 3, 57, 78, 79, 81, 84, 89, 92], "queri": [0, 3, 4, 6, 7, 8, 10, 11, 12, 44, 48], "is_memmap": [0, 4, 7, 8, 10, 11, 12, 89], "itself": [0, 3, 4, 7, 8, 9, 10, 11, 12, 23, 46, 84, 91], "done": [0, 3, 4, 7, 8, 10, 11, 12, 79, 80, 83, 88, 89, 94], "sever": [0, 4, 7, 8, 10, 11, 12, 23, 80, 81, 84, 92], "firstli": 0, "empti": [0, 3, 4, 5, 6, 7, 8, 10, 11, 12, 36, 41, 44, 45, 79, 80, 83, 84, 88, 89, 93], "shape": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 19, 20, 22, 23, 26, 36, 37, 40, 41, 42, 43, 44, 45, 46, 48, 49, 53, 54, 55, 56, 60, 62, 63, 65, 66, 73, 74, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95], "size": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 36, 37, 40, 42, 43, 44, 45, 46, 48, 52, 53, 54, 55, 56, 60, 62, 63, 65, 66, 69, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 87, 88, 89, 90, 91, 92, 93, 94, 95], "3": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 20, 23, 25, 26, 37, 40, 42, 43, 44, 45, 46, 48, 49, 53, 54, 56, 60, 62, 65, 66, 72, 73, 74, 75, 76, 78, 79, 81, 83, 84, 87, 88, 89, 90, 92, 93, 94, 95], "4": [0, 3, 4, 7, 8, 10, 11, 12, 16, 20, 22, 23, 26, 37, 42, 43, 45, 48, 49, 53, 54, 56, 60, 62, 65, 66, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 92, 93, 94, 95], "5": [0, 3, 4, 7, 8, 10, 11, 12, 42, 45, 49, 62, 66, 73, 74, 75, 76, 78, 79, 80, 83, 87, 88, 92, 94, 95], "prefix": [0, 4, 6, 7, 8, 10, 11, 12, 35, 36, 39, 68, 81, 91], "tmp": [0, 81], "randn": [0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 12, 20, 23, 25, 37, 41, 42, 43, 45, 48, 53, 54, 56, 60, 62, 78, 79, 80, 81, 84, 87, 92], "The": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 16, 19, 28, 39, 41, 42, 43, 44, 45, 46, 48, 50, 52, 53, 54, 56, 62, 65, 69, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 90, 91, 92, 94, 95], "attribut": [0, 3, 4, 6, 7, 8, 10, 11, 12, 19, 39, 43, 44, 46, 48, 52, 63, 72, 79, 84, 88, 91, 94], "indic": [0, 4, 5, 6, 7, 8, 10, 11, 12, 46, 49, 50, 52, 63, 66, 72, 76, 81, 83, 84, 88, 92, 95], "where": [0, 3, 4, 5, 6, 7, 8, 10, 11, 12, 36, 39, 41, 43, 44, 46, 52, 54, 66, 78, 80, 81, 87, 91, 92, 94], "temporari": [0, 91], "ha": [0, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 16, 43, 65, 70, 78, 80, 81, 84, 87, 89, 90, 92, 93, 94], "It": [0, 3, 4, 7, 8, 10, 11, 12, 23, 41, 43, 46, 48, 66, 69, 72, 76, 79, 92, 94], "crucial": [0, 4, 7, 8, 10, 11, 12, 23], "directori": [0, 4, 6, 7, 8, 10, 11, 12, 39, 79, 81, 91], "everi": [0, 4, 7, 8, 10, 11, 12, 40, 43, 47, 49, 66, 81, 84, 94], "option": [0, 4, 5, 6, 7, 8, 10, 11, 12, 13, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 60, 63, 65, 66, 68, 72, 75, 76, 79, 81, 84, 92], "exist": [0, 2, 4, 5, 6, 7, 8, 10, 11, 12, 39, 40, 41, 43, 44, 63, 64, 84, 94], "former": [0, 3, 4, 7, 8, 10, 11, 12, 43, 47, 49], "method": [0, 3, 4, 5, 6, 7, 8, 10, 11, 12, 19, 25, 33, 35, 36, 39, 43, 44, 45, 46, 47, 48, 52, 54, 63, 70, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 90, 91, 92, 94], "prefer": [0, 4, 7, 8, 10, 11, 12, 52, 84, 91], "when": [0, 3, 4, 5, 7, 8, 10, 11, 12, 16, 22, 23, 38, 43, 44, 45, 46, 48, 49, 50, 52, 54, 62, 63, 72, 80, 81, 84, 87, 88, 89, 90, 91, 92, 94, 95], "ar": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 23, 25, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 56, 63, 72, 75, 78, 79, 80, 81, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95], "do": [0, 3, 4, 7, 8, 10, 11, 12, 41, 43, 63, 81, 84, 87, 89, 90], "fit": [0, 4, 7, 8, 10, 11, 12, 80, 81], "suitabl": [0, 81], "extrem": [0, 81], "serv": [0, 4, 7, 8, 10, 11, 12], "common": [0, 4, 7, 8, 10, 11, 12, 40, 52, 80, 84, 87, 89, 94, 95], "could": [0, 4, 7, 8, 10, 11, 12, 43, 81, 84, 87, 89, 90, 92, 95], "would": [0, 3, 4, 7, 8, 10, 11, 12, 16, 43, 79, 80, 84, 91, 92, 95], "singl": [0, 1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 28, 39, 44, 45, 48, 51, 52, 54, 62, 69, 71, 80, 81, 84, 87, 89, 92, 93, 94], "differ": [0, 3, 4, 7, 8, 10, 11, 12, 20, 23, 37, 45, 48, 60, 79, 80, 81, 84, 87, 89, 91, 94], "much": [0, 3, 4, 7, 8, 10, 11, 12, 25, 80, 88, 89, 90, 94], "faster": [0, 4, 7, 8, 10, 11, 12, 80, 94], "than": [0, 3, 4, 7, 8, 9, 10, 11, 12, 41, 43, 45, 53, 56, 65, 80, 81, 83, 84, 87, 88, 89, 94], "each": [0, 1, 2, 3, 4, 7, 8, 10, 11, 12, 19, 23, 25, 40, 43, 48, 54, 72, 75, 78, 80, 81, 83, 87, 88, 89, 90, 94, 95], "had": [0, 87, 94], "load": [0, 2, 4, 5, 6, 7, 8, 10, 11, 12, 36, 80, 82, 83, 84, 85, 86, 88, 91], "independ": [0, 4, 7, 8, 10, 11, 12, 43, 53, 80, 81, 84], "imag": [0, 3, 80, 81, 83, 88, 89, 92], "50000": 0, "480": [0, 80], "mask": [0, 1, 2, 3, 4, 7, 8, 10, 11, 12, 66, 78, 82, 85, 86], "dtype": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 19, 20, 22, 23, 26, 36, 37, 40, 42, 43, 44, 45, 46, 48, 54, 60, 62, 63, 66, 72, 78, 79, 80, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95], "bool": [0, 4, 5, 6, 7, 8, 10, 11, 12, 13, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 35, 36, 37, 39, 42, 43, 44, 45, 48, 49, 51, 52, 53, 54, 58, 60, 61, 62, 63, 66, 68, 69, 70, 72, 76, 79, 87, 89], "label": [0, 81, 83], "uint8": [0, 3, 4, 6, 7, 8, 10, 11, 12, 89], "batch_siz": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 32, 36, 37, 40, 42, 43, 44, 45, 46, 48, 49, 54, 60, 62, 63, 65, 66, 69, 72, 75, 76, 78, 79, 80, 81, 83, 87, 88, 89, 90, 91, 92, 93, 94, 95], "devic": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 17, 19, 20, 21, 22, 23, 24, 26, 27, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 48, 53, 54, 60, 62, 63, 66, 72, 78, 79, 81, 83, 84, 87, 88, 89, 90, 92, 93, 94, 95], "cpu": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 19, 20, 22, 23, 36, 37, 40, 41, 42, 43, 44, 45, 46, 48, 54, 60, 62, 63, 66, 78, 79, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95], "idx": [0, 3, 4, 7, 8, 10, 11, 12, 89], "5020": 0, "34572": 0, "11200": 0, "clone": [0, 2, 4, 7, 8, 10, 11, 12, 16, 41, 45, 46, 79, 80, 94], "field": [0, 3, 4, 6, 7, 8, 10, 11, 12, 16, 19, 20, 22, 23, 26, 36, 37, 40, 42, 43, 44, 45, 46, 48, 54, 60, 62, 63, 66, 72, 78, 81, 83, 87, 90, 91, 92, 93, 94, 95], "float32": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 16, 20, 22, 23, 36, 37, 42, 43, 44, 45, 46, 48, 54, 60, 62, 63, 66, 72, 78, 79, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95], "is_shar": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 16, 19, 20, 22, 23, 36, 37, 40, 42, 43, 44, 45, 46, 48, 54, 60, 62, 63, 66, 72, 78, 79, 83, 87, 88, 89, 90, 91, 92, 93, 94, 95], "fals": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 32, 33, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 48, 49, 51, 53, 54, 60, 62, 63, 66, 68, 69, 72, 75, 76, 78, 79, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95], "notic": [0, 3, 4, 7, 8, 10, 11, 12], "syntax": [0, 3, 90, 95], "sugar": 0, "directli": [0, 2, 4, 7, 8, 10, 11, 12, 16, 43, 45, 81, 83, 84, 88, 89, 90, 92], "need": [0, 3, 4, 7, 8, 10, 11, 12, 16, 23, 41, 43, 47, 49, 52, 78, 79, 80, 81, 83, 84, 87, 88, 89, 92, 94, 95], "consider": 0, "take": [0, 3, 4, 7, 8, 10, 11, 12, 19, 23, 41, 42, 43, 47, 48, 49, 53, 56, 63, 78, 81, 83, 84, 87, 88, 89, 92, 93], "account": [0, 4, 7, 8, 10, 11, 12], "current": [0, 4, 6, 7, 8, 10, 11, 12, 13, 25, 44, 80, 83, 88, 91], "compat": [0, 2, 3, 4, 5, 7, 8, 10, 11, 12, 14, 19, 28, 37, 46, 60, 71, 72, 78, 79, 84, 95], "autograd": [0, 4, 7, 8, 10, 11, 12, 84], "simpl": [0, 3, 4, 7, 8, 10, 11, 12, 41, 43, 83, 88], "exampl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 19, 20, 22, 23, 25, 26, 32, 36, 37, 40, 41, 42, 43, 44, 45, 46, 48, 49, 52, 53, 54, 56, 60, 62, 63, 65, 66, 69, 72, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95], "script": [0, 69, 81, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95], "send": [0, 3, 4, 7, 8, 10, 11, 12, 91], "its": [0, 3, 4, 5, 6, 7, 8, 10, 11, 12, 20, 37, 41, 42, 43, 44, 45, 46, 48, 56, 60, 67, 78, 79, 80, 81, 84, 88, 92, 94], "refer": [0, 2, 4, 7, 8, 10, 11, 12, 23, 75, 80, 82, 84, 89], "worker": [0, 3, 4, 5, 6, 7, 8, 10, 11, 12, 39, 80, 89], "respons": [0, 4, 7, 8, 10, 11, 12, 41, 92], "updat": [0, 3, 4, 6, 7, 8, 10, 11, 12, 39, 40, 43, 46, 48, 79, 81, 87, 89, 92, 93, 94], "you": [0, 1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 41, 42, 43, 69, 79, 80, 81, 84, 87, 88, 90, 91, 92, 93, 94, 95], "find": [0, 92], "benchmark": [0, 4, 7, 8, 10, 11, 12, 89, 92], "In": [0, 1, 3, 4, 5, 7, 8, 10, 11, 12, 16, 23, 41, 43, 44, 45, 48, 52, 54, 80, 81, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95], "short": [0, 84], "our": [0, 83, 84, 87, 88, 89, 92], "goal": [0, 4, 7, 8, 10, 11, 12, 84, 87], "show": [0, 3, 12, 16, 84, 89], "handl": [0, 2, 3, 4, 7, 8, 10, 11, 12, 78, 83, 84, 87, 88], "write": [0, 1, 2, 3, 4, 6, 7, 8, 10, 11, 12, 39, 41, 43, 45, 48, 78, 81, 84, 87, 88, 89, 92], "step": [0, 2, 3, 4, 7, 8, 10, 11, 12, 23, 41, 43, 83, 88, 89, 92, 93, 94], "involv": [0, 4, 7, 8, 10, 11, 12], "local": [0, 4, 7, 8, 10, 11, 12], "remot": [0, 4, 5, 7, 8, 10, 11, 12], "execut": [0, 1, 3, 4, 7, 8, 10, 11, 12, 23, 41, 44, 48, 63, 70, 72, 80, 81, 82, 84, 86, 92], "command": [0, 81], "first": [0, 3, 4, 7, 8, 10, 11, 12, 16, 40, 43, 44, 52, 65, 76, 79, 80, 81, 83, 87, 89, 92, 93, 94, 95], "function": [0, 3, 4, 6, 7, 8, 10, 11, 12, 16, 19, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 56, 59, 60, 67, 68, 75, 78, 79, 80, 83, 84, 87, 88, 92, 93, 94], "specif": [0, 5, 45, 84], "fill": [0, 4, 5, 7, 8, 10, 11, 12, 65, 93], "def": [0, 1, 3, 4, 7, 8, 10, 11, 12, 23, 25, 41, 43, 48, 52, 63, 69, 72, 78, 79, 81, 83, 84, 87, 88, 89, 92, 93], "fill_tensordict": 0, "memmap": [0, 4, 6, 7, 8, 10, 11, 12, 36, 68, 79, 81, 83, 88, 91], "ones": [0, 3, 4, 5, 7, 8, 9, 10, 11, 12, 25, 44, 45, 46, 48, 49, 52, 65, 72, 79, 80, 90, 94, 95], "640": 0, "return": [0, 1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 16, 19, 22, 23, 29, 32, 33, 37, 39, 41, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 60, 62, 63, 64, 65, 66, 69, 72, 73, 74, 75, 76, 78, 79, 81, 83, 84, 87, 88, 89, 90, 92, 93, 94, 95], "fill_tensordict_cp": 0, "cloudpicklewrapp": 0, "ensur": [0, 4, 5, 7, 8, 10, 11, 12, 76, 89], "serializ": [0, 4, 7, 8, 10, 11, 12], "next": [0, 89, 92], "make": [0, 2, 3, 4, 7, 8, 10, 11, 12, 25, 38, 41, 42, 43, 78, 79, 81, 84, 89, 90, 92, 95], "point": [0, 3, 4, 7, 8, 10, 11, 12, 41, 43, 44, 52, 76, 78, 84], "hard": 0, "through": [0, 3, 4, 5, 7, 8, 10, 11, 12, 23, 43, 44, 48, 50, 52, 62, 69, 72, 78, 84, 89, 92, 93], "regular": [0, 3, 4, 7, 8, 10, 11, 12, 41, 43, 44, 45, 78, 80, 81, 84, 87, 89, 92, 94, 95], "tensorpip": 0, "1000": [0, 3, 43], "final": [0, 3, 4, 6, 7, 8, 10, 11, 12, 44, 78, 81, 84, 87], "still": [0, 4, 7, 8, 10, 11, 12, 45, 46, 48, 87, 90, 91, 92], "main": [0, 2, 4, 5, 7, 8, 10, 11, 12, 43, 80, 81, 84, 87, 89], "been": [0, 4, 7, 8, 10, 11, 12, 13, 70, 78, 79, 81, 84, 87, 90, 91, 92, 93], "written": [0, 3, 4, 6, 7, 8, 10, 11, 12, 36, 43, 45, 46, 48, 49, 52, 54, 66, 81, 84, 92, 93], "6": [0, 3, 4, 7, 8, 10, 11, 12, 55, 65, 66, 75, 76, 79, 80, 87, 88, 94, 95], "7": [0, 4, 7, 8, 10, 11, 12, 75, 76, 83, 87, 88], "998": 0, "t0": [0, 83, 84, 88, 89], "time": [0, 3, 4, 7, 8, 10, 11, 12, 23, 41, 72, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95], "out": [0, 1, 3, 4, 6, 7, 8, 10, 11, 12, 14, 20, 34, 35, 36, 37, 38, 41, 45, 48, 60, 63, 66, 71, 72, 75, 84, 89, 92], "rpc_sync": 0, "worker_info": 0, "arg": [0, 1, 4, 5, 6, 7, 8, 10, 11, 12, 41, 42, 43, 44, 45, 46, 47, 48, 49, 63, 84], "print": [0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 19, 20, 22, 23, 36, 37, 40, 43, 44, 45, 48, 52, 53, 54, 56, 60, 62, 63, 65, 66, 67, 72, 73, 74, 78, 79, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95], "elaps": 0, "all": [0, 1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 16, 25, 26, 28, 36, 39, 40, 41, 43, 44, 47, 48, 49, 52, 53, 56, 63, 65, 66, 76, 79, 80, 81, 82, 84, 85, 87, 90, 91, 92, 93, 94, 95], "although": [0, 2, 4, 7, 8, 10, 11, 12, 43, 47, 49, 72, 84], "entir": [0, 1, 4, 7, 8, 10, 11, 12, 44, 49, 81, 88, 89], "origin": [0, 3, 4, 5, 6, 7, 8, 10, 11, 12, 23, 25, 43, 46, 48, 78, 80, 81, 84, 87, 90, 91, 94, 95], "snippet": [0, 41], "fast": [0, 4, 7, 8, 10, 11, 12, 41, 81, 91], "even": [0, 3, 4, 7, 8, 10, 11, 12, 44, 45, 65, 79, 87, 89, 94], "so": [0, 2, 4, 6, 7, 8, 10, 11, 12, 39, 44, 45, 48, 65, 81, 83, 88, 89, 90, 92, 94], "locat": [0, 4, 5, 6, 7, 8, 10, 11, 12, 39, 81, 84, 91], "alreadi": [0, 4, 5, 6, 7, 8, 10, 11, 12, 39, 42, 43, 63, 81, 83, 88, 90, 94], "beforehand": 0, "see": [0, 2, 3, 4, 5, 7, 8, 10, 11, 12, 23, 34, 38, 41, 43, 45, 56, 63, 84, 87, 88, 89, 90, 91, 92, 94], "torchrl": [0, 3, 78], "s": [0, 3, 4, 6, 7, 8, 10, 11, 12, 19, 23, 25, 39, 42, 43, 45, 48, 63, 67, 72, 78, 81, 83, 84, 87, 88, 89, 94], "replai": 0, "buffer": [0, 4, 6, 7, 8, 10, 11, 12, 22, 41, 45, 48, 53, 80], "learn": [0, 4, 7, 8, 10, 11, 12, 23, 54, 87, 89, 90, 91, 92, 93, 94, 95], "contain": [0, 3, 4, 7, 8, 10, 11, 12, 23, 32, 40, 43, 44, 45, 47, 52, 54, 66, 69, 75, 76, 79, 80, 81, 83, 88, 89, 90, 93, 94], "addit": [0, 3, 4, 7, 8, 10, 11, 12, 25, 44, 54, 78, 80, 89, 94], "configur": [0, 4, 7, 8, 10, 11, 12, 19, 44], "beyond": 0, "purpos": [0, 2, 3, 4, 7, 8, 10, 11, 12, 48, 49, 78, 81, 84], "support": [1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 36, 41, 44, 45, 46, 48, 79, 81, 84, 87, 89, 91, 94], "creat": [1, 2, 4, 5, 6, 7, 8, 10, 11, 12, 19, 25, 28, 34, 36, 37, 43, 44, 45, 47, 48, 60, 70, 72, 79, 81, 83, 84, 87, 88, 89, 90, 91, 92, 94, 95], "fx": [1, 84], "graph": [1, 3, 4, 7, 8, 10, 11, 12, 23, 41, 46, 48, 63, 78, 84], "import": [1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 16, 19, 22, 23, 36, 40, 42, 43, 44, 45, 46, 48, 49, 53, 56, 62, 63, 65, 72, 78, 79, 80, 81, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95], "symbolic_trac": 1, "tensordict": [1, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 82, 85, 86, 88, 89, 95], "prototyp": [1, 41, 78, 79, 81], "instead": [1, 3, 4, 5, 7, 8, 10, 11, 12, 16, 23, 43, 47, 49, 52, 79, 84, 89, 92, 94], "highli": [1, 2], "experiment": [1, 43, 79], "subject": [1, 79], "chang": [1, 4, 7, 8, 10, 11, 12, 41, 44, 45, 46, 48, 63, 70, 79, 84, 90], "caution": [1, 4, 7, 8, 10, 11, 12, 19, 72], "rais": [1, 4, 5, 6, 7, 8, 10, 11, 12, 19, 39, 43, 44, 69, 75, 76, 81], "issu": [1, 79, 84], "try": [1, 4, 6, 7, 8, 10, 11, 12, 26, 44, 52, 87, 92, 94], "encount": [1, 44, 69], "problem": [1, 3, 78], "ll": [1, 83, 87, 88, 89], "illustr": [1, 81], "overview": [1, 2], "inspect": 1, "gener": [1, 2, 3, 4, 7, 8, 10, 11, 12, 23, 41, 52, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95], "code": [1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 41, 48, 63, 70, 78, 79, 81, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95], "nn": [1, 3, 4, 7, 8, 10, 11, 12, 22, 23, 41, 43, 44, 45, 46, 47, 48, 49, 51, 62, 77, 79, 81, 83, 84, 88, 89, 90, 92], "net": [1, 3, 12, 42, 43, 46, 78, 83, 88, 92], "modul": [1, 2, 3, 4, 7, 8, 10, 11, 12, 22, 23, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 56, 63, 64, 78, 80, 81, 82, 83, 85, 86, 88, 89, 90], "__init__": [1, 3, 12, 78, 83, 88, 89, 92], "self": [1, 3, 4, 6, 7, 8, 10, 11, 12, 44, 46, 52, 63, 72, 78, 79, 83, 84, 88, 89, 92], "super": [1, 3, 12, 78, 83, 88, 89, 92], "linear": [1, 3, 4, 7, 8, 10, 11, 12, 23, 42, 46, 48, 53, 56, 78, 83, 84, 88, 90, 92], "lazylinear": [1, 3], "forward": [1, 3, 12, 43, 44, 45, 46, 47, 48, 49, 52, 63, 65, 78, 83, 84, 88, 89, 92], "x": [1, 3, 4, 7, 8, 10, 11, 12, 19, 23, 26, 41, 44, 45, 46, 48, 49, 72, 78, 79, 80, 81, 83, 84, 87, 88, 89, 92], "logit": [1, 3, 54, 57, 62, 83, 88], "sigmoid": [1, 3, 4, 7, 8, 10, 11, 12], "in_kei": [1, 3, 4, 7, 8, 10, 11, 12, 41, 42, 43, 44, 45, 46, 48, 49, 52, 63, 78, 84, 92], "input": [1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 16, 19, 32, 34, 37, 38, 41, 42, 43, 44, 45, 46, 48, 49, 52, 54, 56, 60, 63, 71, 73, 75, 76, 78, 84, 87, 88], "out_kei": [1, 3, 4, 7, 8, 10, 11, 12, 41, 42, 43, 44, 45, 46, 48, 49, 52, 63, 78, 84, 92], "output": [1, 3, 4, 7, 8, 10, 11, 12, 19, 23, 41, 43, 44, 45, 46, 48, 49, 52, 54, 63, 76, 78, 79, 92], "probabl": [1, 3, 4, 7, 8, 10, 11, 12, 43, 44, 51, 54, 62, 78, 92], "graph_modul": [1, 84], "user": [1, 3, 4, 7, 8, 10, 11, 12, 41, 63, 78, 79, 81, 84, 92, 94], "placehold": [1, 7], "target": [1, 4, 7, 8, 10, 11, 12, 73, 74, 75, 78, 83, 88, 89], "getitem": [1, 84], "call_funct": 1, "oper": [1, 2, 4, 6, 7, 8, 10, 11, 12, 23, 39, 41, 47, 54, 72, 77, 79, 81, 87, 89, 90, 92, 94], "kwarg": [1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 57, 60, 63, 84], "call_modul": 1, "none": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 53, 54, 55, 56, 57, 58, 60, 62, 63, 66, 68, 71, 72, 78, 79, 80, 81, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95], "result": [1, 3, 4, 6, 7, 8, 10, 11, 12, 19, 22, 23, 39, 44, 48, 52, 54, 79, 80, 81, 87, 89, 93, 94], "same": [1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 16, 23, 41, 45, 46, 48, 63, 66, 69, 72, 75, 76, 79, 80, 81, 83, 84, 88, 89, 90, 91, 92, 93, 94, 95], "32": [1, 3, 4, 7, 8, 10, 11, 12, 42, 78, 81, 87, 89], "100": [1, 3, 12, 78, 83, 88, 89, 90], "module_out": 1, "tensordict_out": [1, 41, 43, 44, 45, 46, 48, 92], "graph_module_out": 1, "assert": [1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 23, 25, 26, 36, 41, 45, 49, 52, 53, 56, 72, 76, 79, 80, 81, 87, 90, 92, 93, 94], "also": [1, 3, 4, 6, 7, 8, 10, 11, 12, 20, 23, 36, 37, 43, 44, 45, 46, 48, 52, 60, 62, 63, 72, 75, 78, 79, 80, 81, 83, 84, 87, 88, 89, 90, 91, 92, 94, 95], "case": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 16, 23, 36, 40, 41, 43, 44, 45, 48, 54, 77, 80, 84, 87, 88, 89, 90, 92, 94], "elimin": [1, 84, 89], "intermedi": [1, 3, 4, 7, 8, 10, 11, 12, 44, 46, 48, 78, 84, 92], "demonstr": [1, 83, 88, 89, 93], "sequenti": [1, 3, 4, 7, 8, 10, 11, 12, 42, 44, 46, 48, 78, 83, 88, 89, 90, 92], "input_s": [1, 3, 78], "hidden_s": [1, 3, 78], "50": [1, 3, 4, 7, 8, 10, 11, 12, 75, 76, 78, 83, 87, 90], "output_s": [1, 3, 4, 7, 8, 10, 11, 12, 78], "10": [1, 3, 4, 7, 8, 10, 11, 12, 25, 26, 42, 54, 62, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 90, 91, 93], "fc1": [1, 3, 78], "fc2": [1, 3, 78], "relu": [1, 3, 42, 46, 53, 56, 78, 83, 84, 88, 92], "masker": [1, 3, 78], "softmax": [1, 3, 4, 7, 8, 10, 11, 12, 78], "dim": [1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 16, 20, 34, 37, 38, 60, 71, 75, 76, 78, 79, 87, 94], "_0_fc1": 1, "getattr": [1, 3, 4, 6, 7, 8, 10, 11, 12, 84], "0": [1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 16, 19, 22, 23, 26, 28, 34, 36, 38, 39, 40, 43, 44, 46, 48, 50, 53, 56, 62, 65, 66, 68, 69, 71, 75, 76, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "_0_fc2": 1, "getitem_1": [1, 84], "mul": [1, 4, 7, 8, 10, 11, 12, 84], "bit": [1, 3, 83], "complic": [1, 46, 48], "visual": 1, "follow": [1, 3, 6, 12, 41, 46, 48, 63, 79, 80, 81, 84, 87, 89, 91, 95], "requir": [1, 3, 4, 7, 8, 10, 11, 12, 23, 38, 41, 44, 45, 48, 49, 80, 81, 87, 91, 92, 94], "pydot": 1, "visualis": 1, "graph_draw": 1, "fxgraphdraw": 1, "g": [1, 4, 6, 7, 8, 10, 11, 12, 39, 40, 42, 43, 83, 84, 88, 92], "open": [1, 4, 6, 7, 8, 10, 11, 12, 36, 92], "svg": 1, "wb": [1, 4, 7, 8, 10, 11, 12], "f": [1, 4, 7, 8, 10, 11, 12, 40, 44, 81, 83, 84, 88, 89, 90, 92], "get_dot_graph": 1, "create_svg": 1, "which": [1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 16, 19, 22, 23, 36, 43, 48, 52, 62, 65, 75, 76, 78, 79, 80, 81, 84, 87, 90, 91, 92, 93, 94, 95], "dictionari": [2, 3, 4, 6, 7, 8, 10, 11, 12, 20, 25, 28, 37, 40, 43, 45, 54, 60, 79, 80, 87, 90], "like": [2, 3, 4, 7, 8, 10, 11, 12, 23, 41, 43, 72, 79, 80, 83, 84, 88, 89, 90, 91, 92, 94], "inherit": [2, 4, 7, 8, 9, 10, 11, 12, 79, 80, 87], "properti": [2, 4, 5, 6, 7, 8, 10, 11, 12, 43, 44, 70], "tensor": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 19, 20, 23, 25, 30, 32, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 69, 72, 73, 74, 75, 76, 77, 78, 79, 81, 83, 84, 87, 88, 89, 90, 92, 93, 94, 95], "index": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 72, 79, 80, 82, 85, 86, 87, 91], "cast": [2, 4, 6, 7, 8, 10, 11, 12, 19, 36, 72, 77], "etc": [2, 10, 12, 80, 81, 83, 84, 88], "pypi": 2, "about": [2, 49, 84, 87, 89], "instruct": 2, "dedic": [2, 80, 81, 84, 88, 89], "section": [2, 3], "below": [2, 3, 4, 7, 8, 10, 11, 12, 23, 41, 45, 63, 79, 84, 87, 92, 94], "pip": 2, "base": [2, 3, 4, 7, 8, 9, 10, 11, 12, 43, 44, 45, 46, 48, 78, 79, 83, 84, 88, 89], "readabl": 2, "modular": [2, 48], "abstract": [2, 11], "awai": 2, "tailor": 2, "i": [2, 3, 4, 7, 8, 10, 11, 12, 43, 56, 81, 83, 84, 87, 88, 89, 92, 93], "enumer": [2, 3, 12, 83, 88, 89], "model": [2, 3, 4, 6, 7, 8, 10, 11, 12, 22, 23, 36, 54, 78, 80, 81, 89, 92], "loss": [2, 3, 83, 88], "loss_modul": [2, 3], "backward": [2, 3, 4, 7, 8, 10, 11, 12, 23, 41, 83, 88], "optim": [2, 3, 4, 7, 8, 10, 11, 12, 23, 41, 81], "zero_grad": [2, 3, 4, 7, 8, 10, 11, 12, 23, 41, 83, 88], "With": [2, 3, 4, 7, 8, 10, 11, 12, 23], "level": [2, 3, 4, 7, 8, 10, 11, 12, 19, 25, 90, 92], "recycl": 2, "train": [2, 3, 4, 6, 7, 8, 10, 11, 12, 39, 83, 84, 88, 89], "loop": [2, 3, 4, 6, 7, 8, 10, 11, 12, 39, 83, 88, 89, 93], "heterogen": [2, 4, 7, 8, 10, 11, 12], "task": [2, 3, 87], "individu": [2, 54, 80, 83, 88], "collect": [2, 3, 4, 7, 8, 10, 11, 12, 41, 54, 79, 87, 89, 91], "transform": [2, 4, 7, 8, 10, 11, 12, 25, 45, 49, 50, 70, 78, 81, 83, 88, 89, 92], "predict": [2, 78, 88], "comput": [2, 3, 4, 7, 8, 10, 11, 12, 23, 37, 43, 44, 47, 48, 49, 50, 60, 64, 78, 80, 84, 89, 94], "hand": [2, 81], "impact": [2, 4, 7, 8, 10, 11, 12, 84, 90], "other": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 39, 41, 44, 46, 48, 52, 53, 56, 72, 76, 79, 80, 81, 84, 89, 94], "abov": [2, 12, 81, 89, 91, 93], "across": [2, 3, 4, 7, 8, 10, 11, 12, 52, 80, 87], "classif": 2, "segment": 2, "among": [2, 16], "mani": [2, 3, 4, 7, 8, 10, 11, 12, 19, 72, 79, 80, 84, 87, 95], "releas": [2, 44, 45], "sync": 2, "sure": [2, 3, 4, 7, 8, 10, 11, 12, 41, 79], "alwai": [2, 4, 7, 8, 10, 11, 12, 46, 92, 94], "enjoi": 2, "latest": 2, "featur": [2, 4, 7, 8, 10, 11, 12, 23, 41, 43, 45, 46, 48, 78, 79, 80, 81, 84, 87], "librari": [2, 3, 80, 81, 84], "most": [2, 3, 4, 7, 8, 10, 11, 12, 41, 84, 87], "recent": 2, "version": [2, 3, 4, 7, 8, 9, 10, 11, 12, 23, 67, 84, 92, 94], "core": [2, 81, 84, 89], "guarante": [2, 4, 6, 7, 8, 10, 11, 12, 39, 94, 95], "13": [2, 4, 7, 8, 10, 11, 12, 87, 88], "nightli": 2, "git": 2, "re": [2, 3, 4, 7, 8, 10, 11, 12, 41, 43, 64, 81], "willing": 2, "contribut": [2, 44], "cd": 2, "path": [2, 4, 5, 6, 7, 8, 10, 11, 12, 35, 36, 54, 79, 81, 89, 91], "root": [2, 4, 7, 8, 10, 11, 12, 54, 62, 83, 88, 89, 91, 94], "http": [2, 58, 89], "github": [2, 89], "com": [2, 89], "python": [2, 9, 45, 79, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95], "setup": 2, "py": [2, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "develop": [2, 3], "manipul": [2, 3, 80, 82, 85, 86, 87, 95], "kei": [2, 3, 4, 6, 7, 8, 10, 11, 12, 16, 25, 28, 37, 40, 41, 43, 44, 45, 46, 48, 49, 52, 54, 60, 63, 66, 75, 76, 78, 80, 81, 82, 83, 85, 86, 87, 93, 94], "pre": [2, 12, 72, 79, 81, 82, 83, 85, 86, 88, 89], "alloc": [2, 4, 6, 7, 8, 10, 11, 12, 79, 81, 82, 85, 86], "memori": [2, 4, 5, 6, 7, 8, 10, 11, 12, 23, 36, 39, 48, 77, 79, 82, 83, 84, 85, 86, 87, 88, 89, 92], "simplifi": [2, 80, 82, 84, 85, 86, 87], "manag": [2, 4, 7, 8, 10, 11, 12, 63, 69, 77, 82, 83, 84, 85, 86, 88, 92, 94], "build": [2, 4, 5, 7, 8, 10, 11, 12, 25, 43, 44, 49, 78, 79, 82, 84, 85, 86, 92], "stream": [2, 4, 7, 8, 10, 11, 12, 82, 85, 86], "tensordictmodul": [2, 41, 42, 43, 44, 46, 47, 48, 49, 52, 77, 82, 85, 86], "export": [2, 3, 4, 7, 8, 10, 11, 12, 82, 85, 86, 92], "tensorclass": [2, 4, 6, 7, 8, 10, 11, 12, 19, 32, 77, 82, 85, 86], "motiv": 2, "escap": 2, "non": [2, 4, 6, 7, 8, 10, 11, 12, 13, 23, 25, 39, 40, 41, 43, 44, 48, 56, 62, 69, 79, 81, 89, 92, 94], "stack": [2, 4, 6, 7, 8, 10, 11, 12, 13, 16, 23, 34, 38, 39, 40, 42, 44, 48, 49, 66, 69, 79, 80, 81, 89], "dimens": [2, 4, 6, 7, 8, 10, 11, 12, 14, 16, 19, 52, 54, 65, 66, 71, 75, 76, 87, 92, 93, 95], "nest": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 20, 25, 36, 37, 39, 40, 48, 52, 54, 60, 62, 66, 72, 79, 81, 87, 94], "lazi": [2, 4, 7, 8, 10, 11, 12, 16, 23, 33, 34, 38, 44, 48, 70, 81, 87, 94], "evalu": [2, 12, 44], "distribut": [2, 3, 4, 7, 8, 10, 11, 12, 43, 44, 48, 62, 77, 80, 84, 89], "set": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 23, 36, 39, 43, 44, 45, 46, 48, 63, 69, 70, 72, 79, 80, 81, 89, 91, 94], "map": [2, 4, 5, 6, 7, 8, 10, 11, 12, 36, 39, 43, 45, 48, 53, 54, 56, 77, 79, 83, 84, 88, 89], "node": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 39, 63, 78], "trace": 2, "tensordictsequenti": [2, 3, 42, 44, 46, 49, 77, 78, 84, 92], "save": [2, 3, 4, 6, 7, 8, 10, 11, 12, 36, 39, 79, 80, 83, 88, 89, 91], "memmori": 2, "memorymappedtensor": [2, 4, 7, 8, 10, 11, 12, 80, 83, 88, 89, 91], "torchsnapshot": 2, "api": [2, 3, 4, 7, 8, 10, 11, 12, 25, 41, 45, 46, 62, 81, 92, 94], "packag": [2, 3, 77, 84], "tensordictbas": [2, 4, 6, 7, 8, 10, 12, 16, 20, 21, 24, 26, 27, 32, 35, 36, 39, 41, 43, 44, 45, 46, 47, 48, 49, 52, 54, 66, 68, 73, 75, 76, 77, 81, 87], "lazystackedtensordict": [2, 3, 7, 8, 10, 11, 12, 16, 23, 77, 81, 87, 94], "persistenttensordict": [2, 4, 7, 10, 11, 12, 77], "tensordictparam": [2, 4, 7, 8, 10, 11, 22, 23, 43, 77], "get_defaults_to_non": [2, 77], "constructor": [2, 4, 7, 8, 10, 11, 12, 43, 44, 48, 52, 72, 77, 84], "handler": [2, 5, 77], "context": [2, 3, 4, 7, 8, 10, 11, 12, 63, 69, 77, 84, 89, 92, 94], "pointwis": [2, 4, 7, 8, 10, 11, 12, 77], "util": [2, 4, 7, 8, 10, 11, 12, 25, 73, 74, 75, 76, 77, 81, 83, 84, 88, 89, 91, 92, 94], "tensordictmodulebas": [2, 41, 44, 48, 63, 77, 92], "probabilistictensordictmodul": [2, 44, 48, 54, 77, 78, 84], "probabilistictensordictsequenti": [2, 43, 48, 54, 77, 78, 92], "tensordictmodulewrapp": [2, 77], "cudagraphmodul": [2, 77], "wrapmodul": [2, 77], "set_composite_lp_aggreg": [2, 51, 54, 77], "composite_lp_aggreg": [2, 43, 54, 62, 77], "ensembl": [2, 3, 42, 77], "compil": [2, 4, 7, 8, 10, 11, 12, 14, 41, 71, 77, 84, 92], "serial": [2, 4, 5, 7, 8, 10, 11, 12, 77, 80, 81, 84], "edg": [2, 77, 84], "auto": [2, 4, 7, 8, 10, 11, 12, 19, 77], "search": [2, 44], "page": [2, 3], "easi": [3, 8, 45, 89, 92], "organis": 3, "reusabl": [3, 92], "ve": [3, 87], "spun": 3, "separ": [3, 4, 7, 8, 10, 11, 12, 25, 52, 81, 87, 90, 92], "primarili": 3, "multipl": [3, 4, 5, 7, 8, 9, 10, 11, 12, 44, 54, 78, 79, 80, 81, 84, 89, 93, 94, 95], "mostli": 3, "relat": [3, 88, 89], "design": [3, 4, 7, 8, 10, 11, 12, 25, 41, 87, 92], "serialis": [3, 4, 6, 7, 8, 10, 11, 12, 39], "transmit": 3, "ship": 3, "own": [3, 12, 81, 84], "func": [3, 4, 7, 8, 10, 11, 12, 41, 43, 48, 49, 94], "aim": [3, 4, 7, 8, 10, 11, 12], "paramet": [3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 16, 19, 22, 23, 28, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 63, 65, 66, 69, 73, 74, 75, 76, 78, 80, 84, 90, 92], "easier": [3, 81], "On": [3, 81], "give": [3, 4, 7, 8, 10, 11, 12, 41, 89], "what": [3, 4, 7, 8, 10, 11, 12, 46, 49, 52, 78, 81, 84, 92, 93], "usabl": 3, "paradigm": 3, "sl": 3, "ssl": 3, "ul": 3, "rl": 3, "tool": [3, 81, 87], "littl": [3, 4, 7, 8, 10, 11, 12, 89], "effort": [3, 83], "multiprocess": [3, 4, 7, 8, 10, 11, 12, 80], "seamlessli": [3, 4, 7, 8, 10, 11, 12], "dispatch": [3, 4, 7, 8, 10, 11, 12, 41, 45, 46, 48, 84, 92], "datapoint": [3, 81], "split": [3, 4, 7, 8, 10, 11, 12, 56, 79, 84], "arang": [3, 4, 7, 8, 10, 11, 12, 87, 89, 94], "rang": [3, 4, 7, 8, 10, 11, 12, 23, 81, 83, 87, 88, 92, 93], "pipe": 3, "tree_map": [3, 4, 7, 8, 10, 11, 12, 25], "too": [3, 4, 5, 7, 8, 10, 11, 12, 37, 41, 46, 48, 60, 81, 87, 92], "greater": [3, 4, 7, 8, 10, 11, 12], "degre": [3, 4, 7, 8, 10, 11, 12], "complex": [3, 4, 7, 8, 10, 11, 12, 78, 81, 87, 89, 92], "td": [3, 4, 6, 7, 8, 10, 11, 12, 16, 25, 26, 36, 37, 40, 41, 43, 44, 45, 46, 48, 49, 60, 65, 75, 76, 78, 79, 80, 81, 87, 92], "11": [3, 4, 7, 8, 10, 11, 12, 75, 78, 82, 86, 87, 88], "b": [3, 4, 6, 7, 8, 10, 11, 12, 16, 19, 20, 36, 37, 42, 46, 48, 52, 58, 60, 65, 66, 78, 80, 81, 88, 90, 91, 93, 94, 95], "regular_dict": 3, "td0": [3, 4, 7, 8, 10, 11, 12, 16, 40, 81], "td1": [3, 4, 7, 8, 10, 11, 12, 16, 40, 80, 81], "td2": [3, 4, 7, 8, 10, 11, 12, 40, 80, 95], "unbind": [3, 4, 5, 6, 7, 8, 10, 11, 12], "similar": [3, 4, 6, 7, 8, 10, 11, 12, 39, 43, 72, 78, 79, 80, 81, 83, 84, 88, 94], "structur": [3, 4, 6, 7, 8, 10, 11, 12, 16, 22, 23, 25, 26, 36, 39, 66, 78, 80, 81, 88, 89, 90, 91, 92, 94, 95], "pytre": [3, 4, 7, 8, 10, 11, 12, 25, 84], "lambda": [3, 4, 7, 8, 10, 11, 12, 40, 41, 44, 45, 46, 48, 49, 83, 84, 87, 88, 92], "regular_dict1": 3, "regular_dict2": 3, "regular_dict3": 3, "compel": 3, "c": [3, 4, 6, 7, 8, 10, 11, 12, 20, 36, 37, 40, 46, 48, 52, 60, 80, 81, 90, 91, 94], "decompos": [3, 52], "three": [3, 81, 84, 92], "similarli": [3, 12, 48, 81, 90], "after": [3, 4, 6, 7, 8, 10, 11, 12, 36, 48, 80, 81, 84, 89, 92, 93, 94], "appli": [3, 4, 7, 8, 10, 11, 12, 19, 43, 80, 87, 89, 94, 95], "quickli": 3, "becom": 3, "significantli": [3, 4, 7, 8, 10, 11, 12], "cumbersom": 3, "work": [3, 4, 7, 8, 10, 11, 12, 16, 20, 37, 46, 48, 52, 60, 78, 79, 80, 81, 87, 89, 90, 94, 95], "naiv": 3, "want": [3, 4, 7, 8, 10, 11, 12, 46, 48, 52, 63, 84, 88, 90, 91, 92, 93, 94, 95], "rather": [3, 4, 7, 8, 10, 11, 12, 41, 81, 83, 84, 88, 89], "unbound": [3, 4, 6, 7, 8, 10, 11, 12], "dict": [3, 4, 6, 7, 8, 10, 11, 12, 20, 22, 23, 25, 37, 40, 43, 45, 54, 60, 79, 81, 87, 90], "To": [3, 4, 7, 8, 10, 11, 12, 42, 43, 44, 63, 65, 79, 81, 84, 87, 90, 91, 92, 94], "instanti": [3, 4, 6, 7, 8, 10, 11, 12, 48, 90, 91], "specifi": [3, 4, 5, 7, 8, 10, 11, 12, 13, 28, 37, 43, 44, 45, 53, 54, 56, 60, 75, 76, 81, 88, 89, 90, 91, 92, 93, 94, 95], "valu": [3, 4, 6, 7, 8, 10, 11, 12, 28, 29, 39, 40, 41, 43, 44, 45, 46, 48, 50, 53, 56, 59, 61, 62, 63, 65, 66, 69, 79, 80, 84, 87, 91, 92, 93], "pair": [3, 4, 6, 7, 8, 10, 11, 12, 43], "well": [3, 12, 43, 76, 83, 87, 88, 89, 92], "lead": [3, 4, 7, 10, 11, 12, 20, 37, 52, 60, 79, 94, 95], "ani": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 17, 19, 28, 32, 36, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 54, 72, 79, 80, 81, 89, 90, 92, 94], "must": [3, 4, 5, 7, 8, 10, 11, 12, 41, 43, 45, 52, 54, 65, 76, 80, 84, 89, 90, 91, 92, 94, 95], "zero": [3, 4, 5, 6, 7, 8, 10, 11, 12, 16, 25, 36, 45, 46, 48, 50, 52, 63, 66, 72, 73, 74, 80, 81, 89, 90, 93, 95], "retriev": [3, 4, 6, 7, 8, 10, 11, 12, 16, 23, 43, 44, 83, 88, 90], "along": [3, 4, 6, 7, 8, 10, 11, 12, 14, 43, 65, 71, 75, 76, 78, 87, 94, 95], "possibl": [3, 4, 7, 8, 10, 11, 12, 25, 37, 60, 72, 78, 79, 80, 81, 84, 90, 92], "obtain": [3, 7, 44, 72, 81, 84, 89, 90], "congruent": 3, "just": [3, 4, 7, 8, 10, 11, 12, 23, 41, 48, 49, 80, 81, 83, 87, 88, 89, 92, 94], "few": [3, 4, 7, 8, 10, 11, 12, 23, 41, 80, 81, 89], "charact": [3, 4, 7, 8, 10, 11, 12], "nth": 3, "ellipsi": [3, 4, 7, 8, 10, 11, 12, 95], "sub_tensordict": 3, "inplac": [3, 4, 6, 7, 8, 10, 11, 12, 19, 39, 44, 45, 49, 90], "true": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 19, 22, 23, 29, 32, 33, 36, 37, 39, 42, 43, 44, 45, 46, 48, 49, 52, 53, 54, 60, 61, 62, 63, 66, 69, 72, 75, 76, 78, 81, 83, 87, 88, 89, 90, 91, 92, 94], "set_": [3, 4, 7, 8, 10, 11, 12, 90], "content": [3, 4, 5, 6, 7, 8, 10, 11, 12, 72, 79, 80, 81, 87, 88, 89, 91, 94], "fault": 3, "toler": [3, 4, 7, 8, 10, 11, 12, 55], "latter": [3, 12, 43, 45, 47, 49], "match": [3, 4, 5, 7, 8, 10, 11, 12, 20, 25, 37, 41, 42, 43, 44, 45, 48, 52, 54, 55, 60, 66, 73, 74, 79, 80, 92], "found": [3, 4, 6, 7, 8, 10, 11, 12, 43, 44, 46, 48, 87, 89, 90], "new": [3, 4, 5, 6, 7, 8, 10, 11, 12, 19, 23, 28, 39, 44, 45, 46, 48, 49, 65, 81, 84, 87, 90, 91, 92, 94, 95], "now": [3, 16, 78, 81, 84, 87, 89, 90, 92, 94], "place": [3, 4, 6, 7, 8, 10, 11, 12, 19, 39, 46, 48, 49, 54, 81, 84, 91, 92, 93], "onto": [3, 4, 5, 6, 7, 8, 10, 11, 12, 16, 39, 53, 56, 81, 91], "particular": [3, 12, 90, 94], "cuda": [3, 4, 7, 8, 10, 11, 12, 41, 83, 88, 89, 91], "reshap": [3, 4, 7, 8, 10, 11, 12, 49, 72, 79], "includ": [3, 4, 7, 8, 10, 11, 12, 25, 70, 79, 80, 84, 90, 92, 94], "squeez": [3, 4, 7, 8, 10, 11, 12, 70, 79, 83, 88, 89], "unsqueez": [3, 4, 7, 8, 10, 11, 12, 70, 72, 89], "view": [3, 4, 7, 8, 10, 11, 12, 70, 81, 89], "permut": [3, 4, 7, 8, 10, 11, 12, 70, 92], "cat": [3, 4, 7, 8, 10, 11, 12, 79, 80, 94], "present": [3, 4, 6, 7, 8, 10, 11, 12, 40, 44, 45, 48, 58, 63, 75, 94], "usual": [3, 4, 7, 8, 10, 11, 12, 44], "solut": [3, 41, 92], "wa": [3, 4, 7, 8, 10, 11, 12, 46, 94], "mai": [3, 4, 6, 7, 8, 9, 10, 11, 12, 19, 39, 41, 43, 44, 46, 48, 54, 72, 79, 81, 84, 87, 92, 94], "desir": [3, 4, 7, 8, 10, 11, 12, 23, 43, 69, 74, 79, 84, 91], "enforc": [3, 4, 7, 8, 10, 11, 12, 72, 79], "consist": [3, 12, 76, 80, 94], "dure": [3, 4, 7, 8, 10, 11, 12, 41, 44, 70, 83, 84, 89, 90, 93], "wrap": [3, 12, 41, 42, 43, 44, 45, 47, 49, 52, 78, 84, 92], "unbatchedtensor": 3, "ignor": [3, 4, 7, 8, 10, 11, 12, 23, 43, 44, 47, 49, 51, 54, 63, 78, 80], "flexibl": [3, 62, 78, 81, 89, 92], "arbitrari": [3, 4, 7, 8, 10, 11, 12, 81, 92], "reshaped_td": 3, "power": [3, 4, 7, 8, 10, 11, 12, 80, 87, 92], "guid": 3, "nontensordata": [3, 4, 7, 8, 9, 10, 11, 12, 19, 25, 69, 81], "string": [3, 4, 7, 8, 9, 10, 11, 12, 41, 45, 46, 48, 52, 66, 84, 90], "As": [3, 79, 81, 84, 87, 88, 89, 92, 93, 94, 95], "get": [3, 4, 6, 7, 8, 10, 11, 12, 13, 22, 23, 29, 36, 43, 45, 46, 48, 65, 78, 79, 84, 87, 89, 92, 93, 94], "wherea": [3, 4, 7, 8, 10, 11, 12, 19], "assum": [3, 4, 5, 7, 8, 10, 11, 12, 41, 48, 52, 75, 89], "element": [3, 4, 6, 7, 8, 10, 11, 12, 16, 41, 43, 45, 52, 75, 76, 80, 87, 94], "assign": [3, 4, 6, 7, 8, 10, 11, 12, 72, 79, 92, 93], "list": [3, 4, 5, 6, 7, 8, 10, 11, 12, 16, 25, 28, 40, 41, 43, 44, 46, 48, 49, 52, 63, 66, 78, 79, 87, 94], "nontensorstack": [3, 6, 69], "third": 3, "contrast": [3, 4, 7, 8, 10, 11, 12, 81], "tell": 3, "happen": [3, 92], "ident": [3, 4, 6, 7, 8, 10, 11, 12, 23, 25, 39, 41, 45, 69, 79, 83, 88], "produc": [3, 4, 5, 7, 8, 10, 11, 12, 43, 44, 57, 87], "otherwis": [3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 32, 39, 41, 43, 44, 46, 49, 52, 75, 76, 81], "lazy_stack": [3, 4, 7, 8, 10, 11, 12, 23, 87, 94], "exclusive_field": [3, 4, 7, 8, 10, 11, 12, 16, 23, 87, 94], "stack_dim": [3, 4, 7, 8, 10, 11, 12, 16, 23, 69, 87, 94], "given": [3, 4, 5, 7, 8, 10, 11, 12, 14, 16, 43, 44, 45, 48, 67, 71, 87, 90, 92, 95], "construct": [3, 4, 5, 7, 8, 10, 11, 12, 43, 44, 54, 80, 87, 92], "refin": [3, 4, 7, 8, 10, 11, 12], "later": [3, 4, 7, 8, 10, 11, 12, 43, 79, 81, 83, 84, 89, 92], "semant": [3, 4, 7, 8, 10, 11, 12, 79], "refine_nam": [3, 4, 7, 8, 10, 11, 12], "z": [3, 4, 7, 8, 11, 12, 44, 45, 46, 48, 72], "y": [3, 4, 7, 8, 10, 11, 12, 23, 41, 44, 45, 46, 48, 49, 72, 79, 80, 81, 83, 88, 92], "renam": [3, 4, 6, 7, 8, 10, 11, 12, 39], "m": [3, 4, 7, 8, 10, 11, 12, 43], "n": [3, 4, 7, 8, 10, 11, 12, 23, 43, 83, 88, 90, 93, 94], "h": [3, 4, 7, 8, 10, 11, 12, 40, 89], "themselv": [3, 90], "convert": [3, 4, 6, 7, 8, 10, 11, 12, 17, 19, 20, 21, 24, 25, 26, 27, 81, 89, 91, 94], "rand": [3, 41, 54, 62, 78, 81, 90, 91, 93, 94], "28": [3, 4, 7, 8, 10, 11, 12, 83, 87, 88], "randint": [3, 4, 7, 8, 10, 11, 12, 25, 78, 79, 81, 89, 94], "tupl": [3, 4, 6, 7, 8, 10, 11, 12, 25, 27, 44, 45, 46, 48, 52, 53, 66, 90, 94, 95], "altern": [3, 4, 6, 7, 8, 10, 11, 12, 16, 36, 37, 60, 91], "defer": 3, "until": [3, 4, 7, 8, 10, 11, 12, 69, 87, 89, 94], "item": [3, 4, 7, 8, 10, 11, 12, 72, 79, 81, 83, 88, 90, 94], "immedi": [3, 12], "perform": [3, 4, 7, 8, 10, 11, 12, 23, 43, 47, 49, 54, 63, 79, 83, 89, 90, 92, 94], "lazili": [3, 4, 7, 8, 10, 11, 12, 23, 94], "lot": 3, "unnecessari": 3, "calcul": [3, 4, 7, 8, 10, 11, 12], "should": [3, 4, 5, 6, 7, 8, 10, 11, 12, 19, 23, 36, 41, 42, 43, 45, 46, 47, 48, 49, 52, 53, 54, 64, 67, 69, 76, 80, 84, 87, 89, 90, 91], "_": [3, 4, 7, 8, 10, 11, 12, 23, 43, 45, 48, 52, 62, 63, 84, 87, 92], "stacked_a": 3, "zeros_lik": [3, 4, 5, 7, 8, 10, 11, 12], "caveat": 3, "expens": [3, 4, 7, 8, 10, 11, 12, 89, 94], "repeat": [3, 4, 7, 8, 10, 11, 12, 42, 83, 89, 92], "caus": [3, 4, 7, 8, 10, 11, 12, 19, 72, 92], "overhead": [3, 4, 7, 8, 10, 11, 12, 41, 81, 84, 88, 89, 92], "avoid": [3, 4, 7, 8, 10, 11, 12, 44, 45, 79, 89, 92], "contigu": [3, 4, 7, 8, 10, 11, 12, 66, 80, 83, 87, 88, 89, 91, 94], "further": 3, "mitig": 3, "come": [3, 4, 7, 8, 10, 11, 12, 78, 87, 89, 92], "meta": [3, 4, 6, 7, 8, 10, 11, 12, 23, 36, 79, 80, 81, 91], "metatensor": 3, "keep": [3, 4, 7, 8, 10, 11, 12, 23, 25, 84, 92], "track": [3, 4, 7, 8, 10, 11, 12, 25, 44, 48], "type": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 19, 25, 28, 32, 37, 43, 44, 54, 60, 72, 75, 76, 79, 81, 83, 84, 87, 88, 89], "entri": [3, 4, 6, 7, 8, 10, 11, 12, 16, 39, 40, 46, 48, 49, 54, 63, 64, 66, 75, 79, 81, 84, 90, 91, 92, 94, 95], "suppos": [3, 93], "foo": [3, 9], "someth": [3, 12], "automat": [3, 4, 7, 8, 10, 11, 12, 16, 19, 37, 43, 52, 60], "subsequ": [3, 10, 12, 48, 93], "iter": [3, 4, 7, 8, 10, 11, 12, 28, 37, 44, 45, 48, 60, 83, 87, 89, 93], "integr": [3, 12, 92], "callabl": [3, 4, 7, 8, 10, 11, 12, 40, 41, 42, 43, 44, 45, 48, 49, 84, 87], "accept": [3, 4, 5, 6, 7, 8, 10, 11, 12, 25, 84, 90, 92, 94], "underli": [3, 44, 87], "reason": [3, 12, 79], "high": [3, 4, 6, 7, 8, 10, 11, 12, 39], "facilit": 3, "adopt": [3, 4, 7, 8, 10, 11, 12], "previou": [3, 42, 44, 66, 81, 92], "box": [3, 72], "tutori": [3, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "pain": [3, 78], "inabl": [3, 78], "solv": [3, 78], "sequenc": [3, 4, 7, 8, 10, 11, 12, 16, 23, 37, 40, 44, 46, 48, 52, 55, 60, 65, 66, 74, 78, 92], "know": [3, 4, 7, 8, 10, 11, 12, 78, 81, 84, 92], "mean": [3, 4, 6, 7, 8, 10, 11, 12, 23, 39, 41, 43, 44, 78, 81, 84, 89, 92, 94], "predecessor": [3, 78], "necessari": [3, 4, 7, 8, 10, 11, 12, 48, 52, 78, 81, 87], "intermediate_x": 3, "second": [3, 4, 7, 8, 10, 11, 12, 42, 80, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95], "combin": [3, 52, 81, 84, 89], "under": [3, 54, 81, 89, 90, 92, 93], "bunch": [3, 80, 94], "ask": [3, 4, 7, 8, 10, 11, 12, 84], "sub": [3, 4, 7, 8, 10, 11, 12, 44, 48, 52, 70, 78, 81, 84], "select_subsequ": [3, 48, 78], "onli": [3, 4, 5, 7, 8, 10, 11, 12, 16, 41, 43, 44, 45, 46, 48, 52, 63, 65, 76, 79, 80, 81, 84, 89, 90, 94], "indispens": 3, "satisfi": 3, "those": [3, 4, 7, 8, 9, 10, 11, 12, 16, 43, 44, 48, 54, 80, 91, 94, 95], "vmap": [3, 4, 7, 8, 10, 11, 12, 23, 43, 48], "capabl": [3, 79, 81], "t": [4, 5, 6, 7, 8, 9, 10, 11, 12, 36, 39, 40, 45, 63, 65, 66, 70, 72, 79, 81, 83, 88, 89], "int": [4, 6, 7, 8, 9, 10, 11, 12, 16, 17, 19, 20, 21, 24, 25, 26, 27, 37, 39, 41, 42, 43, 53, 55, 60, 65, 66, 68, 72, 74, 75, 76, 87, 89], "hook_out": 4, "hook_in": 4, "str": [4, 5, 6, 7, 8, 10, 11, 12, 35, 36, 37, 39, 40, 43, 45, 48, 52, 53, 56, 60, 63, 66, 67, 68, 72, 79, 81], "stack_dim_nam": [4, 7], "strict_shap": [4, 7], "togeth": [4, 40, 42, 52, 54, 66, 89, 92], "default": [4, 5, 6, 7, 8, 10, 11, 12, 13, 19, 22, 23, 28, 29, 36, 37, 39, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 60, 63, 65, 66, 69, 72, 75, 76, 80, 84, 90, 91, 92, 93], "behaviour": [4, 5, 7, 8, 10, 11, 12, 44, 46, 48, 62, 63, 70, 79, 81, 94], "them": [4, 7, 8, 10, 11, 12, 16, 41, 43, 44, 47, 48, 49, 66, 79, 80, 84, 87, 89, 92, 94], "affect": [4, 7, 8, 10, 11, 12, 44, 48], "ndimens": [4, 7, 8, 10, 11, 12], "befor": [4, 7, 8, 10, 11, 12, 41, 70, 80, 89, 90, 92, 94], "td_stack": [4, 16], "ab": [4, 7, 8, 10, 11, 12], "absolut": [4, 7, 8, 10, 11, 12, 55], "abs_": [4, 7, 8, 10, 11, 12], "aco": [4, 7, 8, 10, 11, 12], "acos_": [4, 7, 8, 10, 11, 12], "add": [4, 7, 8, 10, 11, 12, 53, 80, 84, 89, 90, 92], "alpha": [4, 7, 8, 10, 11, 12], "float": [4, 5, 7, 8, 10, 11, 12, 25, 50, 55, 59, 65, 66, 83, 87, 88], "scale": [4, 7, 8, 10, 11, 12, 43, 44, 48, 53, 54, 56, 58, 62, 78, 84, 89, 92], "text": [4, 7, 8, 10, 11, 12, 81], "_i": [4, 7, 8, 10, 11, 12], "keyword": [4, 5, 6, 7, 8, 9, 10, 11, 12, 19, 23, 37, 39, 40, 41, 43, 44, 45, 48, 49, 52, 53, 54, 60, 72, 80, 84, 90, 91, 92], "argument": [4, 5, 6, 7, 8, 9, 10, 11, 12, 19, 23, 37, 39, 40, 41, 43, 44, 45, 46, 48, 49, 52, 53, 54, 60, 72, 80, 81, 84, 90, 91, 92, 94], "number": [4, 6, 7, 8, 10, 11, 12, 39, 41, 42, 43, 45, 52, 53, 55, 56, 58, 65, 66, 83, 84, 88, 89, 90, 92, 94], "multipli": [4, 7, 8, 10, 11, 12, 80], "exclus": [4, 7, 8, 10, 11, 12, 16, 23, 63, 72, 80], "exactli": [4, 7, 8, 10, 11, 12, 41, 47, 80, 84, 94], "intersect": [4, 7, 8, 10, 11, 12, 80], "consid": [4, 7, 8, 10, 11, 12, 44, 45, 48, 55, 79, 80, 87, 89, 92, 94], "miss": [4, 7, 8, 10, 11, 12, 44, 48, 81], "both": [4, 5, 7, 8, 10, 11, 12, 72, 75, 80, 84, 87, 89, 92, 93], "side": [4, 7, 8, 10, 11, 12, 80, 92], "add_": [4, 7, 8, 10, 11, 12], "doe": [4, 6, 7, 8, 10, 11, 12, 43, 44, 48, 49, 63, 78, 79, 80, 81, 90, 92], "addcdiv": [4, 7, 8, 10, 11, 12], "other1": [4, 7, 8, 10, 11, 12], "other2": [4, 7, 8, 10, 11, 12], "wise": [4, 7, 8, 10, 11, 12, 80], "divis": [4, 7, 8, 10, 11, 12, 80], "scalar": [4, 7, 8, 10, 11, 12, 50], "frac": [4, 7, 8, 10, 11, 12], "tensor1": [4, 7, 8, 10, 11, 12, 75, 76], "tensor2": [4, 7, 8, 10, 11, 12, 75, 76], "broadcast": [4, 7, 8, 10, 11, 12], "floattensor": [4, 7, 8, 10, 11, 12], "doubletensor": [4, 7, 8, 10, 11, 12], "real": [4, 7, 8, 10, 11, 12, 43, 67, 84, 87], "integ": [4, 5, 7, 8, 9, 10, 11, 12, 87], "numer": [4, 7, 8, 10, 11, 12], "denomin": [4, 7, 8, 10, 11, 12], "addcdiv_": [4, 7, 8, 10, 11, 12], "addcmul": [4, 7, 8, 10, 11, 12], "addcmul_": [4, 7, 8, 10, 11, 12], "null": [4, 7, 8, 10, 11, 12], "boolean": [4, 7, 8, 10, 11, 12, 75, 79], "whether": [4, 5, 7, 8, 10, 11, 12, 23, 41, 42, 51, 53, 62, 64, 69], "upon": [4, 7, 8, 10, 11, 12], "amax": [4, 7, 8, 10, 11, 12], "no_default": [4, 7, 8, 10, 11, 12], "_nodefault": [4, 7, 8, 10, 11, 12], "keepdim": [4, 7, 8, 10, 11, 12], "reduc": [4, 7, 8, 10, 11, 12, 92], "maximum": [4, 7, 8, 10, 11, 12, 37, 52, 60], "max": [4, 7, 8, 10, 11, 12], "return_indic": [4, 7, 8, 10, 11, 12, 76], "amin": [4, 7, 8, 10, 11, 12], "minimum": [4, 7, 8, 10, 11, 12, 50, 53, 56], "min": [4, 7, 8, 10, 11, 12], "append": [4, 7, 8, 10, 11, 12, 87], "analog": [4, 7], "noth": [4, 7], "fn": [4, 7, 8, 10, 11, 12, 56], "filter_empti": [4, 7, 8, 10, 11, 12], "propagate_lock": [4, 7, 8, 10, 11, 12], "call_on_nest": [4, 7, 8, 10, 11, 12], "constructor_kwarg": [4, 7, 8, 10, 11, 12], "signatur": [4, 7, 8, 10, 11, 12, 44, 45, 46, 48, 63, 92], "union": [4, 5, 7, 8, 10, 11, 12, 16, 32, 37, 40, 41, 53, 55, 60, 66, 79, 81], "receiv": [4, 7, 8, 10, 11, 12, 41, 87], "unnam": [4, 7, 8, 10, 11, 12, 52], "modifi": [4, 7, 8, 10, 11, 12, 19, 26, 43, 46, 48, 49, 54, 72, 80, 81, 83, 84, 88, 92], "made": [4, 7, 8, 10, 11, 12, 92], "keyerror": [4, 7, 8, 10, 11, 12], "filter": [4, 7, 8, 10, 11, 12, 84, 92], "lower": [4, 7, 8, 10, 11, 12, 84], "cost": [4, 7, 8, 10, 11, 12], "won": [4, 6, 7, 8, 10, 11, 12, 36, 63, 70, 81], "destroi": [4, 7, 8, 10, 11, 12], "leaf": [4, 7, 8, 10, 11, 12, 43, 54, 76], "therebi": [4, 7, 8, 10, 11, 12], "kept": [4, 7, 8, 10, 11, 12], "left": [4, 7, 8, 10, 11, 12, 80, 94], "untouch": [4, 7, 8, 10, 11, 12, 23, 94], "lock": [4, 6, 7, 8, 10, 11, 12, 22, 23, 39, 72, 80, 89], "scenario": [4, 7, 8, 10, 11, 12, 87], "propag": [4, 7, 8, 10, 11, 12, 48, 70], "fine": [4, 7, 8, 10, 11, 12, 45], "grain": [4, 7, 8, 10, 11, 12, 45], "leav": [4, 6, 7, 8, 10, 11, 12, 23, 25, 39, 52, 54, 63, 79, 92], "care": [4, 7, 8, 10, 11, 12, 43, 47, 49, 63], "mean_tensor_onli": [4, 7, 8, 10, 11, 12], "val": [4, 7, 8, 10, 11, 12, 69, 89], "is_tensor_collect": [4, 7, 8, 10, 11, 12], "runtimeerror": [4, 7, 8, 10, 11, 12, 44], "unexpect": [4, 7, 8, 10, 11, 12, 46, 48], "td_mean": [4, 7, 8, 10, 11, 12], "mean_ani": [4, 7, 8, 10, 11, 12], "recurs": [4, 7, 8, 10, 11, 12, 46, 90], "equal": [4, 7, 8, 10, 11, 12, 65, 79, 87], "silent": [4, 7, 8, 10, 11, 12, 41, 43, 47, 49], "wrong": [4, 7, 8, 10, 11, 12, 41], "right": [4, 7, 8, 10, 11, 12, 41, 72, 73, 74, 80, 92], "transformed_in": [4, 7, 8, 10, 11, 12], "td_1": [4, 7, 8, 10, 11, 12], "td_2": [4, 7, 8, 10, 11, 12], "int64": [4, 6, 7, 8, 10, 11, 12, 19, 40, 54, 78, 79, 83, 87, 88, 89], "regardless": [4, 7, 8, 10, 11, 12], "apply_": [4, 7, 8, 10, 11, 12], "copi": [4, 5, 6, 7, 8, 10, 11, 12, 22, 39, 42, 44, 78, 81, 91], "asin": [4, 7, 8, 10, 11, 12], "asin_": [4, 7, 8, 10, 11, 12], "atan": [4, 7, 8, 10, 11, 12], "atan_": [4, 7, 8, 10, 11, 12], "auto_batch_size_": [4, 7, 8, 10, 11, 12], "batch_dim": [4, 7, 8, 10, 11, 12, 17, 19, 20, 21, 24, 25, 26, 27, 94, 95], "up": [4, 7, 8, 10, 11, 12, 63, 80, 81, 83, 87, 90, 92], "long": [4, 7, 8, 10, 11, 12, 20, 37, 48, 60, 80, 89, 95], "auto_device_": [4, 7, 8, 10, 11, 12], "uniqu": [4, 7, 8, 10, 11, 12, 69, 76], "edit": [4, 7, 8, 10, 11, 12], "length": [4, 7, 8, 10, 11, 12, 45, 75, 95], "describ": [4, 6, 7, 8, 10, 11, 12], "correspond": [4, 6, 7, 8, 10, 11, 12, 39, 43, 45, 54, 80, 81, 84, 90, 94, 95], "repes": [4, 7, 8, 10, 11, 12], "relev": [4, 7, 8, 10, 11, 12, 48], "video": [4, 7, 8, 10, 11, 12], "w": [4, 7, 8, 10, 11, 12, 48, 89], "channel": [4, 7, 8, 10, 11, 12], "spacial": [4, 7, 8, 10, 11, 12], "control": [4, 7, 8, 10, 11, 12, 41, 45, 54, 62, 69, 81, 91, 94], "initi": [4, 6, 7, 8, 10, 11, 12, 42, 79], "ie": [4, 7, 8, 10, 11, 12, 45, 46, 48, 70, 81, 94], "infer": [4, 7, 8, 10, 11, 12, 43, 84], "dynam": [4, 7, 8, 10, 11, 12, 41, 70, 92], "reset": [4, 7, 8, 10, 11, 12, 46, 48, 79, 80], "bfloat16": [4, 7, 8, 10, 11, 12], "bitwise_and": [4, 7, 8, 10, 11, 12], "bitwis": [4, 7, 8, 10, 11, 12], "AND": [4, 7, 8, 10, 11, 12, 44, 48], "land": [4, 7, 8, 10, 11, 12], "byte": [4, 7, 8, 10, 11, 12], "count_dupl": [4, 7, 8, 10, 11, 12], "count": [4, 7, 8, 10, 11, 12], "duplic": [4, 5, 7, 8, 10, 11, 12, 42, 76, 78], "strictli": [4, 7, 8, 10, 11, 12, 79, 92], "discard": [4, 7, 8, 10, 11, 12, 48, 81, 92], "id": [4, 7, 8, 10, 11, 12, 41], "twice": [4, 7, 8, 10, 11, 12, 65, 81], "classmethod": [4, 5, 6, 7, 8, 10, 11, 12, 87, 88, 89], "concaten": [4, 7, 8, 10, 11, 12, 14, 48, 79, 92], "equival": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 36, 40, 52, 53, 71, 90], "cat_from_tensordict": [4, 7, 8, 10, 11, 12], "sort": [4, 7, 8, 10, 11, 12, 52], "nestedkei": [4, 6, 7, 8, 10, 11, 12, 25, 28, 40, 41, 43, 44, 45, 48, 49, 54, 66, 75, 76, 87], "alphabet": [4, 7, 8, 10, 11, 12], "order": [4, 7, 8, 10, 11, 12, 44, 45, 48, 52, 66, 78, 81, 87, 92], "accordingli": [4, 7, 8, 10, 11, 12, 63], "incur": [4, 7, 8, 10, 11, 12, 88, 92], "against": [4, 7, 8, 10, 11, 12, 19, 72, 75, 89], "destin": [4, 6, 7, 8, 10, 11, 12, 66, 81], "cat_tensor": [4, 7, 8, 10, 11, 12], "keep_entri": [4, 7, 8, 10, 11, 12], "remov": [4, 6, 7, 8, 10, 11, 12, 39, 48, 76, 91, 92, 94], "delet": [4, 7, 8, 10, 11, 12, 90, 92], "occur": [4, 7, 8, 10, 11, 12, 46, 48], "ceil": [4, 7, 8, 10, 11, 12], "ceil_": [4, 7, 8, 10, 11, 12], "chunk": [4, 5, 7, 8, 10, 11, 12, 81, 84, 87, 92, 94], "24": [4, 7, 8, 10, 11, 12, 87], "8": [4, 7, 8, 10, 11, 12, 43, 45, 48, 66, 75, 76, 78, 83, 87, 88, 89, 92], "9": [4, 7, 8, 10, 11, 12, 26, 44, 45, 54, 69, 75, 76, 79, 87, 88], "16": [4, 7, 8, 10, 11, 12, 82, 84, 86, 87, 92], "17": [4, 7, 8, 10, 11, 12, 87, 88], "18": [4, 7, 8, 10, 11, 12, 87, 88], "19": [4, 7, 8, 10, 11, 12, 87, 88], "clamp": [4, 7, 8, 10, 11, 12, 80], "let": [4, 7, 8, 10, 11, 12, 63, 84, 87, 92, 93], "min_valu": [4, 7, 8, 10, 11, 12], "max_valu": [4, 7, 8, 10, 11, 12], "respect": [4, 7, 8, 10, 11, 12, 19, 63, 89], "y_i": [4, 7, 8, 10, 11, 12], "x_i": [4, 7, 8, 10, 11, 12], "_valu": [4, 7, 8, 10, 11, 12], "bound": [4, 7, 8, 10, 11, 12], "Or": [4, 7, 8, 10, 11, 12], "upper": [4, 7, 8, 10, 11, 12], "clamp_max": [4, 7, 8, 10, 11, 12], "superior": [4, 7, 8, 10, 11, 12], "clamp_max_": [4, 7, 8, 10, 11, 12], "clamp_min": [4, 7, 8, 10, 11, 12, 84], "inferior": [4, 7, 8, 10, 11, 12], "clamp_min_": [4, 7, 8, 10, 11, 12], "clear": [4, 7, 8, 10, 11, 12], "eras": [4, 7, 8, 10, 11, 12], "clear_device_": [4, 7, 8, 10, 11, 12], "clear_refs_for_compile_": [4, 7, 8, 10, 11, 12], "weakref": [4, 7, 8, 10, 11, 12], "region": [4, 7, 8, 10, 11, 12], "safe": [4, 6, 7, 8, 10, 11, 12, 23, 81], "whenev": [4, 7, 8, 10, 11, 12, 44, 46, 48, 63, 94], "hit": [4, 7, 8, 10, 11, 12], "_dynamo": [4, 7, 8, 10, 11, 12], "exc": [4, 7, 8, 10, 11, 12], "unsupport": [4, 7, 8, 10, 11, 12], "reconstruct": [4, 7, 8, 10, 11, 12, 18, 80, 81, 84], "weakrefvari": [4, 7, 8, 10, 11, 12], "subclass": [4, 7, 8, 9, 10, 11, 12, 32, 43, 45, 46, 47, 49, 79, 92], "subtyp": [4, 7, 8, 10, 11, 12, 45, 81], "to_tensordict": [4, 7, 8, 10, 11, 12, 16, 94], "tree": [4, 6, 7, 8, 10, 11, 12, 22, 23, 39, 81, 89], "unlik": [4, 7, 8, 10, 11, 12, 81, 90, 92], "op": [4, 7, 8, 10, 11, 12, 80, 84], "arithmet": [4, 7, 8, 10, 11, 12], "choic": [4, 7, 8, 10, 11, 12, 53, 56, 81, 88, 89], "frequent": [4, 7, 8, 10, 11, 12], "usag": [4, 7, 8, 10, 11, 12, 44, 46, 48, 81, 84, 92], "complex128": [4, 7, 8, 10, 11, 12], "complex32": [4, 7, 8, 10, 11, 12], "complex64": [4, 7, 8, 10, 11, 12], "consolid": [4, 7, 8, 10, 11, 12, 18], "filenam": [4, 5, 7, 8, 10, 11, 12, 18], "num_thread": [4, 6, 7, 8, 10, 11, 12, 39, 68, 81], "non_block": [4, 6, 7, 8, 10, 11, 12, 35, 36], "return_earli": [4, 6, 7, 8, 10, 11, 12, 39, 68], "use_buff": [4, 7, 8, 10, 11, 12], "share_memori": [4, 7, 8, 10, 11, 12], "pin_memori": [4, 7, 8, 10, 11, 12, 84, 89], "metadata": [4, 7, 8, 10, 11, 12, 81, 91], "thread": [4, 6, 7, 8, 10, 11, 12, 39, 81, 87, 89], "copy_": [4, 7, 8, 10, 11, 12], "futur": [4, 6, 7, 8, 10, 11, 12, 39, 41, 44, 79, 94], "last": [4, 7, 8, 10, 11, 12, 43, 44, 92], "distant": [4, 7, 8, 10, 11, 12], "e": [4, 6, 7, 8, 10, 11, 12, 36, 39, 40, 42, 43, 48, 56, 83, 84, 87, 88, 92], "nf": [4, 7, 8, 10, 11, 12], "pin": [4, 7, 8, 10, 11, 12], "alongisd": [4, 7, 8, 10, 11, 12], "effect": [4, 7, 8, 10, 11, 12, 19, 26], "pickl": [4, 7, 8, 10, 11, 12, 79, 81], "unpickl": [4, 7, 8, 10, 11, 12, 81], "isn": [4, 5, 6, 7, 8, 9, 10, 11, 12, 36, 39, 79, 92], "avail": [4, 7, 8, 10, 11, 12, 43, 44, 79, 84], "tempfil": [4, 5, 6, 7, 8, 10, 11, 12, 36, 81], "tqdm": [4, 7, 8, 10, 11, 12, 89], "timer": [4, 7, 8, 10, 11, 12, 92], "data_consolid": [4, 7, 8, 10, 11, 12], "data_ptr": [4, 7, 8, 10, 11, 12], "v": [4, 7, 8, 10, 11, 12, 40], "untyped_storag": [4, 7, 8, 10, 11, 12], "data_c": [4, 7, 8, 10, 11, 12], "numel": [4, 7, 8, 10, 11, 12, 89], "dump": [4, 6, 7, 8, 10, 11, 12, 81], "global": [4, 7, 8, 10, 11, 12, 41, 43, 44, 63, 92], "adaptive_autorang": [4, 7, 8, 10, 11, 12, 92], "shallow": [4, 7, 8, 10, 11, 12], "update_": [4, 7, 8, 10, 11, 12, 79], "block": [4, 7, 8, 10, 11, 12, 78, 92], "copy_at_": [4, 7, 8, 10, 11, 12], "update_at_": [4, 7, 8, 10, 11, 12], "co": [4, 7, 8, 10, 11, 12, 44], "cos_": [4, 7, 8, 10, 11, 12], "cosh": [4, 7, 8, 10, 11, 12], "cosh_": [4, 7, 8, 10, 11, 12], "create_nest": [4, 7, 8, 10, 11, 12], "overwritten": [4, 7, 8, 10, 11, 12, 47, 63, 81, 90, 92], "cummax": [4, 7, 8, 10, 11, 12], "cumul": [4, 7, 8, 10, 11, 12], "reduciton": [4, 7, 8, 10, 11, 12], "return_argmin": [4, 7, 8, 10, 11, 12], "idend": [4, 7, 8, 10, 11, 12], "within": [4, 5, 6, 7, 8, 10, 11, 12, 22, 23, 39, 43, 47, 49, 52, 72, 76, 78, 80, 84, 87, 92], "d": [4, 7, 8, 10, 11, 12, 20, 40, 43, 44, 46, 48, 52, 54, 62, 83, 88], "return_typ": [4, 7, 8, 10, 11, 12], "cummin": [4, 7, 8, 10, 11, 12], "displai": [4, 7, 8, 10, 11, 12], "reflect": [4, 7, 8, 10, 11, 12], "del_": [4, 7, 8, 10, 11, 12, 90], "densifi": [4, 7, 8, 10, 11, 12, 87], "layout": [4, 7, 8, 10, 11, 12, 87], "stride": [4, 7, 8, 10, 11, 12, 87], "attempt": [4, 7, 8, 10, 11, 12, 38, 43, 44, 79, 87], "plain": [4, 7, 8, 10, 11, 12, 79], "depth": [4, 7, 8, 10, 11, 12], "detach": [4, 7, 8, 10, 11, 12, 41], "gradient": [4, 7, 8, 10, 11, 12, 83, 84, 88, 92], "detach_": [4, 7, 8, 10, 11, 12], "incl": [4, 7, 8, 11, 12], "live": [4, 7, 8, 11, 12, 81], "appropri": [4, 7, 8, 11, 12, 72], "div": [4, 7, 8, 10, 11, 12], "divid": [4, 7, 8, 10, 11, 12, 92], "promot": [4, 7, 8, 10, 11, 12], "divisor": [4, 7, 8, 10, 11, 12], "div_": [4, 7, 8, 10, 11, 12], "doubl": [4, 7, 8, 10, 11, 12], "copy_exist": [4, 5, 6, 7, 8, 10, 11, 12, 39, 68, 81], "share_non_tensor": [4, 6, 7, 8, 10, 11, 12, 39, 68], "proxi": [4, 6, 7, 8, 10, 11, 12, 35, 68], "reproduc": [4, 7, 8, 10, 11, 12, 67], "entry_class": [4, 7, 8, 10, 11, 12], "isinst": [4, 7, 8, 10, 11, 12, 41, 72, 79, 81, 90, 92, 94], "erf": [4, 7, 8, 10, 11, 12], "erf_": [4, 7, 8, 10, 11, 12], "erfc": [4, 7, 8, 10, 11, 12], "erfc_": [4, 7, 8, 10, 11, 12], "exclud": [4, 7, 8, 10, 11, 12], "modif": [4, 7, 8, 10, 11, 12], "either": [4, 7, 8, 10, 11, 12, 16, 41, 52, 79, 84, 90, 91, 94], "prune": [4, 7, 8, 10, 11, 12], "exp": [4, 7, 8, 10, 11, 12, 53, 56], "exp_": [4, 7, 8, 10, 11, 12], "expand": [4, 6, 7, 8, 10, 11, 12, 16, 23, 42, 43, 48, 73, 74, 81, 89], "accord": [4, 6, 7, 8, 10, 11, 12, 39, 84], "td_expand": [4, 7, 8, 10, 11, 12], "expand_a": [4, 7, 8, 10, 11, 12, 72, 89], "basi": [4, 7, 8, 10, 11, 12], "expm1": [4, 7, 8, 10, 11, 12], "expm1_": [4, 7, 8, 10, 11, 12], "fill_": [4, 7, 8, 10, 11, 12], "filter_empty_": [4, 7, 8, 10, 11, 12], "filter_non_tensor_data": [4, 7, 8, 10, 11, 12], "flatten": [4, 6, 7, 8, 10, 11, 12, 83, 88], "start_dim": [4, 7, 8, 10, 11, 12, 83, 88], "end_dim": [4, 7, 8, 10, 11, 12, 83, 88], "60": [4, 7, 8, 10, 11, 12, 75, 76, 87, 88], "12": [4, 7, 8, 10, 11, 12, 49, 75, 87, 88, 94], "td_flat": [4, 7, 8, 10, 11, 12], "14": [4, 7, 8, 10, 11, 12, 87, 88], "15": [4, 7, 8, 10, 11, 12, 87], "20": [4, 7, 8, 10, 11, 12, 75, 76, 87, 88], "21": [4, 7, 8, 10, 11, 12, 87, 88], "22": [4, 7, 8, 10, 11, 12, 87, 88], "23": [4, 7, 8, 10, 11, 12, 87], "25": [4, 7, 8, 10, 11, 12, 87, 88, 89], "26": [4, 7, 8, 10, 11, 12, 87, 88, 89], "27": [4, 7, 8, 10, 11, 12, 26, 82, 86, 87, 88], "29": [4, 7, 8, 10, 11, 12, 87, 88], "30": [4, 7, 8, 10, 11, 12, 75, 76, 87], "31": [4, 7, 8, 10, 11, 12, 87], "33": [4, 7, 8, 10, 11, 12, 87], "34": [4, 7, 8, 10, 11, 12, 87, 88], "35": [4, 7, 8, 10, 11, 12, 83, 87], "36": [4, 7, 8, 10, 11, 12, 87], "37": [4, 7, 8, 10, 11, 12, 83, 87], "38": [4, 7, 8, 10, 11, 12, 87, 88], "39": [4, 7, 8, 10, 11, 12, 87, 88], "40": [4, 7, 8, 10, 11, 12, 75, 76, 87], "41": [4, 7, 8, 10, 11, 12, 87], "42": [4, 7, 8, 10, 11, 12, 87, 89], "43": [4, 7, 8, 10, 11, 12, 87], "44": [4, 7, 8, 10, 11, 12, 87], "45": [4, 7, 8, 10, 11, 12, 87, 88], "46": [4, 7, 8, 10, 11, 12, 87], "47": [4, 7, 8, 10, 11, 12, 83, 87], "48": [4, 7, 8, 10, 11, 12, 87], "49": [4, 7, 8, 10, 11, 12, 87], "51": [4, 7, 8, 10, 11, 12, 87, 88], "52": [4, 7, 8, 10, 11, 12, 84, 87, 88, 89], "53": [4, 7, 8, 10, 11, 12, 87], "54": [4, 7, 8, 10, 11, 12, 87, 88], "55": [4, 7, 8, 10, 11, 12, 87], "56": [4, 7, 8, 10, 11, 12, 82, 83, 86, 87], "57": [4, 7, 8, 10, 11, 12, 84, 87], "58": [4, 7, 8, 10, 11, 12, 83, 87, 88], "59": [4, 7, 8, 10, 11, 12, 87], "flatten_kei": [4, 7, 8, 10, 11, 12, 90], "is_leaf": [4, 7, 8, 10, 11, 12], "flat": [4, 7, 8, 10, 11, 12], "lost": [4, 7, 8, 10, 11, 12], "over": [4, 7, 8, 10, 11, 12, 44, 45, 48, 79, 83, 88, 89], "prevent": [4, 5, 7, 8, 10, 11, 12, 81, 89], "mark": [4, 7, 8, 10, 11, 12], "certain": [4, 7, 8, 10, 11, 12], "leaves_onli": [4, 7, 8, 10, 11, 12, 90], "cl": [4, 7, 8, 10, 11, 12, 72, 87, 88, 89], "travers": [4, 7, 8, 10, 11, 12], "include_nest": [4, 7, 8, 10, 11, 12, 90], "word": [4, 7, 8, 10, 11, 12, 41, 52, 81], "children": [4, 7, 8, 10, 11, 12, 46], "practic": [4, 7, 8, 10, 11, 12], "is_leaf_nontensor": [4, 7, 8, 10, 11, 12], "default_is_leaf": [4, 7, 8, 10, 11, 12], "unflatten_kei": [4, 7, 8, 10, 11, 12, 90], "particularli": [4, 7, 8, 10, 11, 12, 22, 23, 90], "state": [4, 7, 8, 10, 11, 12, 22, 23, 45, 53, 81], "mimic": [4, 6, 7, 8, 10, 11, 12, 39, 81, 90, 91], "ddp_model": [4, 7, 8, 10, 11, 12], "ao": [4, 7, 8, 10, 11, 12], "quantiz": [4, 7, 8, 10, 11, 12], "quantwrapp": [4, 7, 8, 10, 11, 12], "state_dict": [4, 6, 7, 8, 10, 11, 12, 81], "bia": [4, 7, 8, 10, 11, 12, 22, 23, 50, 56, 59, 83, 84, 88, 90], "weight": [4, 7, 8, 10, 11, 12, 22, 23, 26, 46, 81, 84, 90], "model_state_dict": [4, 7, 8, 10, 11, 12], "load_state_dict": [4, 6, 7, 8, 10, 11, 12, 81], "float16": [4, 7, 8, 10, 11, 12], "float64": [4, 7, 8, 10, 11, 12], "floor": [4, 7, 8, 10, 11, 12], "floor_": [4, 7, 8, 10, 11, 12], "frac_": [4, 7, 8, 10, 11, 12], "from_ani": [4, 7, 8, 10, 11, 12], "obj": [4, 7, 8, 10, 11, 12, 17, 19, 27, 79], "auto_batch_s": [4, 7, 8, 10, 11, 12, 17, 19, 20, 21, 24, 25, 26, 27, 37, 52, 60], "less": [4, 7, 8, 10, 11, 12, 65], "restrict": [4, 7, 8, 10, 11, 12, 41, 79], "dataclass": [4, 6, 7, 8, 9, 10, 11, 12, 19, 72, 88, 89], "custom": [4, 7, 8, 10, 11, 12, 78, 79, 88, 89], "heurist": [4, 7, 8, 10, 11, 12, 44], "approach": [4, 7, 8, 10, 11, 12, 78, 81, 89], "extra": [4, 7, 8, 10, 11, 12, 52, 80], "opinion": [4, 7, 8, 10, 11, 12], "term": [4, 7, 8, 10, 11, 12], "strategi": [4, 7, 8, 10, 11, 12, 79], "defin": [4, 7, 8, 10, 11, 12, 19, 43, 47, 49, 72, 84, 87, 88, 89, 92], "full": [4, 5, 7, 8, 10, 11, 12, 19, 79, 80, 81, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95], "represent": [4, 7, 8, 10, 11, 12, 33, 87], "from_dataclass": [4, 7, 8, 10, 11, 12], "namedtupl": [4, 7, 8, 10, 11, 12, 24, 25, 80], "from_namedtupl": [4, 7, 8, 10, 11, 12], "from_dict": [4, 7, 8, 10, 11, 12, 79], "from_tupl": [4, 7, 8, 10, 11, 12], "numpi": [4, 7, 8, 10, 11, 12, 26, 80, 91], "from_struct_arrai": [4, 7, 8, 10, 11, 12], "hdf5": [4, 7, 8, 10, 11, 12, 21], "from_h5": [4, 7, 8, 10, 11, 12], "as_tensorclass": [4, 7, 8, 10, 11, 12], "determin": [4, 7, 8, 10, 11, 12, 19, 37, 52, 54, 60, 81, 93], "deleg": [4, 7, 8, 10, 11, 12], "convers": [4, 7, 8, 10, 11, 12], "free": [4, 7, 8, 10, 11, 12, 41, 92], "deriv": [4, 7, 8, 10, 11, 12, 19], "unless": [4, 7, 8, 10, 11, 12, 42, 63, 70, 81, 84], "typeerror": [4, 7, 8, 10, 11, 12, 19, 43, 44], "distinct": [4, 7, 8, 10, 11, 12], "while": [4, 7, 8, 10, 11, 12, 23, 43, 44, 47, 49, 79, 81, 87, 89, 91], "input_dict": [4, 7, 8, 10, 11, 12, 20, 37, 60], "sourc": [4, 5, 7, 8, 10, 11, 12, 37, 52, 60, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95], "exclusinv": [4, 7, 10, 11, 12], "note": [4, 7, 8, 10, 11, 12, 16, 25, 43, 44, 48, 79, 83, 84, 88, 89, 92, 94], "__maximum__": [4, 7, 10, 11, 12], "smaller": [4, 7, 10, 11, 12], "sie": [4, 7, 10, 11, 12, 20, 37, 60], "input_td": [4, 7, 10, 11, 12, 20, 37, 60], "from_dict_inst": [4, 7, 8, 10, 11, 12], "myclass": [4, 7, 8, 10, 11, 12, 32, 79, 81], "to_dict": [4, 7, 8, 10, 11, 12], "mode": [4, 7, 8, 10, 11, 12, 43, 62, 63, 69, 70, 84, 92], "r": [4, 7, 8, 10, 11, 12, 43], "h5": [4, 7, 8, 10, 11, 12, 80], "keword": [4, 7, 10, 11, 12], "key1": [4, 7, 8, 10, 11, 12], "key2": [4, 7, 8, 10, 11, 12], "from_modul": [4, 7, 8, 10, 11, 12, 43, 45, 46, 48, 80, 81], "as_modul": [4, 7, 8, 10, 11, 12, 22, 23], "use_state_dict": [4, 7, 8, 10, 11, 12, 22, 23], "param": [4, 7, 8, 10, 11, 12, 22, 23, 43, 44, 45, 46, 48, 54, 55, 62, 80, 84, 90], "unflatten": [4, 7, 8, 10, 11, 12, 22, 23], "hook": [4, 7, 8, 10, 11, 12, 22, 23, 43, 47, 49, 78], "transformerdecod": [4, 7, 8, 10, 11, 12, 22], "decoder_lay": [4, 7, 8, 10, 11, 12, 22], "transformerdecoderlay": [4, 7, 8, 10, 11, 12, 22], "nhead": [4, 7, 8, 10, 11, 12, 22], "d_model": [4, 7, 8, 10, 11, 12, 22], "num_lay": [4, 7, 8, 10, 11, 12, 22], "layer": [4, 7, 8, 10, 11, 12, 22, 89], "linear1": [4, 7, 8, 10, 11, 12, 22, 92], "2048": [4, 7, 8, 10, 11, 12, 22], "expand_ident": [4, 7, 8, 10, 11, 12, 23], "ensebml": [4, 7, 8, 10, 11, 12, 23], "expect": [4, 7, 8, 10, 11, 12, 23, 42, 46, 48, 52, 63, 76, 84], "applic": [4, 7, 8, 10, 11, 12, 23, 67, 84, 87], "densli": [4, 7, 8, 10, 11, 12, 23], "dens": [4, 7, 8, 10, 11, 12, 16, 23, 38, 94], "There": [4, 7, 8, 10, 11, 12, 23, 81, 92], "reinstanti": [4, 7, 8, 10, 11, 12, 23], "whilst": [4, 7, 8, 10, 11, 12, 23], "tempt": [4, 7, 8, 10, 11, 12, 23], "orign": [4, 7, 8, 10, 11, 12, 23, 46, 48, 81], "rememb": [4, 7, 8, 10, 11, 12, 23, 81], "built": [4, 7, 8, 9, 10, 11, 12, 23, 25, 84, 87, 92], "longer": [4, 7, 8, 10, 11, 12, 23], "reserv": [4, 7, 8, 10, 11, 12, 19, 23, 72], "veri": [4, 7, 8, 10, 11, 12, 23, 79, 83, 84, 88], "being": [4, 7, 8, 10, 11, 12, 23, 41, 52, 54, 62, 63, 79, 81, 84, 91, 94], "manual_se": [4, 7, 8, 10, 11, 12, 23, 44, 48, 62], "empty_modul": [4, 7, 8, 10, 11, 12, 23], "n_model": [4, 7, 8, 10, 11, 12, 23], "exec_modul": [4, 7, 8, 10, 11, 12, 23], "to_modul": [4, 7, 8, 10, 11, 12, 23, 43, 45, 48, 80, 94], "sinc": [4, 7, 8, 10, 11, 12, 23, 43, 47, 49, 52, 78, 81, 83, 84, 88, 89, 94, 95], "backprop": [4, 7, 8, 10, 11, 12, 23], "sum": [4, 7, 8, 10, 11, 12, 23, 54, 62, 83, 88], "grad": [4, 7, 8, 10, 11, 12, 23], "norm": [4, 7, 8, 10, 11, 12, 23, 41], "thing": [4, 7, 8, 10, 11, 12, 23, 63, 90], "slightli": [4, 7, 8, 10, 11, 12, 23, 79, 89], "named_tupl": [4, 7, 8, 10, 11, 12, 24, 25], "a_tensor": [4, 7, 8, 10, 11, 12], "a_str": [4, 7, 8, 10, 11, 12], "nt": [4, 7, 8, 10, 11, 12], "to_namedtupl": [4, 7, 8, 10, 11, 12, 25], "genericdict": [4, 7, 8, 10, 11, 12], "from_pytre": [4, 7, 8, 10, 11, 12], "ad": [4, 7, 8, 10, 11, 12, 25, 89, 90, 92], "biject": [4, 7, 8, 10, 11, 12, 25], "regist": [4, 7, 8, 10, 11, 12, 25, 43, 47, 49, 84, 87], "castabl": [4, 7, 8, 10, 11, 12, 25], "np": [4, 7, 8, 10, 11, 12, 25, 26, 72], "ndarrai": [4, 7, 8, 10, 11, 12, 25, 72], "surject": [4, 7, 8, 10, 11, 12, 25], "back": [4, 7, 8, 10, 11, 12, 25, 38], "recov": [4, 7, 8, 10, 11, 12, 25, 44, 94], "weird": [4, 7, 8, 10, 11, 12, 25], "look": [4, 7, 8, 10, 11, 12, 25, 43, 44, 48, 84, 92], "weirdlookingclass": [4, 7, 8, 10, 11, 12, 25], "weird_kei": [4, 7, 8, 10, 11, 12, 25], "pytree_recon": [4, 7, 8, 10, 11, 12, 25], "to_pytre": [4, 7, 8, 10, 11, 12, 25], "v1": [4, 7, 8, 10, 11, 12, 25], "v2": [4, 7, 8, 10, 11, 12, 25], "_pytre": [4, 7, 8, 10, 11, 12, 25], "struct_arrai": [4, 7, 8, 10, 11, 12, 26], "therefor": [4, 7, 8, 10, 11, 12, 84], "transfer": [4, 7, 8, 10, 11, 12, 43, 89], "rex": [4, 7, 8, 10, 11, 12, 26], "81": [4, 7, 8, 10, 11, 12, 26], "fido": [4, 7, 8, 10, 11, 12, 26], "u10": [4, 7, 8, 10, 11, 12, 26], "ag": [4, 7, 8, 10, 11, 12, 26], "i4": [4, 7, 8, 10, 11, 12, 26], "f4": [4, 7, 8, 10, 11, 12, 26], "x_recon": [4, 7, 8, 10, 11, 12, 26], "to_struct_arrai": [4, 7, 8, 10, 11, 12, 26], "my_tupl": [4, 7, 8, 10, 11, 12], "fromkei": [4, 6, 7, 8, 10, 11, 12, 36], "gather": [4, 7, 8, 10, 11, 12, 41, 87, 89], "axi": [4, 7, 8, 10, 11, 12], "Its": [4, 7, 8, 10, 11, 12, 45, 84], "td_gather": [4, 7, 8, 10, 11, 12], "gather_and_stack": [4, 7, 8, 10, 11, 12], "dst": [4, 7, 8, 10, 11, 12], "group": [4, 7, 8, 10, 11, 12, 54, 87], "processgroup": [4, 7, 8, 10, 11, 12], "variou": [4, 7, 8, 10, 11, 12, 19, 80], "rank": [4, 7, 8, 10, 11, 12], "commun": [4, 7, 8, 10, 11, 12], "mp": [4, 7, 8, 10, 11, 12], "client": [4, 7, 8, 10, 11, 12], "init_process_group": [4, 7, 8, 10, 11, 12], "gloo": [4, 7, 8, 10, 11, 12], "world_siz": [4, 7, 8, 10, 11, 12], "init_method": [4, 7, 8, 10, 11, 12], "tcp": [4, 7, 8, 10, 11, 12], "localhost": [4, 7, 8, 10, 11, 12], "10003": [4, 7, 8, 10, 11, 12], "sent": [4, 7, 8, 10, 11, 12, 91], "server": [4, 7, 8, 10, 11, 12, 84], "yuppi": [4, 7, 8, 10, 11, 12], "__name__": [4, 7, 8, 10, 11, 12, 89], "__main__": [4, 7, 8, 10, 11, 12, 89], "set_start_method": [4, 7, 8, 10, 11, 12], "spawn": [4, 7, 8, 10, 11, 12], "main_work": [4, 7, 8, 10, 11, 12], "secondary_work": [4, 7, 8, 10, 11, 12], "start": [4, 7, 8, 10, 11, 12, 65, 89, 92], "join": [4, 7, 8, 10, 11, 12, 84], "chain": [4, 6, 7, 8, 10, 11, 12, 42, 48], "previous": [4, 7, 8, 10, 11, 12, 94], "v0": [4, 7, 8, 10, 11, 12, 44, 45, 54, 69, 78, 79], "behavior": [4, 7, 8, 10, 11, 12, 69, 72], "old": [4, 7, 8, 10, 11, 12, 94], "environ": [4, 7, 8, 10, 11, 12, 62, 69, 79, 84, 89], "variabl": [4, 7, 8, 10, 11, 12, 62, 69, 79, 84, 92], "td_get_defaults_to_non": [4, 7, 8, 10, 11, 12], "set_get_defaults_to_non": [4, 7, 8, 10, 11, 12], "get_at": [4, 7, 8, 10, 11, 12], "get_item_shap": [4, 7, 8, 10, 11, 12], "implement": [4, 7, 8, 10, 12, 78, 79, 81, 83, 84, 87, 88, 89], "ineffici": [4, 7, 94], "get_nestedtensor": [4, 7], "cannot": [4, 7, 8, 9, 10, 11, 12, 41, 52, 72, 87, 89], "optiona": [4, 7], "nestedtensor": [4, 7], "anyth": [4, 7, 63], "els": [4, 7, 8, 10, 11, 12, 41, 63, 83, 88, 89, 90], "b2": [4, 7, 40], "get_non_tensor": [4, 7, 8, 10, 11, 12], "robust": [4, 7, 8, 10, 11, 12], "natur": [4, 7, 8, 10, 11, 12, 62, 81], "scope": [4, 7, 8, 10, 11, 12], "set_non_tensor": [4, 7, 8, 10, 11, 12], "inform": [4, 6, 7, 8, 10, 11, 12, 17, 20, 21, 24, 26, 27, 49, 52, 81, 87], "half": [4, 7, 8, 10, 11, 12], "insert": [4, 7, 8, 10, 11, 12], "int16": [4, 7, 8, 10, 11, 12], "int32": [4, 7, 8, 10, 11, 12], "int8": [4, 7, 8, 10, 11, 12], "irecv": [4, 7, 8, 10, 11, 12], "src": [4, 7, 8, 10, 11, 12], "return_prematur": [4, 7, 8, 10, 11, 12], "init_tag": [4, 7, 8, 10, 11, 12], "pseudo_rand": [4, 7, 8, 10, 11, 12], "asynchron": [4, 6, 7, 8, 10, 11, 12, 36], "isend": [4, 7, 8, 10, 11, 12], "wait": [4, 7, 8, 10, 11, 12, 89], "complet": [4, 7, 8, 10, 11, 12, 80, 92], "withing": [4, 7, 8, 10, 11, 12], "tag": [4, 7, 8, 10, 11, 12], "pseudo": [4, 7, 8, 10, 11, 12], "random": [4, 7, 8, 10, 11, 12, 43, 84, 89, 93], "overlap": [4, 7, 8, 10, 11, 12], "1e": [4, 7, 8, 10, 11, 12, 53, 55, 56, 83, 88], "sec": [4, 7, 8, 10, 11, 12, 87], "slow": [4, 6, 7, 8, 10, 11, 12, 39], "down": [4, 7, 8, 10, 11, 12], "runtim": [4, 7, 8, 10, 11, 12, 45, 54, 78, 84, 89], "your": [4, 7, 8, 10, 11, 12, 43, 69, 79, 81, 89], "algorithm": [4, 7, 8, 10, 11, 12], "is_consolid": [4, 7, 8, 10, 11, 12], "is_contigu": [4, 7, 8, 10, 11, 12], "is_empti": [4, 7, 8, 10, 11, 12], "__not__": [4, 7, 8, 10, 11, 12, 52], "share_memory_": [4, 7, 8, 10, 11, 12], "eg": [4, 6, 7, 8, 10, 11, 12, 39], "increment": [4, 7, 8, 10, 11, 12, 87], "queue": [4, 5, 7, 8, 10, 11, 12, 87], "fut": [4, 7, 8, 10, 11, 12], "timeout": [4, 7, 8, 10, 11, 12, 87], "isfinit": [4, 7, 8, 10, 11, 12], "finit": [4, 7, 8, 10, 11, 12], "nan": [4, 7, 8, 10, 11, 12], "neg": [4, 7, 8, 10, 11, 12, 90, 94], "infin": [4, 7, 8, 10, 11, 12], "imaginari": [4, 7, 8, 10, 11, 12], "part": [4, 7, 8, 10, 11, 12, 44, 54, 78, 81, 84, 89], "isnan": [4, 7, 8, 10, 11, 12], "isneginf": [4, 7, 8, 10, 11, 12], "test": [4, 7, 8, 10, 11, 12, 72, 75, 79, 83, 84, 88, 94], "isposinf": [4, 7, 8, 10, 11, 12], "isreal": [4, 7, 8, 10, 11, 12], "Be": [4, 7, 8, 10, 11, 12], "mind": [4, 7, 8, 10, 11, 12, 42, 94], "signific": [4, 7, 8, 10, 11, 12, 89], "deal": [4, 7, 8, 10, 11, 12, 84, 87], "larg": [4, 6, 7, 8, 10, 11, 12, 39, 81, 84, 89, 90], "_lazystackedtensordictkeysview": [4, 7], "shoulb": [4, 7, 8, 10, 11, 12], "lerp": [4, 7, 8, 10, 11, 12], "end": [4, 7, 8, 10, 11, 12, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95], "interpol": [4, 7, 8, 10, 11, 12], "formula": [4, 7, 8, 10, 11, 12], "lerp_": [4, 7, 8, 10, 11, 12], "lgamma": [4, 7, 8, 10, 11, 12], "lgamma_": [4, 7, 8, 10, 11, 12], "pathlib": [4, 6, 7, 8, 10, 11, 12, 35, 36, 89], "load_memmap": [4, 6, 7, 8, 10, 11, 12, 35, 79, 81], "load_": [4, 6, 7, 8, 10, 11, 12], "load_memmap_": [4, 6, 7, 8, 10, 11, 12], "folder": [4, 6, 7, 8, 10, 11, 12, 36], "fetch": [4, 6, 7, 8, 10, 11, 12, 36], "sens": [4, 6, 7, 8, 10, 11, 12, 36, 84], "total": [4, 6, 7, 8, 10, 11, 12, 36, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "actual": [4, 6, 7, 8, 10, 11, 12, 36], "synchron": [4, 6, 7, 8, 10, 11, 12, 36], "saved_td": [4, 6, 7, 8, 10, 11, 12, 36], "td_load": [4, 6, 7, 8, 10, 11, 12, 36, 81], "fake": [4, 6, 7, 8, 10, 11, 12, 36], "temporarydirectori": [4, 6, 7, 8, 10, 11, 12, 36, 81], "_subclass": [4, 6, 7, 8, 10, 11, 12, 36], "faketensormod": [4, 6, 7, 8, 10, 11, 12, 36], "faketensor": [4, 6, 7, 8, 10, 11, 12, 36], "info": [4, 7, 8, 10, 11, 12, 84], "ordereddict": [4, 7, 8, 10, 11, 12, 44, 48], "strict": [4, 6, 7, 8, 10, 11, 12, 79], "from_flatten": [4, 6, 7, 8, 10, 11, 12], "format": [4, 7, 8, 10, 11, 12, 66, 79, 81, 87], "preserv": [4, 7, 8, 10, 11, 12, 41, 92], "data_zero": [4, 7, 8, 10, 11, 12], "sd": [4, 7, 8, 10, 11, 12], "lock_": [4, 7, 8, 10, 11, 12, 80, 94], "__setitem__": [4, 7, 8, 10, 11, 12], "rename_key_": [4, 7, 8, 10, 11, 12, 90], "decor": [4, 7, 8, 9, 10, 11, 12, 63, 69, 72, 79, 84], "is_lock": [4, 7, 8, 10, 11, 12, 80], "error": [4, 6, 7, 8, 10, 11, 12, 39, 75, 76, 81, 83, 88], "except": [4, 5, 6, 7, 8, 10, 11, 12, 39, 47, 52, 57, 79, 80, 81, 87, 93], "del": [4, 7, 8, 10, 11, 12, 81, 90], "No": [4, 7, 8, 10, 11, 12, 92], "move": [4, 7, 8, 10, 11, 12, 65, 89, 91], "log": [4, 7, 8, 10, 11, 12, 43, 44, 51, 54, 62, 84, 92], "log10": [4, 7, 8, 10, 11, 12], "log10_": [4, 7, 8, 10, 11, 12], "log1p": [4, 7, 8, 10, 11, 12], "log1p_": [4, 7, 8, 10, 11, 12], "log2": [4, 7, 8, 10, 11, 12], "log2_": [4, 7, 8, 10, 11, 12], "log_": [4, 7, 8, 10, 11, 12], "logical_and": [4, 7, 8, 10, 11, 12], "logic": [4, 7, 8, 10, 11, 12, 84, 88, 89, 92], "logsumexp": [4, 7, 8, 10, 11, 12], "exponenti": [4, 7, 8, 10, 11, 12], "row": [4, 7, 8, 10, 11, 12, 93, 95], "stabil": [4, 7, 8, 10, 11, 12], "len": [4, 7, 8, 10, 11, 12, 65, 83, 87, 88, 89, 94], "fewer": [4, 7, 8, 10, 11, 12], "retain": [4, 7, 8, 10, 11, 12], "make_memmap": [4, 7, 8, 10, 11, 12], "memmap_refresh_": [4, 6, 7, 8, 10, 11, 12], "make_memmap_from_storag": [4, 7, 8, 10, 11, 12], "untypedstorag": [4, 7, 8, 10, 11, 12], "associ": [4, 5, 6, 7, 8, 10, 11, 12, 39, 40, 76, 91], "make_memmap_from_tensor": [4, 7, 8, 10, 11, 12], "copy_data": [4, 5, 7, 8, 10, 11, 12], "replic": [4, 7, 8, 10, 11, 12], "num_work": [4, 7, 8, 10, 11, 12, 89], "chunksiz": [4, 7, 8, 10, 11, 12], "num_chunk": [4, 7, 8, 10, 11, 12], "pool": [4, 7, 8, 10, 11, 12], "max_tasks_per_child": [4, 7, 8, 10, 11, 12], "worker_thread": [4, 7, 8, 10, 11, 12], "index_with_gener": [4, 7, 8, 10, 11, 12], "pbar": [4, 7, 8, 10, 11, 12, 89], "mp_start_method": [4, 7, 8, 10, 11, 12], "callab": [4, 7, 8, 10, 11, 12], "virtual": [4, 7, 8, 10, 11, 12], "tread": [4, 7, 8, 10, 11, 12], "tb": [4, 7, 8, 10, 11, 12], "ndim": [4, 7, 8, 10, 11, 12], "inward": [4, 7, 8, 10, 11, 12], "restack": [4, 7, 8, 10, 11, 12], "equat": [4, 7, 8, 10, 11, 12], "doabl": [4, 7, 8, 10, 11, 12], "job": [4, 7, 8, 10, 11, 12], "seed": [4, 7, 8, 10, 11, 12], "unseed": [4, 7, 8, 10, 11, 12], "taken": [4, 7, 8, 10, 11, 12], "low": [4, 7, 8, 10, 11, 12], "autocorrel": [4, 7, 8, 10, 11, 12], "experi": [4, 7, 8, 10, 11, 12, 89], "These": [4, 7, 8, 10, 11, 12, 48, 70, 80, 81, 93, 94], "NOT": [4, 7, 8, 10, 11, 12, 81], "imposs": [4, 7, 8, 10, 11, 12], "pick": [4, 7, 8, 10, 11, 12], "howev": [4, 7, 8, 10, 11, 12, 44, 79, 80, 81, 87, 90, 91, 92], "uncorrel": [4, 7, 8, 10, 11, 12], "child": [4, 7, 8, 10, 11, 12, 44], "spare": [4, 7, 8, 10, 11, 12], "init": [4, 7, 8, 10, 11, 12], "gain": [4, 7, 8, 10, 11, 12], "progress": [4, 7, 8, 10, 11, 12], "bar": [4, 7, 8, 10, 11, 12, 89], "fork": [4, 7, 8, 10, 11, 12], "process_data": [4, 7, 8, 10, 11, 12], "1_000_000": [4, 6, 7, 8, 10, 11, 12, 80, 81, 92], "map_it": [4, 7, 8, 10, 11, 12], "shuffl": [4, 7, 8, 10, 11, 12], "yield": [4, 7, 8, 10, 11, 12, 81], "dataload": [4, 7, 8, 10, 11, 12, 81, 89], "fashion": [4, 6, 7, 8, 10, 11, 12, 39], "sampl": [4, 7, 8, 10, 11, 12, 43, 44, 46, 54, 62, 78, 92], "prohibit": [4, 7, 8, 10, 11, 12, 92], "unlock_": [4, 7, 8, 10, 11, 12, 80, 94], "break": [4, 7, 8, 10, 11, 12, 81, 83, 88, 92], "masked_fil": [4, 7, 8, 10, 11, 12, 89], "masked_fill_": [4, 7, 8, 10, 11, 12], "masked_select": [4, 7, 8, 10, 11, 12], "td_mask": [4, 7, 8, 10, 11, 12], "dimensionless": [4, 7, 8, 10, 11, 12], "2942": [4, 7, 8, 10, 11, 12], "maximum_": [4, 7, 8, 10, 11, 12], "maybe_dense_stack": [4, 7, 8, 10, 11, 12], "liter": [4, 7, 8, 10, 11, 12], "permit": [4, 5, 7, 8, 10, 11, 12], "reduct": [4, 7, 8, 10, 11, 12], "overflow": [4, 7, 8, 10, 11, 12], "0547": [4, 7, 8, 10, 11, 12], "existsok": [4, 5, 6, 7, 8, 10, 11, 12], "correct": [4, 6, 7, 8, 10, 11, 12, 39, 83, 88], "oom": [4, 6, 7, 8, 10, 11, 12, 39], "throw": [4, 6, 7, 8, 10, 11, 12, 39], "onc": [4, 6, 7, 8, 10, 11, 12, 39, 47, 84, 89, 94], "unlock": [4, 6, 7, 8, 10, 11, 12, 39, 80], "turn": [4, 6, 7, 8, 10, 11, 12, 39, 42, 78, 84], "becaus": [4, 6, 7, 8, 9, 10, 11, 12, 39, 79, 80, 81, 83, 84, 88, 89, 93], "cross": [4, 6, 7, 8, 10, 11, 12, 39, 83, 88], "anymor": [4, 6, 7, 8, 10, 11, 12, 39, 81], "tensordictfutur": [4, 6, 7, 8, 10, 11, 12, 39], "might": [4, 6, 7, 8, 10, 11, 12, 39], "deepli": [4, 6, 7, 8, 10, 11, 12, 39], "recommend": [4, 6, 7, 8, 10, 11, 12, 39, 44, 69], "insid": [4, 6, 7, 8, 10, 11, 12, 39, 83, 88, 89], "memmap_lik": [4, 6, 7, 8, 10, 11, 12, 81, 91], "contentless": [4, 6, 7, 8, 10, 11, 12], "64": [4, 6, 7, 8, 10, 11, 12, 81, 83, 87, 88, 89], "refresh": [4, 6, 7, 8, 10, 11, 12], "saved_path": [4, 6, 7, 8, 10, 11, 12], "9953": [4, 7, 8, 10, 11, 12], "minimum_": [4, 7, 8, 10, 11, 12], "subtract": [4, 7, 8, 10, 11, 12, 80], "mul_": [4, 7, 8, 10, 11, 12], "named_appli": [4, 7, 8, 10, 11, 12], "nested_kei": [4, 7, 8, 10, 11, 12], "condit": [4, 7, 8, 10, 11, 12, 44, 48], "atensordict": [4, 7, 8, 10, 11, 12], "name_filt": [4, 7, 8, 10, 11, 12], "nanmean": [4, 7, 8, 10, 11, 12], "nansum": [4, 7, 8, 10, 11, 12], "neg_": [4, 7, 8, 10, 11, 12], "new_empti": [4, 7, 8, 10, 11, 12], "requires_grad": [4, 7, 8, 10, 11, 12], "emtpi": [4, 7, 8, 10, 11, 12], "By": [4, 7, 8, 10, 11, 12, 43, 69, 84, 87, 90, 91, 92], "unchang": [4, 7, 8, 10, 11, 12], "record": [4, 7, 8, 10, 11, 12], "new_ful": [4, 7, 8, 10, 11, 12], "fill_valu": [4, 5, 7, 8, 10, 11, 12], "new_on": [4, 7, 8, 10, 11, 12], "new_tensor": [4, 7, 8, 10, 11, 12], "new_zero": [4, 7, 8, 10, 11, 12], "non_tensor_item": [4, 7, 8, 10, 11, 12], "mayb": [4, 7, 8, 10, 11, 12], "least": [4, 7, 8, 10, 11, 12, 44, 79], "expos": [4, 7, 8, 10, 11, 12, 44, 80, 88, 89, 92, 94], "param_count": [4, 7, 8, 10, 11, 12], "dims_list": [4, 7, 8, 10, 11, 12], "permutedtensordict": [4, 7, 8, 10, 11, 12], "threadpoolexecutor": [4, 7, 8, 10, 11, 12], "max_work": [4, 7, 8, 10, 11, 12], "pin_memory_": [4, 7, 8, 10, 11, 12], "pop": [4, 7, 8, 10, 11, 12], "thrown": [4, 5, 7, 8, 10, 11, 12, 79], "popitem": [4, 7, 8, 10, 11, 12], "pow": [4, 7, 8, 10, 11, 12], "expon": [4, 7, 8, 10, 11, 12], "pow_": [4, 7, 8, 10, 11, 12], "prod": [4, 7, 8, 10, 11, 12], "qint32": [4, 7, 8, 10, 11, 12], "qint8": [4, 7, 8, 10, 11, 12], "quint4x2": [4, 7, 8, 10, 11, 12], "quint8": [4, 7, 8, 10, 11, 12], "reciproc": [4, 7, 8, 10, 11, 12], "reciprocal_": [4, 7, 8, 10, 11, 12], "record_stream": [4, 7, 8, 10, 11, 12], "dealloc": [4, 7, 8, 10, 11, 12], "reus": [4, 7, 8, 10, 11, 12], "queu": [4, 7, 8, 10, 11, 12], "recv": [4, 7, 8, 10, 11, 12], "async_op": [4, 7, 8, 10, 11, 12], "machin": [4, 7, 8, 10, 11, 12], "go": [4, 7, 8, 10, 11, 12, 81, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95], "special": [4, 7, 8, 10, 11, 12, 72, 92], "lift": [4, 7, 8, 10, 11, 12], "coexist": [4, 7, 8, 10, 11, 12], "nice": [4, 7, 8, 10, 11, 12, 87], "awar": [4, 7, 8, 10, 11, 12, 41], "greedili": [4, 7, 8, 10, 11, 12], "tdr": [4, 7, 8, 10, 11, 12], "rename_map": [4, 7, 8, 10, 11, 12], "abcd": [4, 7, 8, 10, 11, 12], "td_renam": [4, 7, 8, 10, 11, 12], "abgd": [4, 7, 8, 10, 11, 12], "rename_": [4, 7, 8, 10, 11, 12], "old_kei": [4, 7, 8, 10, 11, 12], "new_kei": [4, 7, 8, 10, 11, 12], "behav": [4, 7, 8, 10, 11, 12, 47, 57, 94], "tile": [4, 7, 8, 10, 11, 12], "repeat_interleav": [4, 7, 8, 10, 11, 12], "repetit": [4, 7, 8, 10, 11, 12], "replac": [4, 7, 8, 10, 11, 12, 94], "addition": [4, 7, 8, 10, 11, 12, 90], "requires_grad_": [4, 7, 8, 10, 11, 12], "round": [4, 7, 8, 10, 11, 12], "round_": [4, 7, 8, 10, 11, 12], "valish": [4, 7, 8, 10, 11, 12], "soon": [4, 7, 8, 10, 11, 12, 87, 94], "select": [4, 7, 8, 10, 11, 12, 33, 46, 48, 78, 81, 87, 95], "depriv": [4, 7, 8, 10, 11, 12], "split_kei": [4, 7, 8, 10, 11, 12], "td_a_c": [4, 7, 8, 10, 11, 12], "host": [4, 7, 8, 10, 11, 12], "yet": [4, 7, 8, 10, 11, 12, 84, 89], "mismatch": [4, 7, 8, 10, 11, 12], "set_at_": [4, 7, 8, 10, 11, 12], "setdefault": [4, 7, 8, 10, 11, 12, 90], "Will": [4, 7, 8, 10, 11, 12], "sigmoid_": [4, 7, 8, 10, 11, 12], "sign": [4, 7, 8, 10, 11, 12], "sign_": [4, 7, 8, 10, 11, 12], "sin": [4, 7, 8, 10, 11, 12], "sin_": [4, 7, 8, 10, 11, 12], "sinh": [4, 7, 8, 10, 11, 12], "sinh_": [4, 7, 8, 10, 11, 12], "sorted_kei": [4, 7, 8, 10, 11, 12], "_nestedkei": [4, 7, 8, 10, 11, 12, 66], "cach": [4, 7, 8, 10, 11, 12, 92], "split_siz": [4, 7, 8, 10, 11, 12], "key_set": [4, 7, 8, 10, 11, 12], "reproduce_struct": [4, 7, 8, 10, 11, 12], "subset": [4, 7, 8, 10, 11, 12, 89, 90, 94], "td_a": [4, 7, 8, 10, 11, 12], "td_bc": [4, 7, 8, 10, 11, 12], "td_d": [4, 7, 8, 10, 11, 12], "sqrt": [4, 7, 8, 10, 11, 12, 80], "squar": [4, 7, 8, 10, 11, 12], "sqrt_": [4, 7, 8, 10, 11, 12], "singleton": [4, 7, 8, 10, 11, 12, 94], "alter": [4, 7, 8, 10, 11, 12], "implicit": [4, 7, 8, 10, 11, 12], "stack_from_tensordict": [4, 7, 8, 10, 11, 12], "stack_tensor": [4, 7, 8, 10, 11, 12], "keep_var": [4, 6, 7, 8, 10, 11, 12, 81], "rebuild": [4, 7, 8, 10, 11, 12, 81, 92], "compos": [4, 7, 8, 10, 11, 12, 87, 89], "__batch_siz": [4, 7, 8, 10, 11, 12], "__devic": [4, 7, 8, 10, 11, 12], "std": [4, 7, 8, 10, 11, 12, 53, 56], "standard": [4, 7, 8, 10, 11, 12, 80, 84], "deviat": [4, 7, 8, 10, 11, 12], "freedom": [4, 7, 8, 10, 11, 12], "bessel": [4, 7, 8, 10, 11, 12], "0006": [4, 7, 8, 10, 11, 12], "sub_": [4, 7, 8, 10, 11, 12], "tan": [4, 7, 8, 10, 11, 12], "tan_": [4, 7, 8, 10, 11, 12], "tanh": [4, 7, 8, 10, 11, 12], "tanh_": [4, 7, 8, 10, 11, 12], "whose": [4, 7, 8, 10, 11, 12, 48, 90, 92, 93, 94, 95], "memory_format": [4, 7, 8, 10, 11, 12, 84], "4d": [4, 7, 8, 10, 11, 12], "undertook": [4, 7, 8, 10, 11, 12], "non_blocking_pin": [4, 7, 8, 10, 11, 12], "slower": [4, 7, 8, 10, 11, 12, 87], "multithread": [4, 7, 8, 10, 11, 12], "benefici": [4, 7, 8, 10, 11, 12], "outweigh": [4, 7, 8, 10, 11, 12], "benefit": [4, 7, 8, 10, 11, 12, 84], "small": [4, 7, 8, 10, 11, 12, 81, 84, 94], "get_num_thread": [4, 7, 8, 10, 11, 12], "cancel": [4, 7, 8, 10, 11, 12, 87], "data_cuda": [4, 7, 8, 10, 11, 12], "data_int": [4, 7, 8, 10, 11, 12], "data_cuda_int": [4, 7, 8, 10, 11, 12], "retain_non": [4, 7, 8, 10, 11, 12], "to_h5": [4, 7, 8, 10, 11, 12], "backend": [4, 7, 8, 10, 11, 12], "h5py": [4, 7, 8, 10, 11, 12], "create_dataset": [4, 7, 8, 10, 11, 12], "persitenttensordict": [4, 7, 8, 10, 11, 12], "link": [4, 7, 8, 10, 11, 12], "newli": [4, 7, 8, 10, 11, 12], "timeit": [4, 7, 8, 10, 11, 12], "from_tensor": [4, 5, 7, 8, 10, 11, 12], "namedtemporaryfil": [4, 5, 7, 8, 10, 11, 12], "td_h5": [4, 7, 8, 10, 11, 12], "compress": [4, 7, 8, 10, 11, 12], "gzip": [4, 7, 8, 10, 11, 12], "compression_opt": [4, 7, 8, 10, 11, 12], "1000000": [4, 7, 8, 10, 11, 12], "return_swap": [4, 7, 8, 10, 11, 12], "swap_dest": [4, 7, 8, 10, 11, 12], "memo": [4, 7, 8, 10, 11, 12], "temporarili": [4, 7, 8, 10, 11, 12, 44, 80], "swap": [4, 7, 8, 10, 11, 12, 94], "zero_": [4, 7, 8, 10, 11, 12, 80], "rubric": [4, 7, 8, 10, 11, 12, 46, 48], "remak": [4, 7, 8, 10, 11, 12], "repopul": [4, 7, 8, 10, 11, 12], "dest_cl": [4, 7, 8, 10, 11, 12], "to_padded_tensor": [4, 7, 8, 10, 11, 12], "pad": [4, 7, 8, 10, 11, 12, 66], "mask_kei": [4, 7, 8, 10, 11, 12], "adapt": [4, 7, 8, 10, 11, 12, 94], "valid": [4, 7, 8, 10, 11, 12, 19, 41, 66, 72, 79, 89, 91], "arr": [4, 7, 8, 10, 11, 12], "switch": [4, 7, 8, 10, 11, 12, 87, 92], "transpos": [4, 7, 8, 10, 11, 12, 70, 94], "dim0": [4, 7, 8, 10, 11, 12], "dim1": [4, 7, 8, 10, 11, 12], "tensordict_transpos": [4, 7, 8, 10, 11, 12], "trunc": [4, 7, 8, 10, 11, 12], "trunc_": [4, 7, 8, 10, 11, 12], "dst_type": [4, 7, 8, 10, 11, 12], "uint16": [4, 7, 8, 10, 11, 12], "uint32": [4, 7, 8, 10, 11, 12], "uint64": [4, 7, 8, 10, 11, 12], "unflattened_s": [4, 7, 8, 10, 11, 12], "td_unflat": [4, 7, 8, 10, 11, 12], "compris": [4, 7, 8, 10, 11, 12], "input_dict_or_td": [4, 7, 8, 10, 11, 12], "keys_to_upd": [4, 7, 8, 10, 11, 12], "key_to_upd": [4, 7, 8, 10, 11, 12], "data_dest": [4, 7, 8, 10, 11, 12], "data_src": [4, 7, 8, 10, 11, 12], "dest": [4, 7, 8, 10, 11, 12, 52, 73], "reli": [4, 7, 8, 10, 11, 12, 79, 81, 92, 94], "other_td": [4, 7, 8, 10, 11, 12], "though": [4, 7, 8, 10, 11, 12, 79, 84, 89, 94], "unknown": [4, 7, 8, 10, 11, 12], "valid_kei": [4, 7], "var": [4, 7, 8, 10, 11, 12], "varianc": [4, 7, 8, 10, 11, 12, 53, 56], "td_view": [4, 7, 8, 10, 11, 12], "depend": [4, 7, 8, 10, 11, 12, 43, 44, 48, 63, 84], "booltensor": [4, 7, 8, 10, 11, 12, 95], "nonzero": [4, 7, 8, 10, 11, 12], "set_to_non": [4, 7, 8, 10, 11, 12, 29], "resid": 5, "filepath": 5, "undefin": [5, 12, 79], "memmap_tensor": 5, "memmap_tensor_empti": 5, "empty_lik": 5, "memmap_tensor_zero": 5, "ones_lik": 5, "ok": [5, 92], "overwrit": 5, "empty_nest": 5, "nested_shap": 5, "from_filenam": 5, "nested_tensor": [5, 87], "from_handl": 5, "inadvert": [5, 81], "overrid": [5, 12, 84], "full_lik": 5, "seq": [5, 42, 44, 46, 48, 49, 84], "_metadata": 6, "_is_non_tensor": 6, "from_tensordict": 6, "non_tensordict": 6, "wrapper": [6, 7, 12, 41, 43, 45, 47, 49], "attemptedli": 6, "maybe_to_stack": [6, 7], "setattr": 6, "tent": 6, "tolist": [6, 7], "thin": 7, "around": [7, 43, 45, 49, 87, 92], "recogniz": 7, "j": 7, "valueerror": [7, 12, 44], "interchang": 7, "extract": [7, 84, 89], "persist": [8, 12, 81], "close": 8, "materi": 8, "reman": 8, "ptd": 8, "recur": [8, 10, 11, 12, 92], "_persistenttdkeysview": 8, "fall": [8, 10, 11, 12, 38], "better": [9, 89], "non_tensor": [9, 79], "bracket": 9, "autocast": [9, 19, 72], "nocast": [9, 19, 72], "frozen": [9, 19, 72], "anticip": 9, "conflict": [9, 92], "parent": [9, 11, 12, 81], "notabl": 10, "algebra": 10, "expend": 10, "td_unsqueez": 10, "a_view": 10, "td_cpu": 10, "td_or_dict": 10, "old_nam": 10, "new_nam": 10, "tensordict_list": 10, "lsit": 10, "deliv": [10, 94], "fastest": 10, "movement": 10, "creation": 10, "potenti": [10, 12, 76], "td_unqueez": 10, "hasn": 10, "_tensordictkeysview": 10, "no_convert": 12, "exposur": 12, "hold": [12, 83, 88, 89], "seamless": 12, "enabl": [12, 19, 78, 79, 92], "named_paramet": [12, 90], "compar": [12, 89, 92], "inner": 12, "afterward": [12, 43, 47, 49, 92], "p": [12, 44], "custommodul": 12, "add_modul": 12, "submodul": [12, 48], "direct": 12, "member": 12, "xdoctest": 12, "skip": [12, 43, 63], "buf": 12, "20l": 12, "1l": 12, "5l": 12, "__call__": [12, 43, 89], "eval": [12, 83, 88], "dropout": 12, "batchnorm": 12, "disabl": [12, 19, 72, 79], "comparison": 12, "mechan": 12, "confus": 12, "extra_repr": 12, "line": [12, 81], "multi": [12, 92], "overridden": [12, 43, 47, 49, 54], "recip": [12, 43, 47, 49], "get_buff": 12, "docstr": 12, "get_submodul": 12, "explan": 12, "correctli": [12, 84], "fulli": [12, 84, 89, 92], "qualifi": 12, "referenc": 12, "attributeerror": 12, "invalid": 12, "resolv": [12, 92], "get_extra_st": 12, "set_extra_st": 12, "picklabl": 12, "form": [12, 42, 43, 65], "get_paramet": 12, "sai": 12, "net_b": 12, "net_c": 12, "conv": 12, "conv2d": 12, "kernel_s": 12, "in_featur": [12, 83, 88], "out_featur": [12, 83, 88], "200": 12, "diagram": 12, "named_modul": 12, "o": [12, 89], "transit": 12, "ipu": 12, "network": [12, 45, 78, 84, 92], "l": 12, "mtia": 12, "named_buff": 12, "remove_dupl": 12, "prepend": 12, "running_var": 12, "named_children": 12, "conv4": 12, "conv5": 12, "typic": [12, 44, 45, 81, 87], "register_backward_hook": 12, "removablehandl": 12, "deprec": [12, 54, 62, 94], "favor": [12, 62], "register_full_backward_hook": 12, "register_buff": 12, "running_mean": 12, "alongsid": 12, "num_featur": 12, "register_forward_hook": 12, "with_kwarg": 12, "always_cal": 12, "posit": [12, 53, 56], "fire": 12, "register_module_forward_hook": 12, "register_forward_pre_hook": 12, "invok": [12, 84], "And": [12, 92], "forward_pr": 12, "register_module_forward_pre_hook": 12, "grad_input": 12, "grad_output": 12, "technic": 12, "caller": 12, "register_module_full_backward_hook": 12, "register_full_backward_pre_hook": 12, "backward_pr": 12, "register_module_full_backward_pre_hook": 12, "register_get_post_hook": 12, "register_load_state_dict_post_hook": 12, "post": 12, "incompatible_kei": 12, "missing_kei": 12, "unexpected_kei": 12, "register_load_state_dict_pre_hook": 12, "local_metadata": 12, "error_msg": 12, "noqa": [12, 83, 88, 89], "b950": 12, "register_modul": 12, "alia": [12, 15, 31], "register_paramet": 12, "register_state_dict_post_hook": 12, "register_state_dict_pre_hook": 12, "set_submodul": 12, "doesn": 12, "to_empti": 12, "xpu": 12, "allow_non": [13, 33], "captur": [13, 41, 69, 84], "seealso": 13, "set_capture_non_tensor_stack": 13, "_default_is_leaf": 15, "td_list": [16, 81], "obtrain": 16, "infeas": 16, "thu": [16, 44, 48], "assert_allclose_td": 16, "td_lazi": 16, "td_contain": 16, "td_container_clon": 16, "push": 16, "reveal": 16, "shadow": [19, 72], "immut": 19, "unintend": [19, 72], "consequ": [19, 72], "x2": 19, "h5_file": 21, "statu": 29, "arg0": 30, "_is_leaf_nontensor": 31, "datatyp": 32, "lib": [32, 84], "istanc": 32, "incompat": [37, 60], "callback_exist": 40, "merg": 40, "callback": 40, "b0": 40, "b1": 40, "warmup": [41, 92], "cudagraph": 41, "friendli": 41, "gpu": [41, 89], "essenti": [41, 89], "meet": 41, "fullfil": 41, "flow": 41, "fail": [41, 52], "fortun": [41, 87], "constant": [41, 65], "loss_val": 41, "loss_fn": [41, 83, 88], "differnti": 41, "differenti": 41, "adam": 41, "lr": [41, 83, 88], "irrespect": 41, "discourag": 41, "pytreeabl": 41, "coupl": 41, "suffici": [41, 81], "treat": 41, "alik": 41, "num_copi": [42, 78], "parameter_init_funct": 42, "expand_input": 42, "cnn": 42, "mlp": [42, 92], "mod": [42, 44, 46, 48, 49, 78, 84], "off": 42, "bork": [42, 46], "dork": [42, 46], "next_modul": 42, "spork": 42, "e0": 42, "e1": 42, "probabilist": [43, 44, 54, 84], "parametr": [43, 56, 84, 92], "embed": [43, 45, 84], "loos": 43, "speak": 43, "rule": [43, 92], "default_interaction_typ": [43, 44, 84, 92], "interaction_typ": [43, 44, 92], "get_dist": [43, 44, 92], "dist": [43, 44, 54, 62, 84, 92], "median": [43, 92], "rsampl": [43, 54], "suppli": 43, "delta": 43, "determinist": [43, 44, 84], "importantli": 43, "interest": [43, 84], "loc": [43, 44, 48, 53, 54, 56, 58, 62, 78, 84, 89, 92], "normal": [43, 44, 48, 54, 58, 62, 78, 84, 89, 92], "interactiontyp": [43, 84], "randomli": [43, 89], "drawn": 43, "interact": [43, 44, 80, 81], "dictat": 43, "probabilistictdmodul": 43, "datacollectorbas": 43, "set_interaction_typ": [43, 84], "paliat": 43, "get_mod": 43, "get_median": 43, "get_mean": 43, "distribution_class": [43, 44, 48, 78, 84, 92], "compositedistribut": [43, 44, 51, 62], "distribution_map": [43, 54, 62], "name_map": [43, 54], "keywork": 43, "distribution_kwarg": [43, 44], "return_log_prob": [43, 48, 78, 92], "log_prob_kei": [43, 54], "log_prob": [43, 44, 54, 62], "sample_key_nam": 43, "_log_prob": [43, 54], "sample_log_prob": [43, 48, 54, 78, 92], "cache_dist": 43, "diverg": 43, "action": [43, 78, 80, 91, 92], "ppo": 43, "n_empirical_estim": 43, "empir": 43, "normalparamextractor": [43, 48, 78, 84, 92], "functional_modul": [43, 48], "make_funct": [43, 48], "hidden": [43, 45, 48, 78, 84, 92], "grucel": [43, 45, 78, 92], "normal_param": [43, 48, 56], "indepnorm": 43, "prob_modul": [43, 78], "td_modul": [43, 45, 47, 48, 78, 92], "td_vmap": [43, 48], "build_dist_from_param": [43, 44], "dist_params_kei": [43, 44], "dist_sample_kei": [43, 44], "_requires_sampl": 43, "extend": [44, 87], "return_composit": 44, "interdepend": 44, "termin": [44, 87], "partial_toler": [44, 48], "scan": [44, 48], "prob": [44, 57, 62, 84], "9189": 44, "sample0": 44, "loc2": 44, "sample1": 44, "sample0_log_prob": 44, "sample1_log_prob": 44, "revers": [44, 45, 94], "get_dist_param": 44, "composit": [44, 54], "aggregate_prob": [44, 54], "include_sum": 44, "warn": [44, 51, 69], "explicitli": [44, 69, 81, 92], "space": [45, 84, 89], "nestedstr": 45, "out_to_in_map": 45, "invert": [45, 59], "prevail": 45, "taensordict": 45, "neural": [45, 92], "128": [45, 92], "tgt": 45, "td_function": 45, "td_state": 45, "character": 46, "convent": 46, "tensordict_in": 46, "static": 46, "is_tdmodule_compat": 46, "reset_out_kei": [46, 48, 84], "select_out_kei": [46, 48, 84, 92], "reset_parameters_recurs": 46, "old_param": 46, "reset_paramet": 46, "rid": [46, 48, 92], "presenc": [46, 48], "trigger": [46, 48], "out_keys_sourc": [46, 48], "simplest": [46, 48, 92], "revert": [46, 48, 84], "tensordictsequenci": 48, "who": 48, "selected_out_kei": [48, 84, 92], "wish": [48, 87, 92], "clariti": 48, "7214": 48, "8748": 48, "1571": 48, "1138": 48, "grad_fn": [48, 84], "addbackward0": 48, "tensordictsequ": 48, "net1": 48, "module1": 48, "td_module1": 48, "module2": 48, "td_module2": 48, "absent": 48, "pattern": 48, "acord": 48, "idn": 48, "modulelist": 48, "0x126ed1ca0": 48, "0x129efae50": 48, "visibl": 49, "min_val": [50, 84], "01": [50, 82, 84, 86, 88], "bias": 50, "softplu": [50, 53, 56, 59, 84], "_bia": 50, "shift": 50, "nowarn": 51, "entropi": [51, 54, 62, 83, 88], "aggreg": [51, 54, 62], "mymodul": [52, 63], "keys_in": 52, "keys_out": 52, "dispatch_kwarg": 52, "mymodulenest": 52, "a_c": 52, "sep": 52, "asepc": 52, "oopsi": 52, "scale_shap": 53, "scale_map": [53, 56, 84], "scale_lb": [53, 56, 84], "0001": [53, 56, 84], "make_param": 53, "trainabl": 53, "biased_softplus_1": [53, 56], "num_output": 53, "module_norm": 53, "lstm": [53, 56], "extra_kwarg": 54, "entropy_kei": 54, "log_prob_composit": 54, "entropy_composit": 54, "cdf": 54, "icdf": 54, "tbe": 54, "sample_nam": 54, "_entropi": 54, "plu": [54, 80], "cont": [54, 62], "disc": [54, 62], "categor": [54, 57, 62], "cont_log_prob": [54, 62], "disc_log_prob": [54, 62], "atol": 55, "06": [55, 88], "rtol": 55, "batch_shap": 55, "event_shap": 55, "rel": [55, 83, 88, 94], "outcom": 55, "hot": 57, "excacli": 57, "encod": 57, "discret": [57, 84, 87], "validate_arg": 58, "truncat": 58, "peopl": 58, "sc": 58, "fsu": 58, "edu": 58, "jburkardt": 58, "truncated_norm": 58, "pdf": 58, "invers": 59, "do_softmax": 61, "somewhat": 62, "lp": 62, "0886": 62, "2155": 62, "0414": 62, "8973": 62, "5165": 62, "4402": 62, "2806": 62, "2799": 62, "1733": 62, "0407": 62, "3593": 62, "5763": 62, "in_key_attr": 63, "out_key_attr": 63, "skip_exist": 63, "abl": [63, 79, 81, 84, 87, 89, 94, 95], "fun": 63, "partial": [63, 79, 81], "intend": [63, 67], "outsid": 63, "hello": 63, "ot": 63, "mistakenli": 63, "subgraph": 63, "deactiv": [63, 79], "pad_siz": 65, "padding_left": 65, "padding_right": 65, "padding_top": 65, "padding_bottom": 65, "dim0_left": 65, "dim0_right": 65, "dim1_left": 65, "dim1_right": 65, "padded_td": [65, 66], "list_of_tensordict": 66, "pad_dim": 66, "padding_valu": 66, "return_mask": 66, "stack_len": 66, "new_shap": 66, "max_seq_length": 66, "rest": [66, 87], "list_td": 66, "pars": 67, "repr": [67, 79], "debug": [67, 84], "capture_non_tensor_stack": 69, "begin": 69, "my_funct": 69, "thie": 72, "mydata": [72, 79], "expand_and_mask": 72, "nestingmydata": 72, "nesting_data": 72, "hint": [72, 79], "help": [72, 79, 87, 89], "td_ref": 75, "in_refer": 75, "expected_in_refer": 75, "assert_clos": [75, 94], "detect": 76, "identifi": 76, "corrspond": 76, "unique_indic": 76, "occurr": 76, "return_index": 76, "output_tensordict": 76, "remove_duplicate_el": 76, "expected_output": 76, "ml": 78, "pipelin": [78, 83, 87, 88, 89, 92], "basic": [78, 87, 89], "512": [78, 83, 88], "necessarili": [78, 92], "suffic": 78, "sub_modul": 78, "summari": 78, "statist": 78, "straightforward": 78, "reiniti": 78, "ensemblemodul": 78, "compon": [78, 84, 89], "reach": 78, "predefin": 79, "__future__": [79, 81], "annot": [79, 81], "floatdata": 79, "intdata": 79, "non_tensordata": 79, "check_nest": 79, "nested_test": 79, "omit": [79, 90], "intern": 79, "remain": [79, 90, 93], "test_chang": 79, "nested_test_chang": 79, "data2": 79, "cat_tc": 79, "catted_tc": 79, "json": [79, 81], "deseri": 79, "data_load": 79, "inequ": 79, "discrep": 79, "userwarn": 79, "test_new": 79, "stack_tc": 79, "limit": [79, 84], "__setattr__": 79, "tc": [79, 81], "tc_autocast": 79, "tc_not_autocast": 79, "type0": 79, "type1": 79, "widespread": 79, "drastic": 79, "pack": 80, "situat": [80, 81], "undon": 80, "primit": [80, 84], "handi": 80, "eas": 80, "de": 80, "goe": 80, "pointer": 80, "my_imag": 80, "unint8": 80, "mini_batch": 80, "er": 80, "think": 80, "_foreach_": 80, "fuse": 80, "kernel": 80, "speed": [80, 81, 89], "imagin": 81, "mainli": 81, "magnitud": 81, "__faster__": 81, "relianc": 81, "explain": [81, 84, 89], "mmap": 81, "unsaf": 81, "memorybuff": 81, "amort": 81, "io": 81, "launch": 81, "concurr": 81, "appar": 81, "disadvantag": 81, "Not": 81, "fallback": 81, "four": 81, "weights_disk": 81, "dir": 81, "new_weight": 81, "prealloc": 81, "make_datum": 81, "255": [81, 89, 92], "dataset_s": 81, "datum": 81, "data_disk": 81, "date": 81, "system": 81, "releant": 81, "print_directory_tre": 81, "tempdir": 81, "loaded_data": 81, "tmpzy1jcaoq": 81, "_tensordict": 81, "tmpdir_0": 81, "tmpdir_1": 81, "memorymap": 81, "mainten": 81, "discontinu": 81, "checkpoint": 81, "moreov": [81, 87], "buit": 81, "huge": 81, "hundr": 81, "gb": 81, "ram": [81, 89], "don": 81, "advanc": 81, "margin": 81, "tensordict_sourc": 81, "snapshot": 81, "app_stat": 81, "my": 81, "hood": [81, 92], "tensordict_target": 81, "state_target": 81, "restor": 81, "uuid": 81, "uuid4": 81, "tensordict2": 81, "target_st": 81, "price": 81, "pai": 81, "again": [81, 90], "statedict": 81, "my_tensordict_sourc": 81, "implic": 81, "unnot": 81, "td_dest": 81, "saniti": 81, "fairli": 81, "tc_dest": 81, "02": [82, 86], "960": [82, 86], "galleri": [82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95], "mem": [82, 86], "mb": [82, 86], "tensorclass_fashion": [82, 86, 88], "00": [82, 86, 88, 89], "556": [82, 86, 88], "data_fashion": [82, 83, 86], "239": [82, 83, 86], "tensordict_modul": [82, 86, 92], "944": [82, 86, 92], "streamed_tensordict": [82, 86, 87], "020": [82, 86, 87], "tensorclass_imagenet": [82, 86, 89], "662": [82, 86, 89], "510": [82, 84, 86], "tensordict_kei": [82, 86, 90], "009": [82, 86, 90], "tensordict_shap": [82, 86, 94], "008": [82, 86, 94], "tensordict_sl": [82, 86, 95], "005": [82, 86, 95], "tensordict_memori": [82, 86, 91], "004": [82, 86, 91], "tensordict_prealloc": [82, 86, 93], "003": [82, 86, 93], "download": [83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95], "transpar": [83, 88, 89], "heavili": [83, 88], "quickstart": [83, 88], "torchvis": [83, 88, 89], "totensor": [83, 88, 89], "is_avail": [83, 88, 89], "conveni": [83, 88, 89, 92], "prepar": [83, 88], "fashionmnist": [83, 88], "cloth": [83, 88], "classifi": [83, 88], "bag": [83, 88, 94], "sneaker": [83, 88], "training_data": [83, 88], "test_data": [83, 88], "repeatedli": [83, 88], "training_data_td": 83, "test_data_td": 83, "Then": 83, "front": 83, "img": 83, "__len__": [83, 88, 89], "__getitem__": [83, 88, 89], "__getitems__": [83, 88, 89], "style": [83, 88, 89], "collat": [83, 88, 89], "collate_fn": [83, 88, 89], "train_dataload": [83, 88, 89], "tor401": [83, 88, 89], "test_dataload": [83, 88], "train_dataloader_td": 83, "test_dataloader_td": 83, "linear_relu_stack": [83, 88], "model_td": 83, "784": [83, 88], "optimis": [83, 88], "stochast": [83, 84, 88], "descent": [83, 88], "crossentropyloss": [83, 88], "sgd": [83, 88], "optimizer_td": 83, "pred": [83, 88], "7f": [83, 88], "5d": [83, 88], "adjust": [83, 88], "unpack": [83, 84, 88], "explicit": [83, 88], "train_td": 83, "num_batch": [83, 88], "test_loss": [83, 88], "no_grad": [83, 88], "argmax": [83, 88], "accuraci": [83, 88], "1f": [83, 88], "avg": [83, 88], "8f": [83, 88], "test_td": 83, "epoch": [83, 88, 89], "4f": [83, 88, 89, 92], "290510": 83, "60000": [83, 88], "284839": 83, "6400": [83, 88], "264881": 83, "12800": [83, 88], "263830": 83, "19200": [83, 88], "244232": 83, "25600": [83, 88], "205292": 83, "32000": [83, 88], "219461": 83, "38400": [83, 88], "183446": 83, "44800": [83, 88], "176852": 83, "51200": [83, 88], "145705": 83, "57600": [83, 88], "143785": 83, "145138": 83, "144874": 83, "083671": 83, "103335": 83, "058327": 83, "982232": 83, "016663": 83, "936661": 83, "930386": 83, "861388": 83, "62": [83, 87, 88], "861920": 83, "887214": 83, "866773": 83, "742616": 83, "780502": 83, "690455": 83, "621163": 83, "650021": 83, "552256": 83, "568481": 83, "467412": 83, "487226": 83, "544955": 83, "520913": 83, "368152": 83, "442105": 83, "339520": 83, "314415": 83, "346103": 83, "269417": 83, "301312": 83, "209548": 83, "63": [83, 87, 88], "232127": 83, "297895": 83, "288223": 83, "125071": 83, "230827": 83, "116470": 83, "124574": 83, "165249": 83, "100193": 83, "136446": 83, "061073": 83, "076003": 83, "7128": 83, "300641": 83, "286792": 83, "277488": 83, "278960": 83, "243804": 83, "227002": 83, "236299": 83, "200475": 83, "201549": 83, "178287": 83, "165457": 83, "173590": 83, "159660": 83, "117167": 83, "134847": 83, "059791": 83, "016824": 83, "047680": 83, "967213": 83, "975628": 83, "910065": 83, "903623": 83, "936861": 83, "903371": 83, "802169": 83, "840511": 83, "707971": 83, "668953": 83, "700669": 83, "598772": 83, "624967": 83, "527081": 83, "540781": 83, "610449": 83, "571745": 83, "435418": 83, "498587": 83, "370245": 83, "369384": 83, "389347": 83, "313928": 83, "346450": 83, "256292": 83, "276360": 83, "359597": 83, "333165": 83, "180838": 83, "275700": 83, "148089": 83, "173545": 83, "196987": 83, "135725": 83, "173700": 83, "097424": 83, "110840": 83, "2840": 83, "minut": [83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95], "jupyt": [83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95], "notebook": [83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95], "ipynb": [83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95], "zip": [83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95], "sphinx": [83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95], "author": [84, 87, 90, 91, 92, 93, 94, 95], "vincent": [84, 87, 92], "moen": [84, 87, 92], "often": [84, 87, 92], "isol": [84, 92], "hardwar": 84, "robot": 84, "drone": 84, "altogeth": 84, "onnx": 84, "stochstic": 84, "ai": 84, "distribt": 84, "latent": 84, "distrbut": 84, "5128": 84, "0000": 84, "7854": 84, "relubackward0": 84, "8976": 84, "0276": 84, "1707": 84, "0781": 84, "addmmbackward0": 84, "splitbackward0": 84, "8962": 84, "0498": 84, "clampminbackward0": 84, "quit": 84, "annoi": 84, "wast": 84, "successfulli": 84, "exportedprogram": 84, "explor": [84, 87], "graph_signatur": 84, "focu": 84, "clearer": 84, "model_export": 84, "graphmodul": 84, "fx_pytre": 84, "tree_flatten_spec": 84, "_in_spec": 84, "module_0_module_weight": 84, "module_0_module_bia": 84, "module_2_module_weight": 84, "module_2_module_bia": 84, "aten": 84, "linear_1": 84, "5254586935043335": 84, "add_1": 84, "broadcast_tensor": 84, "getitem_2": 84, "getitem_3": 84, "tree_unflatten": 84, "_out_spec": 84, "pleas": [84, 94], "print_read": 84, "tdmodul": 84, "1e6": 84, "2f": 84, "micro": 84, "542": 84, "349": 84, "p_l__args___0_module_0_module_weight": 84, "f32": 84, "p_l__args___0_module_0_module_bia": 84, "p_l__args___0_module_2_module_weight": 84, "p_l__args___0_module_2_module_bia": 84, "1080": 84, "_call_modul": 84, "continu": [84, 87], "85": 84, "71": 84, "86": 84, "env": 84, "python3": 84, "site": 84, "broadcast_al": 84, "regualar": 84, "underscor": 84, "model_nest": 84, "model_nested_export": 84, "some_kei": 84, "pure": 84, "protocol": 84, "convention": 84, "pt2": 84, "extens": 84, "recal": 84, "argu": 84, "neglig": 84, "induc": 84, "unwant": [84, 92], "module_filt": 84, "discuss": [84, 95], "address": 84, "enum": 84, "domain": 84, "recap": 84, "respond": 84, "normal_": 84, "add_2": 84, "deploy": 84, "aotinductor": 84, "tutorials_python": 85, "tutorials_jupyt": 85, "world": 87, "vari": 87, "frequenc": 87, "sensor": 87, "iot": 87, "financi": 87, "transact": 87, "social": 87, "media": [87, 89], "analyz": 87, "bucket": 87, "incom": 87, "analysi": 87, "challeng": 87, "interv": 87, "life": 87, "upcom": 87, "rectangular": 87, "bucket0": 87, "stream0": 87, "stream1": 87, "bucket1": 87, "principl": [87, 89], "data_select": 87, "data_plus_1": 87, "data_appli": 87, "data_cont": 87, "concret": 87, "asyncio": 87, "async": 87, "generate_numb": 87, "await": 87, "sleep": 87, "collect_data": 87, "stop": 87, "wait_for": 87, "nonloc": 87, "create_task": 87, "timeouterror": 87, "wait7hz": 87, "generate_task": 87, "collect_data_task": 87, "enough": 87, "streamedtensordict": 87, "from_stream": 87, "values_task": 87, "hz": 87, "7hz": 87, "70": 87, "3hz": 87, "_nested_tensor_s": 87, "61": [87, 88], "65": [87, 88], "66": 87, "67": [87, 88], "68": [87, 88], "seen": [87, 92], "leverag": 87, "scalabl": 87, "demand": [87, 94], "thank": [87, 92], "hope": 87, "4m": 88, "5k": 88, "354kb": 88, "229k": 88, "674kb": 88, "918k": 88, "09": 88, "59mb": 88, "93m": 88, "02mb": 88, "31m": 88, "8mb": 88, "0m": 88, "9mb": 88, "5m": 88, "84": 88, "2m": 88, "98": 88, "8m": 88, "1mb": 88, "327kb": 88, "42m": 88, "361kb": 88, "197k": 88, "07": 88, "575kb": 88, "819k": 88, "89mb": 88, "95m": 88, "05mb": 88, "07mb": 88, "15k": 88, "good": [88, 89], "fix": 88, "encapsul": [88, 89], "from_dataset": [88, 89], "fashionmnistdata": 88, "training_data_tc": 88, "test_data_tc": 88, "train_dataloader_tc": [88, 89], "test_dataloader_tc": 88, "model_tc": 88, "optimizer_tc": 88, "train_tc": 88, "test_tc": 88, "294965": 88, "287292": 88, "266576": 88, "278683": 88, "250108": 88, "209551": 88, "228796": 88, "175250": 88, "178073": 88, "162603": 88, "147255": 88, "148887": 88, "136040": 88, "077181": 88, "117651": 88, "045052": 88, "981834": 88, "021120": 88, "921376": 88, "941065": 88, "888172": 88, "873634": 88, "898467": 88, "866719": 88, "750464": 88, "818995": 88, "688164": 88, "645098": 88, "674996": 88, "562701": 88, "604648": 88, "510484": 88, "519940": 88, "580608": 88, "544201": 88, "397000": 88, "487276": 88, "355775": 88, "353828": 88, "365196": 88, "281428": 88, "327058": 88, "231956": 88, "256206": 88, "327660": 88, "306975": 88, "144513": 88, "265181": 88, "132882": 88, "154737": 88, "171109": 88, "101320": 88, "148764": 88, "066698": 88, "087935": 88, "5536": 88, "306347": 88, "289699": 88, "270417": 88, "266366": 88, "259475": 88, "227968": 88, "236537": 88, "207984": 88, "201340": 88, "178251": 88, "167717": 88, "181183": 88, "165066": 88, "113307": 88, "127593": 88, "093213": 88, "027253": 88, "060102": 88, "984483": 88, "988939": 88, "922549": 88, "917951": 88, "952983": 88, "915275": 88, "806700": 88, "844675": 88, "749591": 88, "690560": 88, "723969": 88, "620037": 88, "645567": 88, "544505": 88, "557646": 88, "627152": 88, "584355": 88, "438887": 88, "502807": 88, "403923": 88, "389646": 88, "410318": 88, "326928": 88, "361038": 88, "267018": 88, "288808": 88, "371098": 88, "347036": 88, "182633": 88, "276607": 88, "176979": 88, "191392": 88, "214520": 88, "142514": 88, "180152": 88, "101476": 88, "119583": 88, "2783": 88, "idea": 89, "raw": 89, "10x": 89, "speedup": 89, "imagenet": [89, 91], "subdirectori": 89, "os": 89, "strtobool": 89, "overfit": 89, "train_transform": 89, "randomresizedcrop": 89, "224": 89, "randomhorizontalflip": 89, "485": 89, "456": 89, "406": 89, "229": 89, "225": 89, "val_transform": 89, "resiz": 89, "256": [89, 92], "centercrop": 89, "imagefold": 89, "data_dir": 89, "hymenoptera_data": 89, "train_data": 89, "val_data": 89, "train_data_raw": 89, "piltotensor": 89, "vector": 89, "invaffin": 89, "crop": 89, "flip": 89, "randomhflip": 89, "bernoulli_": 89, "randomcrop": 89, "index0": 89, "index1": 89, "collate_transform": 89, "known": 89, "apriori": 89, "imagenetdata": 89, "dl": 89, "_batch": 89, "train_data_tc": 89, "val_data_tc": 89, "helper": 89, "parallel": 89, "But": 89, "val_dataload": 89, "val_dataloader_tc": 89, "measur": 89, "rate": 89, "fp": 89, "bigger": 89, "improv": 89, "aw": 89, "ec2": 89, "a100": 89, "png": 89, "alt": 89, "chart": 89, "henc": [89, 91], "__": 89, "blob": 89, "244": 89, "62it": 89, "726": 89, "25it": 89, "153": 89, "185": 89, "87it": 89, "331": 89, "01it": 89, "901": 89, "6897": 89, "2440": 89, "1355": 89, "2229": 89, "1623": 89, "547": 89, "0599": 89, "2358": 89, "19422": 89, "2563": 89, "0066": 89, "tom": [90, 91, 93, 94, 95], "beglei": [90, 91, 93, 94, 95], "accomplish": 90, "request": 90, "banana": 90, "statement": 90, "chosen": 90, "furthermor": 90, "nested_tensordict": 90, "double_nest": 90, "double_nested_a": 90, "nested_a": 90, "top": 90, "conjunct": [90, 94], "lookup": 90, "flattened_tensordict": 90, "meth": 90, "clear_devic": 91, "slowli": 91, "mm_tensordict": 91, "pt": 91, "nicola": 92, "dufour": 92, "exemplifi": 92, "introduc": 92, "unwat": 92, "programat": 92, "programmat": 92, "architectur": 92, "resnet": 92, "tini": 92, "perceptron": 92, "presum": 92, "feed": 92, "linear0": 92, "incorpor": 92, "convolut": 92, "vision": 92, "forward_hook": 92, "activ": 92, "relu0": 92, "fly": 92, "block0": 92, "relu1": 92, "linear2": 92, "block1": 92, "residu": 92, "flesh": 92, "genuin": 92, "concern": 92, "accumul": 92, "anywai": 92, "garbag": 92, "collector": 92, "opportun": 92, "deconstruct": 92, "greatli": 92, "residualblock": 92, "block_notd": 92, "block_tdm": 92, "block_td": 92, "tdm": 92, "block_notd_c": 92, "block_tdm_c": 92, "block_tds_c": 92, "218": 92, "6975": 92, "281": 92, "1207": 92, "528": 92, "4760": 92, "332": 92, "1390": 92, "340": 92, "6440": 92, "354": 92, "6840": 92, "onverhead": 92, "disappear": 92, "fact": 92, "workspac": 92, "freed": 92, "preced": 92, "wire": 92, "extractor": 92, "oblivi": 92, "manner": 92, "neat": 92, "make_tensordict": 93, "perhap": 93, "initialis": 93, "prepopul": 93, "random_tensordict": 93, "agre": [94, 95], "indexed_tensordict": 94, "reshaped_tensordict": 94, "interpret": 94, "throughout": 94, "conceptu": 94, "carri": 94, "proper": 94, "cloned_tensordict": 94, "stacked_tensordict": 94, "set_lazy_legaci": 94, "dense_stack": 94, "concatenated_tensordict": 94, "exp_tensordict": 94, "squeezed_tensordict": 94, "unsqueezed_tensordict": 94, "were": 94, "lazy_unsqueez": 94, "dense_unsqueez": 94, "bear": 94, "ever": 94, "unaffect": 94, "drop": [94, 95], "_viewedtensordict": 94, "viewed_tensordict": 94, "permuted_tensordict": 94, "quick": 94, "tdt": 94, "gathered_tensordict": 94, "6421": 94, "5483": 94, "3838": 94, "8228": 94, "3323": 94, "9210": 94, "1027": 94, "2675": 94, "6476": 94, "4272": 94, "0314": 94, "3841": 94, "simultan": 95, "new_tensordict": 95}, "objects": {"tensordict": [[4, 0, 1, "", "LazyStackedTensorDict"], [5, 0, 1, "", "MemoryMappedTensor"], [6, 0, 1, "", "NonTensorData"], [7, 0, 1, "", "NonTensorStack"], [8, 0, 1, "", "PersistentTensorDict"], [9, 0, 1, "", "TensorClass"], [10, 0, 1, "", "TensorDict"], [11, 0, 1, "", "TensorDictBase"], [12, 0, 1, "", "TensorDictParams"], [13, 0, 1, "", "capture_non_tensor_stack"], [14, 0, 1, "", "cat"], [15, 3, 1, "", "default_is_leaf"], [16, 0, 1, "", "dense_stack_tds"], [17, 0, 1, "", "from_any"], [18, 0, 1, "", "from_consolidated"], [19, 0, 1, "", "from_dataclass"], [20, 0, 1, "", "from_dict"], [21, 0, 1, "", "from_h5"], [22, 0, 1, "", "from_module"], [23, 0, 1, "", "from_modules"], [24, 0, 1, "", "from_namedtuple"], [25, 0, 1, "", "from_pytree"], [26, 0, 1, "", "from_struct_array"], [27, 0, 1, "", "from_tuple"], [28, 0, 1, "", "fromkeys"], [29, 0, 1, "", "get_defaults_to_none"], [30, 0, 1, "", "is_batchedtensor"], [31, 3, 1, "", "is_leaf_nontensor"], [32, 0, 1, "", "is_tensor_collection"], [33, 0, 1, "", "lazy_legacy"], [34, 0, 1, "", "lazy_stack"], [35, 0, 1, "", "load"], [36, 0, 1, "", "load_memmap"], [37, 0, 1, "", "make_tensordict"], [38, 0, 1, "", "maybe_dense_stack"], [39, 0, 1, "", "memmap"], [40, 0, 1, "", "merge_tensordicts"], [65, 0, 1, "", "pad"], [66, 0, 1, "", "pad_sequence"], [67, 0, 1, "", "parse_tensor_dict_string"], [68, 0, 1, "", "save"], [69, 0, 1, "", "set_capture_non_tensor_stack"], [70, 0, 1, "", "set_lazy_legacy"], [71, 0, 1, "", "stack"], [72, 0, 1, "", "tensorclass"]], "tensordict.LazyStackedTensorDict": [[4, 1, 1, "", "abs"], [4, 1, 1, "", "abs_"], [4, 1, 1, "", "acos"], [4, 1, 1, "", "acos_"], [4, 1, 1, "", "add"], [4, 1, 1, "", "add_"], [4, 1, 1, "", "addcdiv"], [4, 1, 1, "", "addcdiv_"], [4, 1, 1, "", "addcmul"], [4, 1, 1, "", "addcmul_"], [4, 1, 1, "", "all"], [4, 1, 1, "", "amax"], [4, 1, 1, "", "amin"], [4, 1, 1, "", "any"], [4, 1, 1, "", "append"], [4, 1, 1, "", "apply"], [4, 1, 1, "", "apply_"], [4, 1, 1, "", "asin"], [4, 1, 1, "", "asin_"], [4, 1, 1, "", "atan"], [4, 1, 1, "", "atan_"], [4, 1, 1, "", "auto_batch_size_"], [4, 1, 1, "", "auto_device_"], [4, 2, 1, "", "batch_dims"], [4, 2, 1, "", "batch_size"], [4, 1, 1, "", "bfloat16"], [4, 1, 1, "", "bitwise_and"], [4, 1, 1, "", "bool"], [4, 1, 1, "", "bytes"], [4, 1, 1, "", "cat"], [4, 1, 1, "", "cat_from_tensordict"], [4, 1, 1, "", "cat_tensors"], [4, 1, 1, "", "ceil"], [4, 1, 1, "", "ceil_"], [4, 1, 1, "", "chunk"], [4, 1, 1, "", "clamp"], [4, 1, 1, "", "clamp_max"], [4, 1, 1, "", "clamp_max_"], [4, 1, 1, "", "clamp_min"], [4, 1, 1, "", "clamp_min_"], [4, 1, 1, "", "clear"], [4, 1, 1, "", "clear_device_"], [4, 1, 1, "", "clear_refs_for_compile_"], [4, 1, 1, "", "clone"], [4, 1, 1, "", "complex128"], [4, 1, 1, "", "complex32"], [4, 1, 1, "", "complex64"], [4, 1, 1, "", "consolidate"], [4, 1, 1, "", "contiguous"], [4, 1, 1, "", "copy"], [4, 1, 1, "", "copy_"], [4, 1, 1, "", "copy_at_"], [4, 1, 1, "", "cos"], [4, 1, 1, "", "cos_"], [4, 1, 1, "", "cosh"], [4, 1, 1, "", "cosh_"], [4, 1, 1, "", "cpu"], [4, 1, 1, "", "create_nested"], [4, 1, 1, "", "cuda"], [4, 1, 1, "", "cummax"], [4, 1, 1, "", "cummin"], [4, 2, 1, "", "data"], [4, 1, 1, "", "data_ptr"], [4, 1, 1, "", "del_"], [4, 1, 1, "", "densify"], [4, 2, 1, "", "depth"], [4, 1, 1, "", "detach"], [4, 1, 1, "", "detach_"], [4, 2, 1, "", "device"], [4, 1, 1, "", "dim"], [4, 1, 1, "", "div"], [4, 1, 1, "", "div_"], [4, 1, 1, "", "double"], [4, 2, 1, "", "dtype"], [4, 1, 1, "", "dumps"], [4, 1, 1, "", "empty"], [4, 1, 1, "", "entry_class"], [4, 1, 1, "", "erf"], [4, 1, 1, "", "erf_"], [4, 1, 1, "", "erfc"], [4, 1, 1, "", "erfc_"], [4, 1, 1, "", "exclude"], [4, 1, 1, "", "exp"], [4, 1, 1, "", "exp_"], [4, 1, 1, "", "expand"], [4, 1, 1, "", "expand_as"], [4, 1, 1, "", "expm1"], [4, 1, 1, "", "expm1_"], [4, 1, 1, "", "fill_"], [4, 1, 1, "", "filter_empty_"], [4, 1, 1, "", "filter_non_tensor_data"], [4, 1, 1, "", "flatten"], [4, 1, 1, "", "flatten_keys"], [4, 1, 1, "", "float"], [4, 1, 1, "", "float16"], [4, 1, 1, "", "float32"], [4, 1, 1, "", "float64"], [4, 1, 1, "", "floor"], [4, 1, 1, "", "floor_"], [4, 1, 1, "", "frac"], [4, 1, 1, "", "frac_"], [4, 1, 1, "", "from_any"], [4, 1, 1, "", "from_dataclass"], [4, 1, 1, "", "from_dict"], [4, 1, 1, "", "from_dict_instance"], [4, 1, 1, "", "from_h5"], [4, 1, 1, "", "from_module"], [4, 1, 1, "", "from_modules"], [4, 1, 1, "", "from_namedtuple"], [4, 1, 1, "", "from_pytree"], [4, 1, 1, "", "from_struct_array"], [4, 1, 1, "", "from_tuple"], [4, 1, 1, "", "fromkeys"], [4, 1, 1, "", "gather"], [4, 1, 1, "", "gather_and_stack"], [4, 1, 1, "", "get"], [4, 1, 1, "", "get_at"], [4, 1, 1, "", "get_item_shape"], [4, 1, 1, "", "get_nestedtensor"], [4, 1, 1, "", "get_non_tensor"], [4, 2, 1, "", "grad"], [4, 1, 1, "", "half"], [4, 1, 1, "", "insert"], [4, 1, 1, "", "int"], [4, 1, 1, "", "int16"], [4, 1, 1, "", "int32"], [4, 1, 1, "", "int64"], [4, 1, 1, "", "int8"], [4, 1, 1, "", "irecv"], [4, 1, 1, "", "is_consolidated"], [4, 1, 1, "", "is_contiguous"], [4, 1, 1, "", "is_empty"], [4, 1, 1, "", "is_memmap"], [4, 1, 1, "", "is_shared"], [4, 1, 1, "", "isend"], [4, 1, 1, "", "isfinite"], [4, 1, 1, "", "isnan"], [4, 1, 1, "", "isneginf"], [4, 1, 1, "", "isposinf"], [4, 1, 1, "", "isreal"], [4, 1, 1, "", "items"], [4, 1, 1, "", "keys"], [4, 1, 1, "", "lazy_stack"], [4, 1, 1, "", "lerp"], [4, 1, 1, "", "lerp_"], [4, 1, 1, "", "lgamma"], [4, 1, 1, "", "lgamma_"], [4, 1, 1, "", "load"], [4, 1, 1, "", "load_"], [4, 1, 1, "", "load_memmap"], [4, 1, 1, "", "load_memmap_"], [4, 1, 1, "", "load_state_dict"], [4, 1, 1, "", "lock_"], [4, 1, 1, "", "log"], [4, 1, 1, "", "log10"], [4, 1, 1, "", "log10_"], [4, 1, 1, "", "log1p"], [4, 1, 1, "", "log1p_"], [4, 1, 1, "", "log2"], [4, 1, 1, "", "log2_"], [4, 1, 1, "", "log_"], [4, 1, 1, "", "logical_and"], [4, 1, 1, "", "logsumexp"], [4, 1, 1, "", "make_memmap"], [4, 1, 1, "", "make_memmap_from_storage"], [4, 1, 1, "", "make_memmap_from_tensor"], [4, 1, 1, "", "map"], [4, 1, 1, "", "map_iter"], [4, 1, 1, "", "masked_fill"], [4, 1, 1, "", "masked_fill_"], [4, 1, 1, "", "masked_select"], [4, 1, 1, "", "max"], [4, 1, 1, "", "maximum"], [4, 1, 1, "", "maximum_"], [4, 1, 1, "", "maybe_dense_stack"], [4, 1, 1, "", "mean"], [4, 1, 1, "", "memmap"], [4, 1, 1, "", "memmap_"], [4, 1, 1, "", "memmap_like"], [4, 1, 1, "", "memmap_refresh_"], [4, 1, 1, "", "min"], [4, 1, 1, "", "minimum"], [4, 1, 1, "", "minimum_"], [4, 1, 1, "", "mul"], [4, 1, 1, "", "mul_"], [4, 1, 1, "", "named_apply"], [4, 2, 1, "", "names"], [4, 1, 1, "", "nanmean"], [4, 1, 1, "", "nansum"], [4, 2, 1, "", "ndim"], [4, 1, 1, "", "ndimension"], [4, 1, 1, "", "neg"], [4, 1, 1, "", "neg_"], [4, 1, 1, "", "new_empty"], [4, 1, 1, "", "new_full"], [4, 1, 1, "", "new_ones"], [4, 1, 1, "", "new_tensor"], [4, 1, 1, "", "new_zeros"], [4, 1, 1, "", "non_tensor_items"], [4, 1, 1, "", "norm"], [4, 1, 1, "", "numel"], [4, 1, 1, "", "numpy"], [4, 1, 1, "", "param_count"], [4, 1, 1, "", "permute"], [4, 1, 1, "", "pin_memory"], [4, 1, 1, "", "pin_memory_"], [4, 1, 1, "", "pop"], [4, 1, 1, "", "popitem"], [4, 1, 1, "", "pow"], [4, 1, 1, "", "pow_"], [4, 1, 1, "", "prod"], [4, 1, 1, "", "qint32"], [4, 1, 1, "", "qint8"], [4, 1, 1, "", "quint4x2"], [4, 1, 1, "", "quint8"], [4, 1, 1, "", "reciprocal"], [4, 1, 1, "", "reciprocal_"], [4, 1, 1, "", "record_stream"], [4, 1, 1, "", "recv"], [4, 1, 1, "", "reduce"], [4, 1, 1, "", "refine_names"], [4, 1, 1, "", "rename"], [4, 1, 1, "", "rename_"], [4, 1, 1, "", "rename_key_"], [4, 1, 1, "", "repeat"], [4, 1, 1, "", "repeat_interleave"], [4, 1, 1, "", "replace"], [4, 1, 1, "", "requires_grad_"], [4, 1, 1, "", "reshape"], [4, 1, 1, "", "round"], [4, 1, 1, "", "round_"], [4, 1, 1, "", "save"], [4, 2, 1, "", "saved_path"], [4, 1, 1, "", "select"], [4, 1, 1, "", "send"], [4, 1, 1, "", "separates"], [4, 1, 1, "", "set"], [4, 1, 1, "", "set_"], [4, 1, 1, "", "set_at_"], [4, 1, 1, "", "set_non_tensor"], [4, 1, 1, "", "setdefault"], [4, 2, 1, "", "shape"], [4, 1, 1, "", "share_memory_"], [4, 1, 1, "", "sigmoid"], [4, 1, 1, "", "sigmoid_"], [4, 1, 1, "", "sign"], [4, 1, 1, "", "sign_"], [4, 1, 1, "", "sin"], [4, 1, 1, "", "sin_"], [4, 1, 1, "", "sinh"], [4, 1, 1, "", "sinh_"], [4, 1, 1, "", "size"], [4, 1, 1, "", "softmax"], [4, 2, 1, "", "sorted_keys"], [4, 1, 1, "", "split"], [4, 1, 1, "", "split_keys"], [4, 1, 1, "", "sqrt"], [4, 1, 1, "", "sqrt_"], [4, 1, 1, "", "squeeze"], [4, 1, 1, "", "stack"], [4, 1, 1, "", "stack_from_tensordict"], [4, 1, 1, "", "stack_tensors"], [4, 1, 1, "", "state_dict"], [4, 1, 1, "", "std"], [4, 1, 1, "", "sub"], [4, 1, 1, "", "sub_"], [4, 1, 1, "", "sum"], [4, 1, 1, "", "tan"], [4, 1, 1, "", "tan_"], [4, 1, 1, "", "tanh"], [4, 1, 1, "", "tanh_"], [4, 1, 1, "", "to"], [4, 1, 1, "", "to_dict"], [4, 1, 1, "", "to_h5"], [4, 1, 1, "", "to_module"], [4, 1, 1, "", "to_namedtuple"], [4, 1, 1, "", "to_padded_tensor"], [4, 1, 1, "", "to_pytree"], [4, 1, 1, "", "to_struct_array"], [4, 1, 1, "", "to_tensordict"], [4, 1, 1, "", "transpose"], [4, 1, 1, "", "trunc"], [4, 1, 1, "", "trunc_"], [4, 1, 1, "", "type"], [4, 1, 1, "", "uint16"], [4, 1, 1, "", "uint32"], [4, 1, 1, "", "uint64"], [4, 1, 1, "", "uint8"], [4, 1, 1, "", "unbind"], [4, 1, 1, "", "unflatten"], [4, 1, 1, "", "unflatten_keys"], [4, 1, 1, "", "unlock_"], [4, 1, 1, "", "unsqueeze"], [4, 1, 1, "", "update"], [4, 1, 1, "", "update_"], [4, 1, 1, "", "update_at_"], [4, 1, 1, "", "valid_keys"], [4, 1, 1, "", "values"], [4, 1, 1, "", "var"], [4, 1, 1, "", "view"], [4, 1, 1, "", "where"], [4, 1, 1, "", "zero_"], [4, 1, 1, "", "zero_grad"]], "tensordict.MemoryMappedTensor": [[5, 1, 1, "", "chunk"], [5, 1, 1, "", "empty"], [5, 1, 1, "", "empty_like"], [5, 1, 1, "", "empty_nested"], [5, 2, 1, "", "filename"], [5, 1, 1, "", "from_filename"], [5, 1, 1, "", "from_handler"], [5, 1, 1, "", "from_tensor"], [5, 1, 1, "", "full"], [5, 1, 1, "", "full_like"], [5, 1, 1, "", "ones"], [5, 1, 1, "", "ones_like"], [5, 1, 1, "", "unbind"], [5, 1, 1, "", "zeros"], [5, 1, 1, "", "zeros_like"]], "tensordict.NonTensorData": [[6, 2, 1, "", "device"], [6, 1, 1, "", "dumps"], [6, 1, 1, "", "fields"], [6, 1, 1, "", "from_tensordict"], [6, 1, 1, "", "get"], [6, 1, 1, "", "load"], [6, 1, 1, "", "load_"], [6, 1, 1, "", "load_memmap"], [6, 1, 1, "", "load_state_dict"], [6, 1, 1, "", "maybe_to_stack"], [6, 1, 1, "", "memmap"], [6, 1, 1, "", "memmap_"], [6, 1, 1, "", "memmap_like"], [6, 1, 1, "", "memmap_refresh_"], [6, 1, 1, "", "save"], [6, 1, 1, "", "set"], [6, 1, 1, "", "state_dict"], [6, 1, 1, "", "tolist"], [6, 1, 1, "", "unbind"]], "tensordict.NonTensorStack": [[7, 1, 1, "", "abs"], [7, 1, 1, "", "abs_"], [7, 1, 1, "", "acos"], [7, 1, 1, "", "acos_"], [7, 1, 1, "", "add"], [7, 1, 1, "", "add_"], [7, 1, 1, "", "addcdiv"], [7, 1, 1, "", "addcdiv_"], [7, 1, 1, "", "addcmul"], [7, 1, 1, "", "addcmul_"], [7, 1, 1, "", "all"], [7, 1, 1, "", "amax"], [7, 1, 1, "", "amin"], [7, 1, 1, "", "any"], [7, 1, 1, "", "append"], [7, 1, 1, "", "apply"], [7, 1, 1, "", "apply_"], [7, 1, 1, "", "asin"], [7, 1, 1, "", "asin_"], [7, 1, 1, "", "atan"], [7, 1, 1, "", "atan_"], [7, 1, 1, "", "auto_batch_size_"], [7, 1, 1, "", "auto_device_"], [7, 2, 1, "", "batch_dims"], [7, 2, 1, "", "batch_size"], [7, 1, 1, "", "bfloat16"], [7, 1, 1, "", "bitwise_and"], [7, 1, 1, "", "bool"], [7, 1, 1, "", "bytes"], [7, 1, 1, "", "cat"], [7, 1, 1, "", "cat_from_tensordict"], [7, 1, 1, "", "cat_tensors"], [7, 1, 1, "", "ceil"], [7, 1, 1, "", "ceil_"], [7, 1, 1, "", "chunk"], [7, 1, 1, "", "clamp"], [7, 1, 1, "", "clamp_max"], [7, 1, 1, "", "clamp_max_"], [7, 1, 1, "", "clamp_min"], [7, 1, 1, "", "clamp_min_"], [7, 1, 1, "", "clear"], [7, 1, 1, "", "clear_device_"], [7, 1, 1, "", "clear_refs_for_compile_"], [7, 1, 1, "", "clone"], [7, 1, 1, "", "complex128"], [7, 1, 1, "", "complex32"], [7, 1, 1, "", "complex64"], [7, 1, 1, "", "consolidate"], [7, 1, 1, "", "contiguous"], [7, 1, 1, "", "copy"], [7, 1, 1, "", "copy_"], [7, 1, 1, "", "copy_at_"], [7, 1, 1, "", "cos"], [7, 1, 1, "", "cos_"], [7, 1, 1, "", "cosh"], [7, 1, 1, "", "cosh_"], [7, 1, 1, "", "cpu"], [7, 1, 1, "", "create_nested"], [7, 1, 1, "", "cuda"], [7, 1, 1, "", "cummax"], [7, 1, 1, "", "cummin"], [7, 2, 1, "", "data"], [7, 1, 1, "", "data_ptr"], [7, 1, 1, "", "del_"], [7, 1, 1, "", "densify"], [7, 2, 1, "", "depth"], [7, 1, 1, "", "detach"], [7, 1, 1, "", "detach_"], [7, 2, 1, "", "device"], [7, 1, 1, "", "dim"], [7, 1, 1, "", "div"], [7, 1, 1, "", "div_"], [7, 1, 1, "", "double"], [7, 2, 1, "", "dtype"], [7, 1, 1, "", "dumps"], [7, 1, 1, "", "empty"], [7, 1, 1, "", "entry_class"], [7, 1, 1, "", "erf"], [7, 1, 1, "", "erf_"], [7, 1, 1, "", "erfc"], [7, 1, 1, "", "erfc_"], [7, 1, 1, "", "exclude"], [7, 1, 1, "", "exp"], [7, 1, 1, "", "exp_"], [7, 1, 1, "", "expand"], [7, 1, 1, "", "expand_as"], [7, 1, 1, "", "expm1"], [7, 1, 1, "", "expm1_"], [7, 1, 1, "", "fill_"], [7, 1, 1, "", "filter_empty_"], [7, 1, 1, "", "filter_non_tensor_data"], [7, 1, 1, "", "flatten"], [7, 1, 1, "", "flatten_keys"], [7, 1, 1, "", "float"], [7, 1, 1, "", "float16"], [7, 1, 1, "", "float32"], [7, 1, 1, "", "float64"], [7, 1, 1, "", "floor"], [7, 1, 1, "", "floor_"], [7, 1, 1, "", "frac"], [7, 1, 1, "", "frac_"], [7, 1, 1, "", "from_any"], [7, 1, 1, "", "from_dataclass"], [7, 1, 1, "", "from_dict"], [7, 1, 1, "", "from_dict_instance"], [7, 1, 1, "", "from_h5"], [7, 1, 1, "", "from_module"], [7, 1, 1, "", "from_modules"], [7, 1, 1, "", "from_namedtuple"], [7, 1, 1, "", "from_pytree"], [7, 1, 1, "", "from_struct_array"], [7, 1, 1, "", "from_tuple"], [7, 1, 1, "", "fromkeys"], [7, 1, 1, "", "gather"], [7, 1, 1, "", "gather_and_stack"], [7, 1, 1, "", "get"], [7, 1, 1, "", "get_at"], [7, 1, 1, "", "get_item_shape"], [7, 1, 1, "", "get_nestedtensor"], [7, 1, 1, "", "get_non_tensor"], [7, 2, 1, "", "grad"], [7, 1, 1, "", "half"], [7, 1, 1, "", "insert"], [7, 1, 1, "", "int"], [7, 1, 1, "", "int16"], [7, 1, 1, "", "int32"], [7, 1, 1, "", "int64"], [7, 1, 1, "", "int8"], [7, 1, 1, "", "irecv"], [7, 1, 1, "", "is_consolidated"], [7, 1, 1, "", "is_contiguous"], [7, 1, 1, "", "is_empty"], [7, 1, 1, "", "is_memmap"], [7, 1, 1, "", "is_shared"], [7, 1, 1, "", "isend"], [7, 1, 1, "", "isfinite"], [7, 1, 1, "", "isnan"], [7, 1, 1, "", "isneginf"], [7, 1, 1, "", "isposinf"], [7, 1, 1, "", "isreal"], [7, 1, 1, "", "items"], [7, 1, 1, "", "keys"], [7, 1, 1, "", "lazy_stack"], [7, 1, 1, "", "lerp"], [7, 1, 1, "", "lerp_"], [7, 1, 1, "", "lgamma"], [7, 1, 1, "", "lgamma_"], [7, 1, 1, "", "load"], [7, 1, 1, "", "load_"], [7, 1, 1, "", "load_memmap"], [7, 1, 1, "", "load_memmap_"], [7, 1, 1, "", "load_state_dict"], [7, 1, 1, "", "lock_"], [7, 1, 1, "", "log"], [7, 1, 1, "", "log10"], [7, 1, 1, "", "log10_"], [7, 1, 1, "", "log1p"], [7, 1, 1, "", "log1p_"], [7, 1, 1, "", "log2"], [7, 1, 1, "", "log2_"], [7, 1, 1, "", "log_"], [7, 1, 1, "", "logical_and"], [7, 1, 1, "", "logsumexp"], [7, 1, 1, "", "make_memmap"], [7, 1, 1, "", "make_memmap_from_storage"], [7, 1, 1, "", "make_memmap_from_tensor"], [7, 1, 1, "", "map"], [7, 1, 1, "", "map_iter"], [7, 1, 1, "", "masked_fill"], [7, 1, 1, "", "masked_fill_"], [7, 1, 1, "", "masked_select"], [7, 1, 1, "", "max"], [7, 1, 1, "", "maximum"], [7, 1, 1, "", "maximum_"], [7, 1, 1, "", "maybe_dense_stack"], [7, 1, 1, "", "maybe_to_stack"], [7, 1, 1, "", "mean"], [7, 1, 1, "", "memmap"], [7, 1, 1, "", "memmap_"], [7, 1, 1, "", "memmap_like"], [7, 1, 1, "", "memmap_refresh_"], [7, 1, 1, "", "min"], [7, 1, 1, "", "minimum"], [7, 1, 1, "", "minimum_"], [7, 1, 1, "", "mul"], [7, 1, 1, "", "mul_"], [7, 1, 1, "", "named_apply"], [7, 2, 1, "", "names"], [7, 1, 1, "", "nanmean"], [7, 1, 1, "", "nansum"], [7, 2, 1, "", "ndim"], [7, 1, 1, "", "ndimension"], [7, 1, 1, "", "neg"], [7, 1, 1, "", "neg_"], [7, 1, 1, "", "new_empty"], [7, 1, 1, "", "new_full"], [7, 1, 1, "", "new_ones"], [7, 1, 1, "", "new_tensor"], [7, 1, 1, "", "new_zeros"], [7, 1, 1, "", "non_tensor_items"], [7, 1, 1, "", "norm"], [7, 1, 1, "", "numel"], [7, 1, 1, "", "numpy"], [7, 1, 1, "", "param_count"], [7, 1, 1, "", "permute"], [7, 1, 1, "", "pin_memory"], [7, 1, 1, "", "pin_memory_"], [7, 1, 1, "", "pop"], [7, 1, 1, "", "popitem"], [7, 1, 1, "", "pow"], [7, 1, 1, "", "pow_"], [7, 1, 1, "", "prod"], [7, 1, 1, "", "qint32"], [7, 1, 1, "", "qint8"], [7, 1, 1, "", "quint4x2"], [7, 1, 1, "", "quint8"], [7, 1, 1, "", "reciprocal"], [7, 1, 1, "", "reciprocal_"], [7, 1, 1, "", "record_stream"], [7, 1, 1, "", "recv"], [7, 1, 1, "", "reduce"], [7, 1, 1, "", "refine_names"], [7, 1, 1, "", "rename"], [7, 1, 1, "", "rename_"], [7, 1, 1, "", "rename_key_"], [7, 1, 1, "", "repeat"], [7, 1, 1, "", "repeat_interleave"], [7, 1, 1, "", "replace"], [7, 1, 1, "", "requires_grad_"], [7, 1, 1, "", "reshape"], [7, 1, 1, "", "round"], [7, 1, 1, "", "round_"], [7, 1, 1, "", "save"], [7, 2, 1, "", "saved_path"], [7, 1, 1, "", "select"], [7, 1, 1, "", "send"], [7, 1, 1, "", "separates"], [7, 1, 1, "", "set"], [7, 1, 1, "", "set_"], [7, 1, 1, "", "set_at_"], [7, 1, 1, "", "set_non_tensor"], [7, 1, 1, "", "setdefault"], [7, 2, 1, "", "shape"], [7, 1, 1, "", "share_memory_"], [7, 1, 1, "", "sigmoid"], [7, 1, 1, "", "sigmoid_"], [7, 1, 1, "", "sign"], [7, 1, 1, "", "sign_"], [7, 1, 1, "", "sin"], [7, 1, 1, "", "sin_"], [7, 1, 1, "", "sinh"], [7, 1, 1, "", "sinh_"], [7, 1, 1, "", "size"], [7, 1, 1, "", "softmax"], [7, 2, 1, "", "sorted_keys"], [7, 1, 1, "", "split"], [7, 1, 1, "", "split_keys"], [7, 1, 1, "", "sqrt"], [7, 1, 1, "", "sqrt_"], [7, 1, 1, "", "squeeze"], [7, 1, 1, "", "stack"], [7, 1, 1, "", "stack_from_tensordict"], [7, 1, 1, "", "stack_tensors"], [7, 1, 1, "", "state_dict"], [7, 1, 1, "", "std"], [7, 1, 1, "", "sub"], [7, 1, 1, "", "sub_"], [7, 1, 1, "", "sum"], [7, 1, 1, "", "tan"], [7, 1, 1, "", "tan_"], [7, 1, 1, "", "tanh"], [7, 1, 1, "", "tanh_"], [7, 1, 1, "", "to"], [7, 1, 1, "", "to_dict"], [7, 1, 1, "", "to_h5"], [7, 1, 1, "", "to_module"], [7, 1, 1, "", "to_namedtuple"], [7, 1, 1, "", "to_padded_tensor"], [7, 1, 1, "", "to_pytree"], [7, 1, 1, "", "to_struct_array"], [7, 1, 1, "", "to_tensordict"], [7, 1, 1, "", "tolist"], [7, 1, 1, "", "transpose"], [7, 1, 1, "", "trunc"], [7, 1, 1, "", "trunc_"], [7, 1, 1, "", "type"], [7, 1, 1, "", "uint16"], [7, 1, 1, "", "uint32"], [7, 1, 1, "", "uint64"], [7, 1, 1, "", "uint8"], [7, 1, 1, "", "unbind"], [7, 1, 1, "", "unflatten"], [7, 1, 1, "", "unflatten_keys"], [7, 1, 1, "", "unlock_"], [7, 1, 1, "", "unsqueeze"], [7, 1, 1, "", "update"], [7, 1, 1, "", "update_"], [7, 1, 1, "", "update_at_"], [7, 1, 1, "", "valid_keys"], [7, 1, 1, "", "values"], [7, 1, 1, "", "var"], [7, 1, 1, "", "view"], [7, 1, 1, "", "where"], [7, 1, 1, "", "zero_"], [7, 1, 1, "", "zero_grad"]], "tensordict.PersistentTensorDict": [[8, 1, 1, "", "abs"], [8, 1, 1, "", "abs_"], [8, 1, 1, "", "acos"], [8, 1, 1, "", "acos_"], [8, 1, 1, "", "add"], [8, 1, 1, "", "add_"], [8, 1, 1, "", "addcdiv"], [8, 1, 1, "", "addcdiv_"], [8, 1, 1, "", "addcmul"], [8, 1, 1, "", "addcmul_"], [8, 1, 1, "", "all"], [8, 1, 1, "", "amax"], [8, 1, 1, "", "amin"], [8, 1, 1, "", "any"], [8, 1, 1, "", "apply"], [8, 1, 1, "", "apply_"], [8, 1, 1, "", "asin"], [8, 1, 1, "", "asin_"], [8, 1, 1, "", "atan"], [8, 1, 1, "", "atan_"], [8, 1, 1, "", "auto_batch_size_"], [8, 1, 1, "", "auto_device_"], [8, 2, 1, "", "batch_dims"], [8, 2, 1, "", "batch_size"], [8, 1, 1, "", "bfloat16"], [8, 1, 1, "", "bitwise_and"], [8, 1, 1, "", "bool"], [8, 1, 1, "", "bytes"], [8, 1, 1, "", "cat"], [8, 1, 1, "", "cat_from_tensordict"], [8, 1, 1, "", "cat_tensors"], [8, 1, 1, "", "ceil"], [8, 1, 1, "", "ceil_"], [8, 1, 1, "", "chunk"], [8, 1, 1, "", "clamp"], [8, 1, 1, "", "clamp_max"], [8, 1, 1, "", "clamp_max_"], [8, 1, 1, "", "clamp_min"], [8, 1, 1, "", "clamp_min_"], [8, 1, 1, "", "clear"], [8, 1, 1, "", "clear_device_"], [8, 1, 1, "", "clear_refs_for_compile_"], [8, 1, 1, "", "clone"], [8, 1, 1, "", "close"], [8, 1, 1, "", "complex128"], [8, 1, 1, "", "complex32"], [8, 1, 1, "", "complex64"], [8, 1, 1, "", "consolidate"], [8, 1, 1, "", "contiguous"], [8, 1, 1, "", "copy"], [8, 1, 1, "", "copy_"], [8, 1, 1, "", "copy_at_"], [8, 1, 1, "", "cos"], [8, 1, 1, "", "cos_"], [8, 1, 1, "", "cosh"], [8, 1, 1, "", "cosh_"], [8, 1, 1, "", "cpu"], [8, 1, 1, "", "create_nested"], [8, 1, 1, "", "cuda"], [8, 1, 1, "", "cummax"], [8, 1, 1, "", "cummin"], [8, 2, 1, "", "data"], [8, 1, 1, "", "data_ptr"], [8, 1, 1, "", "del_"], [8, 1, 1, "", "densify"], [8, 2, 1, "", "depth"], [8, 1, 1, "", "detach"], [8, 1, 1, "", "detach_"], [8, 2, 1, "", "device"], [8, 1, 1, "", "dim"], [8, 1, 1, "", "div"], [8, 1, 1, "", "div_"], [8, 1, 1, "", "double"], [8, 2, 1, "", "dtype"], [8, 1, 1, "", "dumps"], [8, 1, 1, "", "empty"], [8, 1, 1, "", "entry_class"], [8, 1, 1, "", "erf"], [8, 1, 1, "", "erf_"], [8, 1, 1, "", "erfc"], [8, 1, 1, "", "erfc_"], [8, 1, 1, "", "exclude"], [8, 1, 1, "", "exp"], [8, 1, 1, "", "exp_"], [8, 1, 1, "", "expand"], [8, 1, 1, "", "expand_as"], [8, 1, 1, "", "expm1"], [8, 1, 1, "", "expm1_"], [8, 1, 1, "", "fill_"], [8, 1, 1, "", "filter_empty_"], [8, 1, 1, "", "filter_non_tensor_data"], [8, 1, 1, "", "flatten"], [8, 1, 1, "", "flatten_keys"], [8, 1, 1, "", "float"], [8, 1, 1, "", "float16"], [8, 1, 1, "", "float32"], [8, 1, 1, "", "float64"], [8, 1, 1, "", "floor"], [8, 1, 1, "", "floor_"], [8, 1, 1, "", "frac"], [8, 1, 1, "", "frac_"], [8, 1, 1, "", "from_any"], [8, 1, 1, "", "from_dataclass"], [8, 1, 1, "", "from_dict"], [8, 1, 1, "", "from_dict_instance"], [8, 1, 1, "", "from_h5"], [8, 1, 1, "", "from_module"], [8, 1, 1, "", "from_modules"], [8, 1, 1, "", "from_namedtuple"], [8, 1, 1, "", "from_pytree"], [8, 1, 1, "", "from_struct_array"], [8, 1, 1, "", "from_tuple"], [8, 1, 1, "", "fromkeys"], [8, 1, 1, "", "gather"], [8, 1, 1, "", "gather_and_stack"], [8, 1, 1, "", "get"], [8, 1, 1, "", "get_at"], [8, 1, 1, "", "get_item_shape"], [8, 1, 1, "", "get_non_tensor"], [8, 2, 1, "", "grad"], [8, 1, 1, "", "half"], [8, 1, 1, "", "int"], [8, 1, 1, "", "int16"], [8, 1, 1, "", "int32"], [8, 1, 1, "", "int64"], [8, 1, 1, "", "int8"], [8, 1, 1, "", "irecv"], [8, 1, 1, "", "is_consolidated"], [8, 1, 1, "", "is_contiguous"], [8, 1, 1, "", "is_empty"], [8, 1, 1, "", "is_memmap"], [8, 1, 1, "", "is_shared"], [8, 1, 1, "", "isend"], [8, 1, 1, "", "isfinite"], [8, 1, 1, "", "isnan"], [8, 1, 1, "", "isneginf"], [8, 1, 1, "", "isposinf"], [8, 1, 1, "", "isreal"], [8, 1, 1, "", "items"], [8, 1, 1, "", "keys"], [8, 1, 1, "", "lazy_stack"], [8, 1, 1, "", "lerp"], [8, 1, 1, "", "lerp_"], [8, 1, 1, "", "lgamma"], [8, 1, 1, "", "lgamma_"], [8, 1, 1, "", "load"], [8, 1, 1, "", "load_"], [8, 1, 1, "", "load_memmap"], [8, 1, 1, "", "load_memmap_"], [8, 1, 1, "", "load_state_dict"], [8, 1, 1, "", "lock_"], [8, 1, 1, "", "log"], [8, 1, 1, "", "log10"], [8, 1, 1, "", "log10_"], [8, 1, 1, "", "log1p"], [8, 1, 1, "", "log1p_"], [8, 1, 1, "", "log2"], [8, 1, 1, "", "log2_"], [8, 1, 1, "", "log_"], [8, 1, 1, "", "logical_and"], [8, 1, 1, "", "logsumexp"], [8, 1, 1, "", "make_memmap"], [8, 1, 1, "", "make_memmap_from_storage"], [8, 1, 1, "", "make_memmap_from_tensor"], [8, 1, 1, "", "map"], [8, 1, 1, "", "map_iter"], [8, 1, 1, "", "masked_fill"], [8, 1, 1, "", "masked_fill_"], [8, 1, 1, "", "masked_select"], [8, 1, 1, "", "max"], [8, 1, 1, "", "maximum"], [8, 1, 1, "", "maximum_"], [8, 1, 1, "", "maybe_dense_stack"], [8, 1, 1, "", "mean"], [8, 1, 1, "", "memmap"], [8, 1, 1, "", "memmap_"], [8, 1, 1, "", "memmap_like"], [8, 1, 1, "", "memmap_refresh_"], [8, 1, 1, "", "min"], [8, 1, 1, "", "minimum"], [8, 1, 1, "", "minimum_"], [8, 1, 1, "", "mul"], [8, 1, 1, "", "mul_"], [8, 1, 1, "", "named_apply"], [8, 2, 1, "", "names"], [8, 1, 1, "", "nanmean"], [8, 1, 1, "", "nansum"], [8, 2, 1, "", "ndim"], [8, 1, 1, "", "ndimension"], [8, 1, 1, "", "neg"], [8, 1, 1, "", "neg_"], [8, 1, 1, "", "new_empty"], [8, 1, 1, "", "new_full"], [8, 1, 1, "", "new_ones"], [8, 1, 1, "", "new_tensor"], [8, 1, 1, "", "new_zeros"], [8, 1, 1, "", "non_tensor_items"], [8, 1, 1, "", "norm"], [8, 1, 1, "", "numel"], [8, 1, 1, "", "numpy"], [8, 1, 1, "", "param_count"], [8, 1, 1, "", "permute"], [8, 1, 1, "", "pin_memory"], [8, 1, 1, "", "pin_memory_"], [8, 1, 1, "", "pop"], [8, 1, 1, "", "popitem"], [8, 1, 1, "", "pow"], [8, 1, 1, "", "pow_"], [8, 1, 1, "", "prod"], [8, 1, 1, "", "qint32"], [8, 1, 1, "", "qint8"], [8, 1, 1, "", "quint4x2"], [8, 1, 1, "", "quint8"], [8, 1, 1, "", "reciprocal"], [8, 1, 1, "", "reciprocal_"], [8, 1, 1, "", "record_stream"], [8, 1, 1, "", "recv"], [8, 1, 1, "", "reduce"], [8, 1, 1, "", "refine_names"], [8, 1, 1, "", "rename"], [8, 1, 1, "", "rename_"], [8, 1, 1, "", "rename_key_"], [8, 1, 1, "", "repeat"], [8, 1, 1, "", "repeat_interleave"], [8, 1, 1, "", "replace"], [8, 1, 1, "", "requires_grad_"], [8, 1, 1, "", "reshape"], [8, 1, 1, "", "round"], [8, 1, 1, "", "round_"], [8, 1, 1, "", "save"], [8, 2, 1, "", "saved_path"], [8, 1, 1, "", "select"], [8, 1, 1, "", "send"], [8, 1, 1, "", "separates"], [8, 1, 1, "", "set"], [8, 1, 1, "", "set_"], [8, 1, 1, "", "set_at_"], [8, 1, 1, "", "set_non_tensor"], [8, 1, 1, "", "setdefault"], [8, 2, 1, "", "shape"], [8, 1, 1, "", "share_memory_"], [8, 1, 1, "", "sigmoid"], [8, 1, 1, "", "sigmoid_"], [8, 1, 1, "", "sign"], [8, 1, 1, "", "sign_"], [8, 1, 1, "", "sin"], [8, 1, 1, "", "sin_"], [8, 1, 1, "", "sinh"], [8, 1, 1, "", "sinh_"], [8, 1, 1, "", "size"], [8, 1, 1, "", "softmax"], [8, 2, 1, "", "sorted_keys"], [8, 1, 1, "", "split"], [8, 1, 1, "", "split_keys"], [8, 1, 1, "", "sqrt"], [8, 1, 1, "", "sqrt_"], [8, 1, 1, "", "squeeze"], [8, 1, 1, "", "stack"], [8, 1, 1, "", "stack_from_tensordict"], [8, 1, 1, "", "stack_tensors"], [8, 1, 1, "", "state_dict"], [8, 1, 1, "", "std"], [8, 1, 1, "", "sub"], [8, 1, 1, "", "sub_"], [8, 1, 1, "", "sum"], [8, 1, 1, "", "tan"], [8, 1, 1, "", "tan_"], [8, 1, 1, "", "tanh"], [8, 1, 1, "", "tanh_"], [8, 1, 1, "", "to"], [8, 1, 1, "", "to_dict"], [8, 1, 1, "", "to_h5"], [8, 1, 1, "", "to_module"], [8, 1, 1, "", "to_namedtuple"], [8, 1, 1, "", "to_padded_tensor"], [8, 1, 1, "", "to_pytree"], [8, 1, 1, "", "to_struct_array"], [8, 1, 1, "", "to_tensordict"], [8, 1, 1, "", "transpose"], [8, 1, 1, "", "trunc"], [8, 1, 1, "", "trunc_"], [8, 1, 1, "", "type"], [8, 1, 1, "", "uint16"], [8, 1, 1, "", "uint32"], [8, 1, 1, "", "uint64"], [8, 1, 1, "", "uint8"], [8, 1, 1, "", "unbind"], [8, 1, 1, "", "unflatten"], [8, 1, 1, "", "unflatten_keys"], [8, 1, 1, "", "unlock_"], [8, 1, 1, "", "unsqueeze"], [8, 1, 1, "", "update"], [8, 1, 1, "", "update_"], [8, 1, 1, "", "update_at_"], [8, 1, 1, "", "values"], [8, 1, 1, "", "var"], [8, 1, 1, "", "view"], [8, 1, 1, "", "where"], [8, 1, 1, "", "zero_"], [8, 1, 1, "", "zero_grad"]], "tensordict.TensorDict": [[10, 1, 1, "", "abs"], [10, 1, 1, "", "abs_"], [10, 1, 1, "", "acos"], [10, 1, 1, "", "acos_"], [10, 1, 1, "", "add"], [10, 1, 1, "", "add_"], [10, 1, 1, "", "addcdiv"], [10, 1, 1, "", "addcdiv_"], [10, 1, 1, "", "addcmul"], [10, 1, 1, "", "addcmul_"], [10, 1, 1, "", "all"], [10, 1, 1, "", "amax"], [10, 1, 1, "", "amin"], [10, 1, 1, "", "any"], [10, 1, 1, "", "apply"], [10, 1, 1, "", "apply_"], [10, 1, 1, "", "asin"], [10, 1, 1, "", "asin_"], [10, 1, 1, "", "atan"], [10, 1, 1, "", "atan_"], [10, 1, 1, "", "auto_batch_size_"], [10, 1, 1, "", "auto_device_"], [10, 2, 1, "", "batch_dims"], [10, 2, 1, "", "batch_size"], [10, 1, 1, "", "bfloat16"], [10, 1, 1, "", "bitwise_and"], [10, 1, 1, "", "bool"], [10, 1, 1, "", "bytes"], [10, 1, 1, "", "cat"], [10, 1, 1, "", "cat_from_tensordict"], [10, 1, 1, "", "cat_tensors"], [10, 1, 1, "", "ceil"], [10, 1, 1, "", "ceil_"], [10, 1, 1, "", "chunk"], [10, 1, 1, "", "clamp"], [10, 1, 1, "", "clamp_max"], [10, 1, 1, "", "clamp_max_"], [10, 1, 1, "", "clamp_min"], [10, 1, 1, "", "clamp_min_"], [10, 1, 1, "", "clear"], [10, 1, 1, "", "clear_device_"], [10, 1, 1, "", "clear_refs_for_compile_"], [10, 1, 1, "", "clone"], [10, 1, 1, "", "complex128"], [10, 1, 1, "", "complex32"], [10, 1, 1, "", "complex64"], [10, 1, 1, "", "consolidate"], [10, 1, 1, "", "contiguous"], [10, 1, 1, "", "copy"], [10, 1, 1, "", "copy_"], [10, 1, 1, "", "copy_at_"], [10, 1, 1, "", "cos"], [10, 1, 1, "", "cos_"], [10, 1, 1, "", "cosh"], [10, 1, 1, "", "cosh_"], [10, 1, 1, "", "cpu"], [10, 1, 1, "", "create_nested"], [10, 1, 1, "", "cuda"], [10, 1, 1, "", "cummax"], [10, 1, 1, "", "cummin"], [10, 2, 1, "", "data"], [10, 1, 1, "", "data_ptr"], [10, 1, 1, "", "del_"], [10, 1, 1, "", "densify"], [10, 2, 1, "", "depth"], [10, 1, 1, "", "detach"], [10, 1, 1, "", "detach_"], [10, 2, 1, "", "device"], [10, 1, 1, "", "dim"], [10, 1, 1, "", "div"], [10, 1, 1, "", "div_"], [10, 1, 1, "", "double"], [10, 2, 1, "", "dtype"], [10, 1, 1, "", "dumps"], [10, 1, 1, "", "empty"], [10, 1, 1, "", "entry_class"], [10, 1, 1, "", "erf"], [10, 1, 1, "", "erf_"], [10, 1, 1, "", "erfc"], [10, 1, 1, "", "erfc_"], [10, 1, 1, "", "exclude"], [10, 1, 1, "", "exp"], [10, 1, 1, "", "exp_"], [10, 1, 1, "", "expand"], [10, 1, 1, "", "expand_as"], [10, 1, 1, "", "expm1"], [10, 1, 1, "", "expm1_"], [10, 1, 1, "", "fill_"], [10, 1, 1, "", "filter_empty_"], [10, 1, 1, "", "filter_non_tensor_data"], [10, 1, 1, "", "flatten"], [10, 1, 1, "", "flatten_keys"], [10, 1, 1, "", "float"], [10, 1, 1, "", "float16"], [10, 1, 1, "", "float32"], [10, 1, 1, "", "float64"], [10, 1, 1, "", "floor"], [10, 1, 1, "", "floor_"], [10, 1, 1, "", "frac"], [10, 1, 1, "", "frac_"], [10, 1, 1, "", "from_any"], [10, 1, 1, "", "from_dataclass"], [10, 1, 1, "", "from_dict"], [10, 1, 1, "", "from_dict_instance"], [10, 1, 1, "", "from_h5"], [10, 1, 1, "", "from_module"], [10, 1, 1, "", "from_modules"], [10, 1, 1, "", "from_namedtuple"], [10, 1, 1, "", "from_pytree"], [10, 1, 1, "", "from_struct_array"], [10, 1, 1, "", "from_tuple"], [10, 1, 1, "", "fromkeys"], [10, 1, 1, "", "gather"], [10, 1, 1, "", "gather_and_stack"], [10, 1, 1, "", "get"], [10, 1, 1, "", "get_at"], [10, 1, 1, "", "get_item_shape"], [10, 1, 1, "", "get_non_tensor"], [10, 2, 1, "", "grad"], [10, 1, 1, "", "half"], [10, 1, 1, "", "int"], [10, 1, 1, "", "int16"], [10, 1, 1, "", "int32"], [10, 1, 1, "", "int64"], [10, 1, 1, "", "int8"], [10, 1, 1, "", "irecv"], [10, 1, 1, "", "is_consolidated"], [10, 1, 1, "", "is_contiguous"], [10, 1, 1, "", "is_empty"], [10, 1, 1, "", "is_memmap"], [10, 1, 1, "", "is_shared"], [10, 1, 1, "", "isend"], [10, 1, 1, "", "isfinite"], [10, 1, 1, "", "isnan"], [10, 1, 1, "", "isneginf"], [10, 1, 1, "", "isposinf"], [10, 1, 1, "", "isreal"], [10, 1, 1, "", "items"], [10, 1, 1, "", "keys"], [10, 1, 1, "", "lazy_stack"], [10, 1, 1, "", "lerp"], [10, 1, 1, "", "lerp_"], [10, 1, 1, "", "lgamma"], [10, 1, 1, "", "lgamma_"], [10, 1, 1, "", "load"], [10, 1, 1, "", "load_"], [10, 1, 1, "", "load_memmap"], [10, 1, 1, "", "load_memmap_"], [10, 1, 1, "", "load_state_dict"], [10, 1, 1, "", "lock_"], [10, 1, 1, "", "log"], [10, 1, 1, "", "log10"], [10, 1, 1, "", "log10_"], [10, 1, 1, "", "log1p"], [10, 1, 1, "", "log1p_"], [10, 1, 1, "", "log2"], [10, 1, 1, "", "log2_"], [10, 1, 1, "", "log_"], [10, 1, 1, "", "logical_and"], [10, 1, 1, "", "logsumexp"], [10, 1, 1, "", "make_memmap"], [10, 1, 1, "", "make_memmap_from_storage"], [10, 1, 1, "", "make_memmap_from_tensor"], [10, 1, 1, "", "map"], [10, 1, 1, "", "map_iter"], [10, 1, 1, "", "masked_fill"], [10, 1, 1, "", "masked_fill_"], [10, 1, 1, "", "masked_select"], [10, 1, 1, "", "max"], [10, 1, 1, "", "maximum"], [10, 1, 1, "", "maximum_"], [10, 1, 1, "", "maybe_dense_stack"], [10, 1, 1, "", "mean"], [10, 1, 1, "", "memmap"], [10, 1, 1, "", "memmap_"], [10, 1, 1, "", "memmap_like"], [10, 1, 1, "", "memmap_refresh_"], [10, 1, 1, "", "min"], [10, 1, 1, "", "minimum"], [10, 1, 1, "", "minimum_"], [10, 1, 1, "", "mul"], [10, 1, 1, "", "mul_"], [10, 1, 1, "", "named_apply"], [10, 2, 1, "", "names"], [10, 1, 1, "", "nanmean"], [10, 1, 1, "", "nansum"], [10, 2, 1, "", "ndim"], [10, 1, 1, "", "ndimension"], [10, 1, 1, "", "neg"], [10, 1, 1, "", "neg_"], [10, 1, 1, "", "new_empty"], [10, 1, 1, "", "new_full"], [10, 1, 1, "", "new_ones"], [10, 1, 1, "", "new_tensor"], [10, 1, 1, "", "new_zeros"], [10, 1, 1, "", "non_tensor_items"], [10, 1, 1, "", "norm"], [10, 1, 1, "", "numel"], [10, 1, 1, "", "numpy"], [10, 1, 1, "", "param_count"], [10, 1, 1, "", "permute"], [10, 1, 1, "", "pin_memory"], [10, 1, 1, "", "pin_memory_"], [10, 1, 1, "", "pop"], [10, 1, 1, "", "popitem"], [10, 1, 1, "", "pow"], [10, 1, 1, "", "pow_"], [10, 1, 1, "", "prod"], [10, 1, 1, "", "qint32"], [10, 1, 1, "", "qint8"], [10, 1, 1, "", "quint4x2"], [10, 1, 1, "", "quint8"], [10, 1, 1, "", "reciprocal"], [10, 1, 1, "", "reciprocal_"], [10, 1, 1, "", "record_stream"], [10, 1, 1, "", "recv"], [10, 1, 1, "", "reduce"], [10, 1, 1, "", "refine_names"], [10, 1, 1, "", "rename"], [10, 1, 1, "", "rename_"], [10, 1, 1, "", "rename_key_"], [10, 1, 1, "", "repeat"], [10, 1, 1, "", "repeat_interleave"], [10, 1, 1, "", "replace"], [10, 1, 1, "", "requires_grad_"], [10, 1, 1, "", "reshape"], [10, 1, 1, "", "round"], [10, 1, 1, "", "round_"], [10, 1, 1, "", "save"], [10, 2, 1, "", "saved_path"], [10, 1, 1, "", "select"], [10, 1, 1, "", "send"], [10, 1, 1, "", "separates"], [10, 1, 1, "", "set"], [10, 1, 1, "", "set_"], [10, 1, 1, "", "set_at_"], [10, 1, 1, "", "set_non_tensor"], [10, 1, 1, "", "setdefault"], [10, 2, 1, "", "shape"], [10, 1, 1, "", "share_memory_"], [10, 1, 1, "", "sigmoid"], [10, 1, 1, "", "sigmoid_"], [10, 1, 1, "", "sign"], [10, 1, 1, "", "sign_"], [10, 1, 1, "", "sin"], [10, 1, 1, "", "sin_"], [10, 1, 1, "", "sinh"], [10, 1, 1, "", "sinh_"], [10, 1, 1, "", "size"], [10, 1, 1, "", "softmax"], [10, 2, 1, "", "sorted_keys"], [10, 1, 1, "", "split"], [10, 1, 1, "", "split_keys"], [10, 1, 1, "", "sqrt"], [10, 1, 1, "", "sqrt_"], [10, 1, 1, "", "squeeze"], [10, 1, 1, "", "stack"], [10, 1, 1, "", "stack_from_tensordict"], [10, 1, 1, "", "stack_tensors"], [10, 1, 1, "", "state_dict"], [10, 1, 1, "", "std"], [10, 1, 1, "", "sub"], [10, 1, 1, "", "sub_"], [10, 1, 1, "", "sum"], [10, 1, 1, "", "tan"], [10, 1, 1, "", "tan_"], [10, 1, 1, "", "tanh"], [10, 1, 1, "", "tanh_"], [10, 1, 1, "", "to"], [10, 1, 1, "", "to_dict"], [10, 1, 1, "", "to_h5"], [10, 1, 1, "", "to_module"], [10, 1, 1, "", "to_namedtuple"], [10, 1, 1, "", "to_padded_tensor"], [10, 1, 1, "", "to_pytree"], [10, 1, 1, "", "to_struct_array"], [10, 1, 1, "", "to_tensordict"], [10, 1, 1, "", "transpose"], [10, 1, 1, "", "trunc"], [10, 1, 1, "", "trunc_"], [10, 1, 1, "", "type"], [10, 1, 1, "", "uint16"], [10, 1, 1, "", "uint32"], [10, 1, 1, "", "uint64"], [10, 1, 1, "", "uint8"], [10, 1, 1, "", "unbind"], [10, 1, 1, "", "unflatten"], [10, 1, 1, "", "unflatten_keys"], [10, 1, 1, "", "unlock_"], [10, 1, 1, "", "unsqueeze"], [10, 1, 1, "", "update"], [10, 1, 1, "", "update_"], [10, 1, 1, "", "update_at_"], [10, 1, 1, "", "values"], [10, 1, 1, "", "var"], [10, 1, 1, "", "view"], [10, 1, 1, "", "where"], [10, 1, 1, "", "zero_"], [10, 1, 1, "", "zero_grad"]], "tensordict.TensorDictBase": [[11, 1, 1, "", "abs"], [11, 1, 1, "", "abs_"], [11, 1, 1, "", "acos"], [11, 1, 1, "", "acos_"], [11, 1, 1, "", "add"], [11, 1, 1, "", "add_"], [11, 1, 1, "", "addcdiv"], [11, 1, 1, "", "addcdiv_"], [11, 1, 1, "", "addcmul"], [11, 1, 1, "", "addcmul_"], [11, 1, 1, "", "all"], [11, 1, 1, "", "amax"], [11, 1, 1, "", "amin"], [11, 1, 1, "", "any"], [11, 1, 1, "", "apply"], [11, 1, 1, "", "apply_"], [11, 1, 1, "", "asin"], [11, 1, 1, "", "asin_"], [11, 1, 1, "", "atan"], [11, 1, 1, "", "atan_"], [11, 1, 1, "", "auto_batch_size_"], [11, 1, 1, "", "auto_device_"], [11, 2, 1, "", "batch_dims"], [11, 2, 1, "", "batch_size"], [11, 1, 1, "", "bfloat16"], [11, 1, 1, "", "bitwise_and"], [11, 1, 1, "", "bool"], [11, 1, 1, "", "bytes"], [11, 1, 1, "", "cat"], [11, 1, 1, "", "cat_from_tensordict"], [11, 1, 1, "", "cat_tensors"], [11, 1, 1, "", "ceil"], [11, 1, 1, "", "ceil_"], [11, 1, 1, "", "chunk"], [11, 1, 1, "", "clamp"], [11, 1, 1, "", "clamp_max"], [11, 1, 1, "", "clamp_max_"], [11, 1, 1, "", "clamp_min"], [11, 1, 1, "", "clamp_min_"], [11, 1, 1, "", "clear"], [11, 1, 1, "", "clear_device_"], [11, 1, 1, "", "clear_refs_for_compile_"], [11, 1, 1, "", "clone"], [11, 1, 1, "", "complex128"], [11, 1, 1, "", "complex32"], [11, 1, 1, "", "complex64"], [11, 1, 1, "", "consolidate"], [11, 1, 1, "", "contiguous"], [11, 1, 1, "", "copy"], [11, 1, 1, "", "copy_"], [11, 1, 1, "", "copy_at_"], [11, 1, 1, "", "cos"], [11, 1, 1, "", "cos_"], [11, 1, 1, "", "cosh"], [11, 1, 1, "", "cosh_"], [11, 1, 1, "", "cpu"], [11, 1, 1, "", "create_nested"], [11, 1, 1, "", "cuda"], [11, 1, 1, "", "cummax"], [11, 1, 1, "", "cummin"], [11, 2, 1, "", "data"], [11, 1, 1, "", "data_ptr"], [11, 1, 1, "", "del_"], [11, 1, 1, "", "densify"], [11, 2, 1, "", "depth"], [11, 1, 1, "", "detach"], [11, 1, 1, "", "detach_"], [11, 2, 1, "", "device"], [11, 1, 1, "", "dim"], [11, 1, 1, "", "div"], [11, 1, 1, "", "div_"], [11, 1, 1, "", "double"], [11, 2, 1, "", "dtype"], [11, 1, 1, "", "dumps"], [11, 1, 1, "", "empty"], [11, 1, 1, "", "entry_class"], [11, 1, 1, "", "erf"], [11, 1, 1, "", "erf_"], [11, 1, 1, "", "erfc"], [11, 1, 1, "", "erfc_"], [11, 1, 1, "", "exclude"], [11, 1, 1, "", "exp"], [11, 1, 1, "", "exp_"], [11, 1, 1, "", "expand"], [11, 1, 1, "", "expand_as"], [11, 1, 1, "", "expm1"], [11, 1, 1, "", "expm1_"], [11, 1, 1, "", "fill_"], [11, 1, 1, "", "filter_empty_"], [11, 1, 1, "", "filter_non_tensor_data"], [11, 1, 1, "", "flatten"], [11, 1, 1, "", "flatten_keys"], [11, 1, 1, "", "float"], [11, 1, 1, "", "float16"], [11, 1, 1, "", "float32"], [11, 1, 1, "", "float64"], [11, 1, 1, "", "floor"], [11, 1, 1, "", "floor_"], [11, 1, 1, "", "frac"], [11, 1, 1, "", "frac_"], [11, 1, 1, "", "from_any"], [11, 1, 1, "", "from_dataclass"], [11, 1, 1, "", "from_dict"], [11, 1, 1, "", "from_dict_instance"], [11, 1, 1, "", "from_h5"], [11, 1, 1, "", "from_module"], [11, 1, 1, "", "from_modules"], [11, 1, 1, "", "from_namedtuple"], [11, 1, 1, "", "from_pytree"], [11, 1, 1, "", "from_struct_array"], [11, 1, 1, "", "from_tuple"], [11, 1, 1, "", "fromkeys"], [11, 1, 1, "", "gather"], [11, 1, 1, "", "gather_and_stack"], [11, 1, 1, "", "get"], [11, 1, 1, "", "get_at"], [11, 1, 1, "", "get_item_shape"], [11, 1, 1, "", "get_non_tensor"], [11, 2, 1, "", "grad"], [11, 1, 1, "", "half"], [11, 1, 1, "", "int"], [11, 1, 1, "", "int16"], [11, 1, 1, "", "int32"], [11, 1, 1, "", "int64"], [11, 1, 1, "", "int8"], [11, 1, 1, "", "irecv"], [11, 1, 1, "", "is_consolidated"], [11, 1, 1, "", "is_contiguous"], [11, 1, 1, "", "is_empty"], [11, 1, 1, "", "is_memmap"], [11, 1, 1, "", "is_shared"], [11, 1, 1, "", "isend"], [11, 1, 1, "", "isfinite"], [11, 1, 1, "", "isnan"], [11, 1, 1, "", "isneginf"], [11, 1, 1, "", "isposinf"], [11, 1, 1, "", "isreal"], [11, 1, 1, "", "items"], [11, 1, 1, "", "keys"], [11, 1, 1, "", "lazy_stack"], [11, 1, 1, "", "lerp"], [11, 1, 1, "", "lerp_"], [11, 1, 1, "", "lgamma"], [11, 1, 1, "", "lgamma_"], [11, 1, 1, "", "load"], [11, 1, 1, "", "load_"], [11, 1, 1, "", "load_memmap"], [11, 1, 1, "", "load_memmap_"], [11, 1, 1, "", "load_state_dict"], [11, 1, 1, "", "lock_"], [11, 1, 1, "", "log"], [11, 1, 1, "", "log10"], [11, 1, 1, "", "log10_"], [11, 1, 1, "", "log1p"], [11, 1, 1, "", "log1p_"], [11, 1, 1, "", "log2"], [11, 1, 1, "", "log2_"], [11, 1, 1, "", "log_"], [11, 1, 1, "", "logical_and"], [11, 1, 1, "", "logsumexp"], [11, 1, 1, "", "make_memmap"], [11, 1, 1, "", "make_memmap_from_storage"], [11, 1, 1, "", "make_memmap_from_tensor"], [11, 1, 1, "", "map"], [11, 1, 1, "", "map_iter"], [11, 1, 1, "", "masked_fill"], [11, 1, 1, "", "masked_fill_"], [11, 1, 1, "", "masked_select"], [11, 1, 1, "", "max"], [11, 1, 1, "", "maximum"], [11, 1, 1, "", "maximum_"], [11, 1, 1, "", "maybe_dense_stack"], [11, 1, 1, "", "mean"], [11, 1, 1, "", "memmap"], [11, 1, 1, "", "memmap_"], [11, 1, 1, "", "memmap_like"], [11, 1, 1, "", "memmap_refresh_"], [11, 1, 1, "", "min"], [11, 1, 1, "", "minimum"], [11, 1, 1, "", "minimum_"], [11, 1, 1, "", "mul"], [11, 1, 1, "", "mul_"], [11, 1, 1, "", "named_apply"], [11, 2, 1, "", "names"], [11, 1, 1, "", "nanmean"], [11, 1, 1, "", "nansum"], [11, 2, 1, "", "ndim"], [11, 1, 1, "", "ndimension"], [11, 1, 1, "", "neg"], [11, 1, 1, "", "neg_"], [11, 1, 1, "", "new_empty"], [11, 1, 1, "", "new_full"], [11, 1, 1, "", "new_ones"], [11, 1, 1, "", "new_tensor"], [11, 1, 1, "", "new_zeros"], [11, 1, 1, "", "non_tensor_items"], [11, 1, 1, "", "norm"], [11, 1, 1, "", "numel"], [11, 1, 1, "", "numpy"], [11, 1, 1, "", "param_count"], [11, 1, 1, "", "permute"], [11, 1, 1, "", "pin_memory"], [11, 1, 1, "", "pin_memory_"], [11, 1, 1, "", "pop"], [11, 1, 1, "", "popitem"], [11, 1, 1, "", "pow"], [11, 1, 1, "", "pow_"], [11, 1, 1, "", "prod"], [11, 1, 1, "", "qint32"], [11, 1, 1, "", "qint8"], [11, 1, 1, "", "quint4x2"], [11, 1, 1, "", "quint8"], [11, 1, 1, "", "reciprocal"], [11, 1, 1, "", "reciprocal_"], [11, 1, 1, "", "record_stream"], [11, 1, 1, "", "recv"], [11, 1, 1, "", "reduce"], [11, 1, 1, "", "refine_names"], [11, 1, 1, "", "rename"], [11, 1, 1, "", "rename_"], [11, 1, 1, "", "rename_key_"], [11, 1, 1, "", "repeat"], [11, 1, 1, "", "repeat_interleave"], [11, 1, 1, "", "replace"], [11, 1, 1, "", "requires_grad_"], [11, 1, 1, "", "reshape"], [11, 1, 1, "", "round"], [11, 1, 1, "", "round_"], [11, 1, 1, "", "save"], [11, 2, 1, "", "saved_path"], [11, 1, 1, "", "select"], [11, 1, 1, "", "send"], [11, 1, 1, "", "separates"], [11, 1, 1, "", "set"], [11, 1, 1, "", "set_"], [11, 1, 1, "", "set_at_"], [11, 1, 1, "", "set_non_tensor"], [11, 1, 1, "", "setdefault"], [11, 2, 1, "", "shape"], [11, 1, 1, "", "share_memory_"], [11, 1, 1, "", "sigmoid"], [11, 1, 1, "", "sigmoid_"], [11, 1, 1, "", "sign"], [11, 1, 1, "", "sign_"], [11, 1, 1, "", "sin"], [11, 1, 1, "", "sin_"], [11, 1, 1, "", "sinh"], [11, 1, 1, "", "sinh_"], [11, 1, 1, "", "size"], [11, 1, 1, "", "softmax"], [11, 2, 1, "", "sorted_keys"], [11, 1, 1, "", "split"], [11, 1, 1, "", "split_keys"], [11, 1, 1, "", "sqrt"], [11, 1, 1, "", "sqrt_"], [11, 1, 1, "", "squeeze"], [11, 1, 1, "", "stack"], [11, 1, 1, "", "stack_from_tensordict"], [11, 1, 1, "", "stack_tensors"], [11, 1, 1, "", "state_dict"], [11, 1, 1, "", "std"], [11, 1, 1, "", "sub"], [11, 1, 1, "", "sub_"], [11, 1, 1, "", "sum"], [11, 1, 1, "", "tan"], [11, 1, 1, "", "tan_"], [11, 1, 1, "", "tanh"], [11, 1, 1, "", "tanh_"], [11, 1, 1, "", "to"], [11, 1, 1, "", "to_dict"], [11, 1, 1, "", "to_h5"], [11, 1, 1, "", "to_module"], [11, 1, 1, "", "to_namedtuple"], [11, 1, 1, "", "to_padded_tensor"], [11, 1, 1, "", "to_pytree"], [11, 1, 1, "", "to_struct_array"], [11, 1, 1, "", "to_tensordict"], [11, 1, 1, "", "transpose"], [11, 1, 1, "", "trunc"], [11, 1, 1, "", "trunc_"], [11, 1, 1, "", "type"], [11, 1, 1, "", "uint16"], [11, 1, 1, "", "uint32"], [11, 1, 1, "", "uint64"], [11, 1, 1, "", "uint8"], [11, 1, 1, "", "unbind"], [11, 1, 1, "", "unflatten"], [11, 1, 1, "", "unflatten_keys"], [11, 1, 1, "", "unlock_"], [11, 1, 1, "", "unsqueeze"], [11, 1, 1, "", "update"], [11, 1, 1, "", "update_"], [11, 1, 1, "", "update_at_"], [11, 1, 1, "", "values"], [11, 1, 1, "", "var"], [11, 1, 1, "", "view"], [11, 1, 1, "", "where"], [11, 1, 1, "", "zero_"], [11, 1, 1, "", "zero_grad"]], "tensordict.TensorDictParams": [[12, 1, 1, "", "abs"], [12, 1, 1, "", "abs_"], [12, 1, 1, "", "acos"], [12, 1, 1, "", "acos_"], [12, 1, 1, "", "add"], [12, 1, 1, "", "add_"], [12, 1, 1, "", "add_module"], [12, 1, 1, "", "addcdiv"], [12, 1, 1, "", "addcdiv_"], [12, 1, 1, "", "addcmul"], [12, 1, 1, "", "addcmul_"], [12, 1, 1, "", "all"], [12, 1, 1, "", "amax"], [12, 1, 1, "", "amin"], [12, 1, 1, "", "any"], [12, 1, 1, "", "apply"], [12, 1, 1, "", "apply_"], [12, 1, 1, "", "asin"], [12, 1, 1, "", "asin_"], [12, 1, 1, "", "atan"], [12, 1, 1, "", "atan_"], [12, 1, 1, "", "auto_batch_size_"], [12, 1, 1, "", "auto_device_"], [12, 2, 1, "", "batch_dims"], [12, 2, 1, "", "batch_size"], [12, 1, 1, "", "bfloat16"], [12, 1, 1, "", "bitwise_and"], [12, 1, 1, "", "bool"], [12, 1, 1, "", "buffers"], [12, 1, 1, "", "bytes"], [12, 1, 1, "", "cat"], [12, 1, 1, "", "cat_from_tensordict"], [12, 1, 1, "", "cat_tensors"], [12, 1, 1, "", "ceil"], [12, 1, 1, "", "ceil_"], [12, 1, 1, "", "children"], [12, 1, 1, "", "chunk"], [12, 1, 1, "", "clamp"], [12, 1, 1, "", "clamp_max"], [12, 1, 1, "", "clamp_max_"], [12, 1, 1, "", "clamp_min"], [12, 1, 1, "", "clamp_min_"], [12, 1, 1, "", "clear"], [12, 1, 1, "", "clear_device_"], [12, 1, 1, "", "clear_refs_for_compile_"], [12, 1, 1, "", "clone"], [12, 1, 1, "", "compile"], [12, 1, 1, "", "complex128"], [12, 1, 1, "", "complex32"], [12, 1, 1, "", "complex64"], [12, 1, 1, "", "consolidate"], [12, 1, 1, "", "contiguous"], [12, 1, 1, "", "copy"], [12, 1, 1, "", "copy_"], [12, 1, 1, "", "copy_at_"], [12, 1, 1, "", "cos"], [12, 1, 1, "", "cos_"], [12, 1, 1, "", "cosh"], [12, 1, 1, "", "cosh_"], [12, 1, 1, "", "cpu"], [12, 1, 1, "", "create_nested"], [12, 1, 1, "", "cuda"], [12, 1, 1, "", "cummax"], [12, 1, 1, "", "cummin"], [12, 2, 1, "", "data"], [12, 1, 1, "", "data_ptr"], [12, 1, 1, "", "del_"], [12, 1, 1, "", "densify"], [12, 2, 1, "", "depth"], [12, 1, 1, "", "detach"], [12, 1, 1, "", "detach_"], [12, 2, 1, "", "device"], [12, 1, 1, "", "dim"], [12, 1, 1, "", "div"], [12, 1, 1, "", "div_"], [12, 1, 1, "", "double"], [12, 2, 1, "", "dtype"], [12, 1, 1, "", "dumps"], [12, 1, 1, "", "empty"], [12, 1, 1, "", "entry_class"], [12, 1, 1, "", "erf"], [12, 1, 1, "", "erf_"], [12, 1, 1, "", "erfc"], [12, 1, 1, "", "erfc_"], [12, 1, 1, "", "eval"], [12, 1, 1, "", "exclude"], [12, 1, 1, "", "exp"], [12, 1, 1, "", "exp_"], [12, 1, 1, "", "expand"], [12, 1, 1, "", "expand_as"], [12, 1, 1, "", "expm1"], [12, 1, 1, "", "expm1_"], [12, 1, 1, "", "extra_repr"], [12, 1, 1, "", "fill_"], [12, 1, 1, "", "filter_empty_"], [12, 1, 1, "", "filter_non_tensor_data"], [12, 1, 1, "", "flatten"], [12, 1, 1, "", "flatten_keys"], [12, 1, 1, "", "float"], [12, 1, 1, "", "float16"], [12, 1, 1, "", "float32"], [12, 1, 1, "", "float64"], [12, 1, 1, "", "floor"], [12, 1, 1, "", "floor_"], [12, 1, 1, "", "forward"], [12, 1, 1, "", "frac"], [12, 1, 1, "", "frac_"], [12, 1, 1, "", "from_any"], [12, 1, 1, "", "from_dataclass"], [12, 1, 1, "", "from_dict"], [12, 1, 1, "", "from_dict_instance"], [12, 1, 1, "", "from_h5"], [12, 1, 1, "", "from_module"], [12, 1, 1, "", "from_modules"], [12, 1, 1, "", "from_namedtuple"], [12, 1, 1, "", "from_pytree"], [12, 1, 1, "", "from_struct_array"], [12, 1, 1, "", "from_tuple"], [12, 1, 1, "", "fromkeys"], [12, 1, 1, "", "gather"], [12, 1, 1, "", "gather_and_stack"], [12, 1, 1, "", "get"], [12, 1, 1, "", "get_at"], [12, 1, 1, "", "get_buffer"], [12, 1, 1, "", "get_extra_state"], [12, 1, 1, "", "get_item_shape"], [12, 1, 1, "", "get_non_tensor"], [12, 1, 1, "", "get_parameter"], [12, 1, 1, "", "get_submodule"], [12, 2, 1, "", "grad"], [12, 1, 1, "", "half"], [12, 1, 1, "", "int"], [12, 1, 1, "", "int16"], [12, 1, 1, "", "int32"], [12, 1, 1, "", "int64"], [12, 1, 1, "", "int8"], [12, 1, 1, "", "ipu"], [12, 1, 1, "", "irecv"], [12, 1, 1, "", "is_consolidated"], [12, 1, 1, "", "is_contiguous"], [12, 1, 1, "", "is_empty"], [12, 2, 1, "", "is_memmap"], [12, 2, 1, "", "is_shared"], [12, 1, 1, "", "isend"], [12, 1, 1, "", "isfinite"], [12, 1, 1, "", "isnan"], [12, 1, 1, "", "isneginf"], [12, 1, 1, "", "isposinf"], [12, 1, 1, "", "isreal"], [12, 1, 1, "", "items"], [12, 1, 1, "", "keys"], [12, 1, 1, "", "lazy_stack"], [12, 1, 1, "", "lerp"], [12, 1, 1, "", "lerp_"], [12, 1, 1, "", "lgamma"], [12, 1, 1, "", "lgamma_"], [12, 1, 1, "", "load"], [12, 1, 1, "", "load_"], [12, 1, 1, "", "load_memmap"], [12, 1, 1, "", "load_memmap_"], [12, 1, 1, "", "load_state_dict"], [12, 1, 1, "", "lock_"], [12, 1, 1, "", "log"], [12, 1, 1, "", "log10"], [12, 1, 1, "", "log10_"], [12, 1, 1, "", "log1p"], [12, 1, 1, "", "log1p_"], [12, 1, 1, "", "log2"], [12, 1, 1, "", "log2_"], [12, 1, 1, "", "log_"], [12, 1, 1, "", "logical_and"], [12, 1, 1, "", "logsumexp"], [12, 1, 1, "", "make_memmap"], [12, 1, 1, "", "make_memmap_from_storage"], [12, 1, 1, "", "make_memmap_from_tensor"], [12, 1, 1, "", "map"], [12, 1, 1, "", "map_iter"], [12, 1, 1, "", "masked_fill"], [12, 1, 1, "", "masked_fill_"], [12, 1, 1, "", "masked_select"], [12, 1, 1, "", "max"], [12, 1, 1, "", "maximum"], [12, 1, 1, "", "maximum_"], [12, 1, 1, "", "maybe_dense_stack"], [12, 1, 1, "", "mean"], [12, 1, 1, "", "memmap"], [12, 1, 1, "", "memmap_"], [12, 1, 1, "", "memmap_like"], [12, 1, 1, "", "memmap_refresh_"], [12, 1, 1, "", "min"], [12, 1, 1, "", "minimum"], [12, 1, 1, "", "minimum_"], [12, 1, 1, "", "modules"], [12, 1, 1, "", "mtia"], [12, 1, 1, "", "mul"], [12, 1, 1, "", "mul_"], [12, 1, 1, "", "named_apply"], [12, 1, 1, "", "named_buffers"], [12, 1, 1, "", "named_children"], [12, 1, 1, "", "named_modules"], [12, 1, 1, "", "named_parameters"], [12, 2, 1, "", "names"], [12, 1, 1, "", "nanmean"], [12, 1, 1, "", "nansum"], [12, 2, 1, "", "ndim"], [12, 1, 1, "", "ndimension"], [12, 1, 1, "", "neg"], [12, 1, 1, "", "neg_"], [12, 1, 1, "", "new_empty"], [12, 1, 1, "", "new_full"], [12, 1, 1, "", "new_ones"], [12, 1, 1, "", "new_tensor"], [12, 1, 1, "", "new_zeros"], [12, 1, 1, "", "non_tensor_items"], [12, 1, 1, "", "norm"], [12, 1, 1, "", "numel"], [12, 1, 1, "", "numpy"], [12, 1, 1, "", "param_count"], [12, 1, 1, "", "parameters"], [12, 1, 1, "", "permute"], [12, 1, 1, "", "pin_memory"], [12, 1, 1, "", "pin_memory_"], [12, 1, 1, "", "pop"], [12, 1, 1, "", "popitem"], [12, 1, 1, "", "pow"], [12, 1, 1, "", "pow_"], [12, 1, 1, "", "prod"], [12, 1, 1, "", "qint32"], [12, 1, 1, "", "qint8"], [12, 1, 1, "", "quint4x2"], [12, 1, 1, "", "quint8"], [12, 1, 1, "", "reciprocal"], [12, 1, 1, "", "reciprocal_"], [12, 1, 1, "", "record_stream"], [12, 1, 1, "", "recv"], [12, 1, 1, "", "reduce"], [12, 1, 1, "", "refine_names"], [12, 1, 1, "", "register_backward_hook"], [12, 1, 1, "", "register_buffer"], [12, 1, 1, "", "register_forward_hook"], [12, 1, 1, "", "register_forward_pre_hook"], [12, 1, 1, "", "register_full_backward_hook"], [12, 1, 1, "", "register_full_backward_pre_hook"], [12, 1, 1, "", "register_get_post_hook"], [12, 1, 1, "", "register_load_state_dict_post_hook"], [12, 1, 1, "", "register_load_state_dict_pre_hook"], [12, 1, 1, "", "register_module"], [12, 1, 1, "", "register_parameter"], [12, 1, 1, "", "register_state_dict_post_hook"], [12, 1, 1, "", "register_state_dict_pre_hook"], [12, 1, 1, "", "rename"], [12, 1, 1, "", "rename_"], [12, 1, 1, "", "rename_key_"], [12, 1, 1, "", "repeat"], [12, 1, 1, "", "repeat_interleave"], [12, 1, 1, "", "replace"], [12, 1, 1, "", "requires_grad_"], [12, 1, 1, "", "reshape"], [12, 1, 1, "", "round"], [12, 1, 1, "", "round_"], [12, 1, 1, "", "save"], [12, 2, 1, "", "saved_path"], [12, 1, 1, "", "select"], [12, 1, 1, "", "send"], [12, 1, 1, "", "separates"], [12, 1, 1, "", "set"], [12, 1, 1, "", "set_"], [12, 1, 1, "", "set_at_"], [12, 1, 1, "", "set_extra_state"], [12, 1, 1, "", "set_non_tensor"], [12, 1, 1, "", "set_submodule"], [12, 1, 1, "", "setdefault"], [12, 2, 1, "", "shape"], [12, 1, 1, "", "share_memory"], [12, 1, 1, "", "share_memory_"], [12, 1, 1, "", "sigmoid"], [12, 1, 1, "", "sigmoid_"], [12, 1, 1, "", "sign"], [12, 1, 1, "", "sign_"], [12, 1, 1, "", "sin"], [12, 1, 1, "", "sin_"], [12, 1, 1, "", "sinh"], [12, 1, 1, "", "sinh_"], [12, 1, 1, "", "size"], [12, 1, 1, "", "softmax"], [12, 2, 1, "", "sorted_keys"], [12, 1, 1, "", "split"], [12, 1, 1, "", "split_keys"], [12, 1, 1, "", "sqrt"], [12, 1, 1, "", "sqrt_"], [12, 1, 1, "", "squeeze"], [12, 1, 1, "", "stack"], [12, 1, 1, "", "stack_from_tensordict"], [12, 1, 1, "", "stack_tensors"], [12, 1, 1, "", "state_dict"], [12, 1, 1, "", "std"], [12, 1, 1, "", "sub"], [12, 1, 1, "", "sub_"], [12, 1, 1, "", "sum"], [12, 1, 1, "", "tan"], [12, 1, 1, "", "tan_"], [12, 1, 1, "", "tanh"], [12, 1, 1, "", "tanh_"], [12, 1, 1, "", "to"], [12, 1, 1, "", "to_dict"], [12, 1, 1, "", "to_empty"], [12, 1, 1, "", "to_h5"], [12, 1, 1, "", "to_module"], [12, 1, 1, "", "to_namedtuple"], [12, 1, 1, "", "to_padded_tensor"], [12, 1, 1, "", "to_pytree"], [12, 1, 1, "", "to_struct_array"], [12, 1, 1, "", "to_tensordict"], [12, 1, 1, "", "train"], [12, 1, 1, "", "transpose"], [12, 1, 1, "", "trunc"], [12, 1, 1, "", "trunc_"], [12, 1, 1, "", "type"], [12, 1, 1, "", "uint16"], [12, 1, 1, "", "uint32"], [12, 1, 1, "", "uint64"], [12, 1, 1, "", "uint8"], [12, 1, 1, "", "unbind"], [12, 1, 1, "", "unflatten"], [12, 1, 1, "", "unflatten_keys"], [12, 1, 1, "", "unlock_"], [12, 1, 1, "", "unsqueeze"], [12, 1, 1, "", "update"], [12, 1, 1, "", "update_"], [12, 1, 1, "", "update_at_"], [12, 1, 1, "", "values"], [12, 1, 1, "", "var"], [12, 1, 1, "", "view"], [12, 1, 1, "", "where"], [12, 1, 1, "", "xpu"], [12, 1, 1, "", "zero_"], [12, 1, 1, "", "zero_grad"]], "tensordict.nn": [[41, 0, 1, "", "CudaGraphModule"], [42, 0, 1, "", "EnsembleModule"], [43, 0, 1, "", "ProbabilisticTensorDictModule"], [44, 0, 1, "", "ProbabilisticTensorDictSequential"], [45, 0, 1, "", "TensorDictModule"], [46, 0, 1, "", "TensorDictModuleBase"], [47, 0, 1, "", "TensorDictModuleWrapper"], [48, 0, 1, "", "TensorDictSequential"], [49, 0, 1, "", "WrapModule"], [50, 0, 1, "", "biased_softplus"], [51, 0, 1, "", "composite_lp_aggregate"], [52, 0, 1, "", "dispatch"], [59, 4, 1, "", "inv_softplus"], [60, 4, 1, "", "make_tensordict"], [61, 4, 1, "", "rand_one_hot"], [62, 0, 1, "", "set_composite_lp_aggregate"], [63, 0, 1, "", "set_skip_existing"], [64, 4, 1, "", "skip_existing"]], "tensordict.nn.ProbabilisticTensorDictModule": [[43, 1, 1, "", "build_dist_from_params"], [43, 2, 1, "", "dist_params_keys"], [43, 2, 1, "", "dist_sample_keys"], [43, 1, 1, "", "forward"], [43, 1, 1, "", "get_dist"], [43, 1, 1, "", "log_prob"]], "tensordict.nn.ProbabilisticTensorDictSequential": [[44, 1, 1, "", "build_dist_from_params"], [44, 2, 1, "", "default_interaction_type"], [44, 2, 1, "", "dist_params_keys"], [44, 2, 1, "", "dist_sample_keys"], [44, 1, 1, "", "forward"], [44, 1, 1, "", "get_dist"], [44, 1, 1, "", "get_dist_params"], [44, 1, 1, "", "log_prob"]], "tensordict.nn.TensorDictModule": [[45, 1, 1, "", "forward"]], "tensordict.nn.TensorDictModuleBase": [[46, 1, 1, "", "is_tdmodule_compatible"], [46, 1, 1, "", "reset_out_keys"], [46, 1, 1, "", "reset_parameters_recursive"], [46, 1, 1, "", "select_out_keys"]], "tensordict.nn.TensorDictModuleWrapper": [[47, 1, 1, "", "forward"]], "tensordict.nn.TensorDictSequential": [[48, 1, 1, "", "forward"], [48, 1, 1, "", "reset_out_keys"], [48, 1, 1, "", "select_out_keys"], [48, 1, 1, "", "select_subsequence"]], "tensordict.nn.WrapModule": [[49, 1, 1, "", "forward"]], "tensordict.nn.distributions": [[53, 0, 1, "", "AddStateIndependentNormalScale"], [54, 0, 1, "", "CompositeDistribution"], [55, 0, 1, "", "Delta"], [56, 0, 1, "", "NormalParamExtractor"], [57, 0, 1, "", "OneHotCategorical"], [58, 0, 1, "", "TruncatedNormal"]], "tensordict.utils": [[73, 0, 1, "", "expand_as_right"], [74, 0, 1, "", "expand_right"], [75, 0, 1, "", "isin"], [76, 0, 1, "", "remove_duplicates"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:attribute", "4": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"]}, "titleterms": {"tensordict": [0, 2, 3, 10, 42, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 78, 80, 81, 83, 84, 87, 90, 91, 92, 93, 94], "distribut": [0, 53, 54, 55, 56, 57, 58, 78, 92], "set": [0, 90, 95], "creat": [0, 3], "memori": [0, 80, 81, 91, 93], "map": [0, 80, 81, 91], "oper": [0, 3, 80], "tensor": [0, 3, 80, 91], "across": 0, "node": 0, "trace": 1, "tensordictmodul": [1, 3, 45, 78, 84, 92], "tensordictsequenti": [1, 48], "welcom": 2, "document": 2, "instal": 2, "tutori": 2, "basic": 2, "nn": [2, 42, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 78], "dataload": [2, 83, 88], "content": [2, 90], "indic": 2, "tabl": 2, "overview": 3, "motiv": 3, "featur": 3, "escap": 3, "shape": [3, 94], "non": 3, "data": [3, 87, 89], "access": 3, "batch": [3, 89, 94], "stack": [3, 71, 87, 92, 94], "name": 3, "dimens": [3, 94], "nest": [3, 84, 90], "lazi": 3, "evalu": 3, "pre": [3, 93], "alloc": [3, 93], "lazystackedtensordict": 4, "memorymappedtensor": [5, 81], "nontensordata": 6, "nontensorstack": 7, "persistenttensordict": 8, "tensorclass": [9, 72, 79, 81, 88, 89], "tensordictbas": 11, "tensordictparam": 12, "capture_non_tensor_stack": 13, "cat": 14, "default_is_leaf": 15, "dense_stack_td": 16, "from_ani": 17, "from_consolid": 18, "from_dataclass": 19, "from_dict": 20, "from_h5": 21, "from_modul": [22, 23], "from_namedtupl": 24, "from_pytre": 25, "from_struct_arrai": 26, "from_tupl": 27, "fromkei": 28, "get_defaults_to_non": 29, "is_batchedtensor": 30, "is_leaf_nontensor": 31, "is_tensor_collect": 32, "lazy_legaci": 33, "lazy_stack": 34, "load": [35, 81, 89], "load_memmap": 36, "make_tensordict": [37, 60], "maybe_dense_stack": 38, "memmap": 39, "merge_tensordict": 40, "cudagraphmodul": 41, "ensemblemodul": 42, "probabilistictensordictmodul": [43, 92], "probabilistictensordictsequenti": 44, "tensordictmodulebas": 46, "tensordictmodulewrapp": 47, "wrapmodul": 49, "biased_softplu": 50, "composite_lp_aggreg": 51, "dispatch": 52, "addstateindependentnormalscal": 53, "compositedistribut": 54, "delta": 55, "normalparamextractor": 56, "onehotcategor": 57, "truncatednorm": 58, "inv_softplu": 59, "rand_one_hot": 61, "set_composite_lp_aggreg": 62, "set_skip_exist": 63, "skip_exist": 64, "pad": 65, "pad_sequ": 66, "parse_tensor_dict_str": 67, "save": [68, 81, 84], "set_capture_non_tensor_stack": 69, "set_lazy_legaci": 70, "expand_as_right": 73, "expand_right": 74, "isin": 75, "remove_dupl": 76, "api": 77, "refer": 77, "packag": [78, 80], "ensembl": 78, "compil": 78, "util": [78, 80], "serial": 79, "edg": 79, "case": [79, 81], "auto": 79, "cast": 79, "constructor": 80, "handler": 80, "context": 80, "manag": [80, 91], "pointwis": 80, "support": [80, 92], "perform": 80, "exampl": [80, 92], "1": 80, "2": 80, "3": 80, "scalar": 80, "broadcast": 80, "rule": 80, "effici": 80, "handl": [80, 81], "miss": 80, "entri": 80, "object": 81, "memmori": 81, "exist": [81, 90], "torchsnapshot": 81, "compat": 81, "gener": 81, "us": [81, 83, 84, 88, 92, 94], "big": 81, "dataset": [81, 83, 88], "comput": [82, 86], "time": [82, 86], "model": [83, 84, 88], "optim": [83, 88], "paramet": [83, 88], "export": 84, "modul": [84, 92], "prerequisit": 84, "kei": [84, 90, 92], "learn": 84, "design": 84, "torch": 84, "work": [84, 92], "select": [84, 90], "output": 84, "control": 84, "sampl": 84, "strategi": 84, "next": 84, "step": 84, "further": 84, "read": 84, "readm": 85, "tuto": 85, "build": 87, "from": 87, "stream": 87, "heterogen": 87, "togeth": 87, "asynchron": 87, "conclus": [87, 92], "manipul": [90, 94], "get": 90, "renam": 90, "updat": 90, "multipl": [90, 92], "valu": [90, 94, 95], "iter": 90, "over": 90, "s": [90, 92], "check": 90, "flatten": 90, "unflatten": 90, "exclud": 90, "simplifi": 91, "pytorch": 91, "devic": 91, "simpl": 92, "code": 92, "recurr": 92, "layer": 92, "callabl": 92, "input": 92, "without": 92, "runtim": 92, "do": 92, "don": 92, "t": 92, "index": [94, 95], "reshap": 94, "split": 94, "unbind": 94, "concaten": 94, "expand": 94, "squeez": 94, "unsqueez": 94, "view": 94, "permut": 94, "decor": 94, "gather": 94, "slice": 95, "mask": 95}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 56}})